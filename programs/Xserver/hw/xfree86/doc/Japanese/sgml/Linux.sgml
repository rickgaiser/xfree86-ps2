<!DOCTYPE linuxdoc PUBLIC "-//XFree86//DTD linuxdoc//EN">
 
<article>

<!-- 
<title>Information for Linux Users
-->
<title>Linux ユーザ向けの情報
<author>Orest Zborowski, Dirk Hohndel
<date>June 25, 1999
<trans>The X Japanese Documentation Project
<tdate>August 1, 1999
<toc>

<!-- <sect>Linux versions on which XFree86 has been tested <p> -->
<sect> XFree86 をテストした Linux のバージョン <p>
<!--
XFree86 has been tested with Linux version 2.0.36, 2.2.7 and several 
2.3.x kernels.
It should work with any version since 1.0 without change. 
Binaries both against libc5 and libc6 are available.
-->
XFree86 は Linux のバージョン 2.0.36 と 2.2.7、および 2.3.x カーネルの
一部のバージョンでテスト済みです。
1.0 以降のバージョンでは、XFree86 を変更しなくても動作するはずです。
libc5 用と libc6 用の両方のバイナリが用意されています。

<!-- <sect>Backwards Compatibility <p> -->
<sect> 前のバージョンとの互換性 <p>
<!--
X11R6 is considered a major update from X11R5, so the shared
libraries in XFree86 3.1 and later are not compatible with XFree86 2.1.1
and older libraries. To continue to run X11R5 applications, you must keep
the old libraries somewhere on your machine. They can be moved from
<tt>/usr/X386/lib</tt> elsewhere, but <tt>/etc/ld.so.conf</tt> must be updated.
All X11R5 applications should work with the X11R6 servers without problems.
-->
X11R6 は X11R5 から大幅に変更されていますので、XFree86-3.1 以降の共有
ライブラリは、XFree86-2.1.1 以前の古いライブラリと互換性がありません。
X11R5 のアプリケーションを実行するには、マシンのどこかに古いライブラリ
を保存しておかなければいけません。古いライブラリは 
<tt>/usr/X386/lib</tt>からどこかへ移動させることができますが、その場合
は<tt>/etc/ld.so.conf</tt> は更新しなければいけません。全ての X11R5 の
アプリケーションは問題無く X11R6 のサーバと一緒に動作するでしょう。

<!--
X11R6.1 is yet another update to X11R6. While the minor number for some
libraries has been increased to '1' it is believed to be fully
compatible with X11R6 based applications.
-->
X11R6.1 はX11R6 をさらに更新した版です。 マイナー番号が '1' 増加してい
るライブラリもありますが、そのライブラリは X11R6 で動作するアプリケー
ションと完全に互換性があるはずです。

<!--
X11R6.3 is yet another update to X11R6.1. While the minor number for some
libraries has been increased to '3' it is believed to be fully
compatible with X11R6 based applications.
-->
X11R6.3 は X11R6.1 をさらに更新した版です。マイナー番号が '3' に増えて
いるライブラリもありますが、そのライブラリは X11R6 で動作するアプリケー
ションと完全に互換性があるはずです。

<!--
Very old binaries (linked to XFree86-1.2, XFree86-1.3 or
XFree86-2.0 libraries) will continue to work, but may need an explicit
symlink from <tt>/lib/libX{11,t,aw}.so.3</tt> to
<tt>/usr/X386/lib/libX{11,t,aw}.so.3</tt>.
-->
(XFree86-1.2、XFree86-1.3 または XFree86-2.0 ライブラリにリンクされて
いる)非常に古いバイナリは引き続き動作しますが、<tt>/lib/libX{11,t,aw}.so.3</tt>
から <tt>/usr/X386/lib/libX{11,t,aw}.so.3</tt> へ明示的にシンボリックリンク
を張る必要があります。

<!-- <sect>Installing XFree86 <p> -->
<sect> XFree86 のインストール <p>
<!--
Starting with version 3.0, XFree86 is installed in <tt>/usr/X11R6</tt>. 
The installation details are provided in the <htmlurl name="RELNOTES"
url="RELNOTES.html">.
-->
バージョン 3.0 以降、XFree86 は <tt>/usr/X11R6</tt> にインストールされ
ます。インストールの詳しい手順は、<htmlurl name="RELNOTES" url="RELNOTES.html">
で説明されています。

<!-- <sect>Running XFree86 <p> -->
<sect> XFree86 を動作させるには <p>
<!--
XFree86 requires about 4mb of virtual memory to run, although
having 16mb of RAM is probably the minimum comfortable configuration. A 387
coprocessor is helpful for 386 machines, although greater gains in
interactive performance are obtained with an increase in physical memory.
Also, a faster graphics card, bus or RAM, will improve server performance.
-->
XFree86 を動作させるためには 4MB の仮想メモリが必要ですが、快適に動作させ
るための最低限の環境としては、多分 16MB の実記憶があったほうがいいでしょ
う。386 マシンの性能向上に 387 コプロセッサは有効ですが、物理的なメモ
リを増設したほうが対話処理の速度は格段に向上します。また、高速なグラフィッ
クカードやバス、メモリを使えばサーバの性能は向上するでしょう。

<!--
After unpacking the tar files, you need to include <tt>/usr/X11R6/lib</tt>
in <tt>/etc/ld.so.conf</tt> (where it should already be by default) or in your
<tt>LD_LIBRARY_PATH</tt> environment variable. Also, the configuration file
<tt>/etc/XF86Config</tt> or <tt>/usr/X11R6/lib/X11/XF86Config</tt> 
<em>must</em> be properly filled out
based on the host setup. Ideally this is done using <tt>XF86Setup</tt> or (if
for some reason this doesn't work) using <tt>xf86config</tt>. If you really
insist in hand-creating your config file use <tt>XF86Config.eg</tt> as a 
starting point and <tt>README.Config</tt> as
guideline.  You may damage your hardware if you use a wrong
<tt>XF86Config</tt> file, so <em>read the docs</em>,
especially the man pages and the other <tt>README</tt> files in
<tt>/usr/X11R6/lib/X11/doc</tt>.
-->
tar ファイルを展開したら、<tt>/etc/ld.so.conf</tt> か
<tt>LD_LIBRARY_PATH</tt> 環境変数に <tt>/usr/X11R6/lib</tt> を定義する
必要があります(<tt>/etc/ld.so.conf</tt> のデフォルト値は既にそうなって
いるはずです)。また、設定ファイルである <tt>/etc/XF86Config</tt> か 
<tt>/usr/X11R6/lib/X11/XF86Config</tt> はホストの設定に基づいて、適切
な値を<em>記述しなければなりません</em>。理想的にはこの設定は
<tt>XF86Setup</tt> か(何らかの理由で <tt>XF86Setup</tt> が動作しない場
合には)<tt>xf86config</tt>を使って行います。どうしても設定ファイルを手
で書きたい場合には、<tt>XF86Config.eg</tt> を雛型に、
<tt>README.Config</tt> をガイドラインに使ってください。
<tt>XF86Config</tt> ファイルの設定を間違えるとハードウェアを壊してしま
うこともあるので、<em>ドキュメントはちゃんと読みましょう</em>。特に
オンラインマニュアルや <tt>/usr/X11R6/lib/X11/doc</tt> ディレクトリに
ある他の README は必ず読みましょう。

<!--
XFree86 has the ability to perform VT switching to and from the X
server. When first started, XFree86 will automatically locate the first
available VT (one that hasn't been opened by any process), and run on that
VT.  If there isn't one available, XFree86 will terminate with an error
message.  The server can be run on a specific VT by using the
``vt&lt;nn&gt;'' option, where
 &lt;nn&gt; is the number of an available VT (starting from 1). If
you don't have a free VT XFree86 cannot run. Normally you can simply disable 
one of the <tt>getty</tt> programs in <tt>/etc/inittab</tt>, but if this is
not an option, you can increase the number of
available VTs by increasing the value of <tt>NR_CONSOLES</tt> in
<tt>include/linux/tty.h</tt> and recompiling the kernel.
-->
XFree86 には、X サーバから仮想端末へ、また仮想端末からサーバへ画面を切
替える機能があります。最初に X サーバを 起動するときは、XFree86 は利用
可能な最初の仮想端末(他のプロセスがオープンしていないもの)を自動的に見
つけ、その仮想端末上で X サーバを起動します。その仮想端末が使用不可の
場合、XFree86 はエラーメッセージを出して終了します。``vt&lt;nn&gt;'' 
というオプションを付けることによって、指定した仮想端末でサーバを実行で
きます。ここで &lt;nn&gt; は使用可能な仮想端末の番号です(1 から始まり
ます)。空いている仮想端末がないときは、XFree86 は起動できません。通常
は単に <tt>/etc/inittab</tt> ファイルで <tt>getty</tt> の1つを無効にす
れば良いのですが、これを行いたくない場合には仮想端末の数を増やすことも
できます。仮想端末の数を増やすには、<tt>include/linux/tty.h</tt> ファ
イル中の <tt>NR_CONSOLES</tt> の値を増やし、カーネルを再コンパイルしま
す。

<!--
Once running inside X, switching to another VT is accomplished by
pressing Ctrl-Alt-&lt;Fnn&gt; where nn is the number of the VT to switch to.
To return to the server, press the proper key-combination that moves you back
to the VT that XFree86 is using: by default, this is Alt-&lt;Fmm&gt;, where
mm is the number of the VT the server is running on (this number is printed
when the server is started).  Note that this is NOT the VT from which the
server was started.
-->
XFree86 が動作してしまえば、Ctrl-Alt-&lt;Fnn&gt という組合せのキーを押
すことで他の仮想端末に切替えることができます。ここで nn は切り替えたい
仮想端末の番号です。X サーバに戻るときは、サーバが使っている仮想端末の
番号を表わす適切なキーの組み合わせを押します。デフォルトでは、この組み
合わせは Alt-&lt;Fmm&gt; です。ここで、mm はサーバが動いている仮想端末
の番号です(この番号はサーバ起動時に表示されます)。この仮想端末はサーバ
を起動した仮想端末<em>ではない</em>ことに注意してください。

<!--
NOTE: you can redefine the text-mode keybindings with the
`<tt>loadkeys</tt>' command found in the <tt>kbd-0.81.tar.gz</tt>
archive (or a later version thereof).
With this, you can (for example) make Ctrl-Alt-&lt;Fmm&gt; work from text mode
the same way it works under the XFree86 server.
-->
注意: <tt>kbd-0.81.tar.gz</tt> (または新しいバージョンの kbd パッケー
ジ)に含まれる `<tt>loadkeys</tt>' コマンドを使ってテキストモードのキー
割り当てを再定義することができます。これを使えば、Ctrl-Alt-&lt;Fmm&gt; 
の動作を XFree86 サーバ上での動作と同じにすることができます。

<!--
When the server is exited, it will return to the original VT it was
started from, unless it dies unexpectedly, when the switch must be done
manually. There still seem to be weird combinations of graphic cards and
motherboards that have problems to restore the textfont when returning from
XFree86 to the text mode. In these cases using the <tt>runx</tt> script from
the <bf>svgalib</bf> distribution might help.
-->
サーバを終了させるとサーバを起動した仮想端末に戻りますが、もしサーバを
起動した仮想端末が死んでしまったときは、手動で戻さなければなりません。
未だに相性の悪いグラフィックスカードとマザーボードがあり、XFree86 から
テキストモードに戻るとテキストフォントが元に戻らないことがあります。こ
のような時は、<bf>svgalib</bf> というパッケージに入っている 
<tt>runx</tt> というスクリプトを実行するとよいでしょう。

<!--
The XFree86 server now queries the kernel to obtain the key binding
in effect at startup. These bindings are either the default map in place
when the kernel was compiled, or reloaded using the
`<tt>loadkeys</tt>' utility. Not
all keys are bound: kernel-specific, multiple keysym, and dead keys are not
handled by the server. All others are translated to their X equivalents.
Note that the XFree86 server only allows for four modifier maps: unshifted,
shifted, modeswitch unshifted and modeswitch shifted.  Depending on what
the modeswitch key is (it is configurable in your <tt>XF86Config</tt> and defaults
to Alt),
XFree86 will read those tables into its keymaps.  This means if you use
certain keys, like left-Control, for Linux modeswitch, that will not be
mappable to X.
-->
現在のXFree86 サーバは、起動時にカーネルに対して問い合わせを行い、現在
有効になっているキー割り当てを取得します。この割り当てはカーネルをコン
パイルしたとき設定される初期値か、または `<tt>loadkeys</tt>' ユーティ
リティによって書き替えた値になります。必ずしも全てのキーを割り当てるこ
とはできません。具体的には、サーバはカーネルに依存したものや複数のキー
シンボルの組み合わせ、無効なキーを割り当てることはできません。その他の
キーは全て X に置ける同等のキーに変換されます。XFre86 のサーバは、4種
類のモディファイアマップ(シフトしてない状態、シフト状態、モードスイッ
チを押していない状態と、モードスイッチを押している状態)しか使うことが
できない点に注意してください。モードスイッチがどのキーであるかによって
(これは <tt>XF86Config</tt> で設定可能で、初期値は Alt キーです)、
XFree86 はこれらのテーブルをキーマップに読み込みます。これは、Linux の
モードスイッチに左コントロールキーの様な特定のキーを使っている場合、こ
れを X では割り当てられないことを意味します。

<!-- <sect>Installing Xdm, the display manager -->
<sect> ディスプレイマネージャ xdm のインストール
<p>

<!--
Since xdm is dynamically linked, there's no issue on
export restriction outside US for this binary distribution of xdm: it
does not contain the DES encryption code. So it's now included in the
bin package.
-->
xdm は動的にリンクされているので、xdm のバイナリ配布物をアメリカ国外へ
配布しても輸出制限には引っかかりません。xdm のバイナリは DES の暗号化
プログラムを含んでいないからです。従って現在、バイナリパッケージに xdm 
が含まれています。

<!--
However the file <tt>xc/lib/Xdmcp/WrapHelp.c</tt> is not included in the
XFree86-3.3 source, so support for
XDM-AUTHORIZATION-1 is not included here. You'll have to get
WrapHelp.c and rebuild xdm after having set <tt/HasXdmAuth/ in
<tt/xf86site.def/.
-->
<tt>xc/lib/Xdmcp/WrapHelp.c</tt> というファイルが XFree86-3.3 のソース
に含まれていないので、XDM-AUTHORIZATION-1 はサポートされていません。こ
れをサポートするためには WrapHelp.c を入手し、<tt/xf86site.def/ ファイ
ルに <tt/HasXdmAuth/ を設定した後で xdm を再構築する必要があります。

<!--
The file is available within the US; for
details see <htmlurl name="ftp.x.org:/pub/R6/xdm-auth/README"
url="ftp://ftp.x.org/pub/R6/xdm-auth/README">.
-->
WrapHelp.c はアメリカ国内にあります。詳細は
<htmlurl name="ftp.x.org:/pub/R6/xdm-auth/README"
url="ftp://ftp.x.org/pub/R6/xdm-auth/README">
をご覧ください。

<!--
To start the display manager, log in as root on the console and type:
``<tt/xdm -nodaemon/''.
-->
ディスプレイマネージャを起動するには、root ユーザでログインしてコンソー
ルから ``<tt/xdm -nodaemon/'' と入力してください。

<!--
You can start xdm automatically on bootup by disabling the console getty
and modifying <tt>/etc/inittab</tt>. Details about this setup depend on the
Linux distribution that you use, so check the documentation provided there.
-->
コンソールの getty を無効にし、 <tt>/etc/inittab</tt> を変更することにより
ブート時に自動的に xdm を起動することができます。設定の細かい部分は使
用している Linux 配布物の xdm の設定によって異なるので、そちらの文書で
確認してください。

<!--
The xdm binary provided should run with both shadow- and non-shadow password
systems.
-->
xdm バイナリ配布物はシャドウパスワードと普通のパスワードのシステムの両方で
動作するでしょう。

<verb>
$XFree86: xc/programs/Xserver/hw/xfree86/doc/Japanese/sgml/Linux.sgml,v 3.2.2.3 1999/11/26 15:23:42 hohndel Exp $





$XConsortium: Linux.sgml /main/6 1996/10/28 04:47:37 kaleb $
</verb>

<sect>日本語訳について<p>
日本語訳は X Japanese Documentation Project が行いました(
翻訳(XFree86 3.2): 岡本一幸
<url url="mailto:ikko-@pacific.rim.or.jp" name="&lt;ikko-@pacific.rim.or.jp&gt;">,
更新(XFree86 3.3.3.1 対応): 藤原輝嘉
<url url="mailto:fujiwara@linux.or.jp" name="&lt;fujiwara@linux.or.jp&gt;">,
校正: 金田浩司  <url url="mailto:vanitas@ma3.seikyou.ne.jp"
name="&lt;vanitas@ma3.seikyou.ne.jp&gt;">,
更新(XFree86 3.3.4 対応): 藤原輝嘉)。
問題点の指摘やご意見は藤原まで御連絡ください。
原文の著作権は XFree86 プロジェクト社にあり、日本語訳の著作権は X Japanese
Documentation Project にあります。

</article>
