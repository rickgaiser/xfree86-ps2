<!DOCTYPE linuxdoc PUBLIC "-//XFree86//DTD linuxdoc//EN">

<article>
<!--
<title> README for XFree86 on FreeBSD
-->
<title>FreeBSD 用 XFree86 に関する README
<author>Rich Murphey, David Dawes
<date>8 November 1998
<trans>The X Japanese Documentation Project
<tdate>5 February 1999

<toc>
 
<!-- <sect>What and Where is XFree86? -->
<sect>XFree86 とその入手方法について

<p>
<!--
XFree86 is a port of X11R6.3 that supports several versions of
Intel-based Unix.  It is derived from X386 1.2, which was the X server
distributed with X11R5.  This release consists of many new features
and performance improvements as well as many bug fixes.
-->
XFree86 は X11R6.3 を Intel ベースの Unix のいくつかに移植したものです。
XFree86 は元々、 X386 1.2 という X11R5 と一緒に配布されていた X サーバ
でした。このリリースでは新しい機能がたくさん追加され、性能も改善されて
いますし、バグもたくさん修正されています。

<!--
For further details about this release, including installation instructions,
please refer to the <htmlurl name="Release Notes" url="RELNOTES.html">.
-->
このリリースについての詳細(インストール手順も含めて)については、
<htmlurl name="リリースノート" url="RELNOTES.html">を参照してください。

<!--
See the <htmlurl url="COPYRIGHT.html" name="Copyright Notice">.
-->
<htmlurl url="COPYRIGHT.html" name="著作権表示">には目を通しておいてく
ださい。

<!--
Binaries for XFree86 on FreeBSD 2.2.x and 3.0 are available from:
-->
FreeBSD 2.2.x, 3.0 用の XFree86 のバイナリは以下の場所で入手することが
できます:

<htmlurl name="ftp://ftp.XFree86.org/pub/XFree86/current/binaries/"
url="ftp://ftp.XFree86.org/pub/XFree86/current/binaries/">
<p>

<!--
Send email to <em/Rich-Murphey@Rice.edu/ or <em/XFree86@XFree86.org/
if you have comments or suggestions about this file and we'll revise
it.
-->
このドキュメントに関する意見や提案があれば、
<em/Rich-Murphey@Rice.edu/ か <em/XFree86@XFree86.org/ に電子メールで
お知らせください。ドキュメントを修正します。

<!-- <sect>FreeBSD 3.0 and ELF<p> -->
<sect>FreeBSD 3.0 と ELF 形式のバイナリ<p>

<!--
The FreeBSD-3.0 binary distribution is ELF only.  The Xbin.tgz tarball
contains a.out libraries for compatibility purposes.
-->
FreeBSD-3.0 のバイナリ配布は ELF 形式だけです。tar 形式のアーカイブで
ある Xbin.tgz には、互換性のために a.out 形式のライブラリも含まれてい
ます。

<!--
<sect>Installing The Display Manager (xdm)
-->
<sect>ディスプレイマネージャのインストール (xdm)

<p>
<!--
The display manager makes your PC look like an X terminal.  That is, it
presents you with a login screen that runs under X.
-->
ディスプレイマネージャを使うと PC が X 端末のようになります。つまり、X
上で動作するログイン画面が現われます。

<!--
The easiest way to automatically start the display manager on boot is to
add a line in <tt>/etc/ttys</tt> to start it on one of the unoccupied
virtual terminals:
-->
起動時にディスプレイマネージャを自動的に起動するための最も簡単な方法は、
<tt>/etc/ttys</tt> に行を追加して、使われていない仮想端末の 1 つで xdm
を起動させることです:

<tscreen><verb>
 ttyv4	"/usr/X11R6/bin/xdm -nodaemon" xterm	on secure
</verb></tscreen>

<!--
You should also make sure that <tt>/usr/X11R6/bin/X</tt> is a symbolic
link to the Xserver that matches your video card or edit the file
Xservers in <tt>/usr/X11R6/lib/X11/xdm</tt> to specify the pathname of
the X server.
-->
<tt>/usr/X11R6/bin/X</tt> をお使いのビデオカードに合った X サーバへの
シンボリックリンクにすることと、<tt>/usr/X11R6/lib/X11/xdm</tt> ディレ
クトリ内の Xservers ファイルを編集し、X サーバのパス名を指定することの
いずれかも必ず行いましょう。

<!--
The change to <tt>/etc/ttys</tt> won't take effect until you either
reboot or ``<tt/kill -HUP 1/'' to force initd to reread
<tt>/etc/ttys</tt>.  You can also test the display manager manually by
loging in as root on the console and typing ``<tt/xdm -nodaemon/''.
-->
<tt>/etc/ttys</tt> への変更が反映されるのは、リブート後か
``<tt/kill -HUP 1/'' を実行して <tt>/etc/ttys</tt> を再読み込みさせて
からです。root ユーザとしてコンソールからログインして
``<tt/xdm -nodaemon/'' を実行することで、ディスプレイマネージャを手動
でテストすることもできます。

<!--
<sect>Configuring X for Your Hardware
-->
<sect>ハードウェアに合わせた X の設定
<p>
<!--
The <tt/XF86Config/ file tells the X server what kind of monitor, video card
and mouse you have.  You <em/must/ create it to tell the server what
specific hardware you have.
-->
<tt/XF86Config/ は使っているモニタやビデオカード、マウスの種類を X サー
バに知らせます。<em/必ず/ <tt/XF86Config/ を作り、使っている特定のハー
ドウェアをサーバに知らせなければなりません。

<!--
It is strongly recommended that you read through the <htmlurl
name="QuickStart guide" url="QuickStart.html">, and use either
the `XF86Setup' utility (which requires the VGA16 server to be installed),
or the `xf86config' utility to generate an XF86Config file.
-->
<htmlurl name="QuickStart ガイド" url="QuickStart.html">を一通り読むこ
とと、`XF86Setup' ユーティリティ(インストールには VGA16 サーバが必要で
す)または `xf86config' ユーティリティを使って XF86Config ファイルを作
成することを強くお勧めします。

<!--
When you run the `XF86Setup' utility, do NOT touch the mouse until
you are finished with mouse set up.
Otherwise, the VGA16 server and the mouse device driver may get
confused and you may experience mouse and/or keyboard input problems.
-->
`XF86Setup' ユーティリティを実行する際には、マウスの設定を終えるまでは
マウスに<em/触ってはいけません/。さもないと、VGA16 サーバとマウスデバ
イスが混乱し、マウスやキーボードの入力の問題が起こるかもしれません。

<!--
If you are running ``<tt/moused/'' (see the man page for <tt/moused(8)/)
in FreeBSD versions 2.2.1 or later,
you MUST specify <tt>SysMouse</tt> as the mouse protocol type 
and <tt>/dev/sysmouse</tt> as the mouse device name,
regardless of the brand and model of your mouse.
-->
FreeBSD のバージョン 2.2.1 以降で ``<tt/moused/''(オンラインマニュアル
の <tt/moused(8)/ を参照) を実行している場合、マウスのブランドやモデル
に関係なく、マウスのプロトコルの種類には <tt>SysMouse</tt> を、マウス
のデバイス名には <tt>/dev/sysmouse</tt> を<em/指定しなければなりません/。

<!--
If you are NOT running ``<tt/moused/'', you need to know the interface
type of your mouse, <tt>/dev</tt> entry and the protocol type to use.
-->
``<tt/moused/'' を<em/実行していない/場合には、マウスのインタフェース
の種類と <tt>/dev</tt> のエントリ、使用するプロトコルを知っている必要
があります。

<!--
The interface type can be determined by looking at the connector 
of the mouse.
The serial mouse has a D-Sub female 9- or 25-pin connector.
The bus mouse has either a D-Sub male 9-pin connector 
or a round DIN 9-pin connector.
The PS/2 mouse is equipped with a small, round DIN 6-pin connector.
The USB mouse has a flat rectangular connector.
Some mice come with adapters with which the connector can 
be converted to another.  If you are to use such an adapter,
remember the connector at the very end of the mouse/adapter pair is 
what matters.
-->
インタフェースの種類はマウスのコネクタを見れば分かります。シリアルマウ
スの場合には D-Sub メスの 9 ピンまたは 25 ピンのコネクタが付いています。
バスマウスの場合には、D-Sub オスの 9 ピンコネクタか丸型 DIN の 9 ピン
コネクタが付いています。PS/2 マウスには小さい丸型 DIN の 6 ピンコネク
タが付いています。
USB マウスには平たい長方形のコネクタが付いています。
一部のマウスには、コネクタを他のタイプのインタフェー
スに接続できるアダプタが付属しています。このようなアダプタを使う場合に
は、マウスとアダプタを組み合わせた状態で一番端になるコネクタがインタ
フェースの種類を決めることを覚えておいてください。

<!--
The next thing to decide is a <tt>/dev</tt> entry for the given interface.
For the bus and PS/2 mice, there is little choice: 
the bus mouse always use <tt>/dev/mse0</tt>,
and the PS/2 mouse is always at <tt>/dev/psm0</tt>.
You can attach multiple USB mice to your system or to your USB hub.
They are accessible as <tt>/dev/ums0</tt>, <tt>/dev/ums1</tt>,...
There may be more than one serial port to which the serial
mouse can be attached.  Many people often assign the first, built-in 
serial port <tt>/dev/cuaa0</tt> to the mouse.
-->
次に決めることは、与えられたインタフェースに対する <tt>/dev</tt> エン
トリです。バスマウスと PS/2 マウスの場合、選ぶ必要はほとんどありません:
バスマウスでは必ず <tt>/dev/mse0</tt> を使いますし、PS/2 マウスでは必
ず <tt>/dev/psm0</tt> を使います。
複数個の USB マウスをお使いのシステムまたは USB ハブに取り付けることが
できます。これらは <tt>/dev/ums0</tt>, <tt>/dev/ums1</tt>, …として
アクセスできます。
シリアルマウスの場合には、マウスを接続できるシリアルポートが複数個ある
かもしれません。普通は最初の組み込みシリアルポートである 
<tt>/dev/cuaa0</tt> をマウスに割り当てることが多いようです。

<!--
If you are not sure which serial device your mouse is plugged into, 
the easiest way to find out the device is to
use ``<tt/cat/'' or ``<tt/kermit/'' to look at the output of the
mouse.  Connect to it and just make sure that it generates output when
the mouse is moved or clicked:
-->
どのシリアルデバイスにマウスを接続したかよく分からない場合、デバイスを
確かめる最も簡単な方法は ``<tt/cat/'' や ``<tt/kermit/'' を使ってマウ
スの出力を見ることです。まずマウスを接続してから、単に次のコマンドを実
行し、マウスを動かしたりクリックした時に出力が行われることを確認するだ
けです。

<tscreen><verb>
 % cat < /dev/tty00
</verb></tscreen>

<!--
If you can't find the right mouse device then use ``<tt/dmesg|grep
sio/'' to get a list of serial devices that were detected upon booting:
-->
正しいマウスデバイスを見つけられなかった場合には、
``<tt/dmesg|grep sio/'' を用いて起動時に検出されたシリアルデバイスのリ
ストを取得しましょう。

<tscreen><verb>
 % dmesg|grep sio
 sio0 at 0x3f8-0x3ff irq 4 on isa
</verb></tscreen>

<!--
Then double check the <tt>/dev</tt> entries corresponding to these
devices.  Use the script <tt>/dev/MAKEDEV</tt> to create entries if
they don't already exist:
-->
それから、これらのデバイスに対応する <tt>/dev</tt> のエントリを重ねて
確認します。まだエントリが存在していなければ、<tt>/dev/MAKEDEV</tt> ス
クリプトを用いて作成します。

<tscreen><verb>
 % cd /dev
 % sh MAKEDEV tty00
</verb></tscreen>

<!--
You may want to create a symbolic link <tt>/dev/mouse</tt>
pointing to the real port to which the mouse is connected, so that you
can easily distinguish which is your ``mouse'' port later.
-->
実際にマウスが接続されているポートを指すシンボリックリンク
<tt>/dev/mouse</tt> を作成してもよいでしょう。こうしておくと、後で「マ
ウス」ポートを見つけるのが簡単になります。

<!--
The next step is to guess the appropriate protocol type for the mouse.
In FreeBSD 2.2.6 or later, the X server may be able to automatically 
determine the appropriate protocol type, unless your mouse is of a
relatively old model.
Use the ``<tt/Auto/'' protocol in these versions.
-->
次のステップは、マウスが使うプロトコルの種類を適切に推定することです。
FreeBSD 2.2.6 以降であれば、マウスが比較的古いモデルでない限り、X サー
バは自動的に適切な種類を選択することができます。これらのバージョンでは
``<tt/Auto/'' プロトコルを指定してください。

<!--
In other versions of FreeBSD or if the ``<tt/Auto/'' protocol
doesn't work in 2.2.6, you have to guess a protocol type and try.
-->
他のバージョンの FreeBSD の場合や、バージョン 2.2.6 でも
``<tt/Auto/'' プロトコルがうまく動作しない場合には、マウスのプロトコル
を推定して試してみる必要があります。

<!--
There is rule of thumb:
-->
ここでは経験則を示しておきます:

<enum>
<!--
<item>The bus mice always use the ``<tt>BusMouse</tt>''
protocol regardless of the brand of the mouse.
-->
<item>バスマウスの場合には、マウスのブランドに関係なく常に
``<tt>BusMouse</tt>'' プロトコルを使います。
<!--
<item>The ``<tt>PS/2</tt>'' protocol should always be specified for 
the PS/2 mouse regardless of the brand of the mouse.
-->
<item>PS/2 マウスの場合には、マウスのブランドに関係なく常に
``<tt>PS/2</tt>'' プロトコルを指定すべきです。
<!--
<quote>
<bf/NOTE:/ There are quite a few PS/2 mouse protocols listed in the man page
for <tt>XF86Config</tt>.  But, ``<tt>PS/2</tt>'' is the only PS/2 mouse 
protocol type useful in <tt>XF86Config</tt> for FreeBSD.
The other PS/2 mouse protocol types are not supported in FreeBSD.
FreeBSD version 2.2.6 and later directly support 
these protocol types in the PS/2 mouse driver <tt/psm/ and it is not
necessary to tell the X server which PS/2 mouse protocol type is to 
be used; ``<tt/Auto/'' should work, otherwise use ``<tt>PS/2</tt>''.
</quote>
-->
<quote>
<bf/注意/: <tt>XF86Config</tt> のオンラインマニュアルには、かなりの数
の PS/2 マウスプロトコルが書かれています。しかし FreeBSD の場合には、
<tt>XF86Config</tt> に指定する意味がある PS/2 マウスプロトコルは
``<tt>PS/2</tt>'' だけです。バージョン 2.2.6 以降の FreeBSD は、
PS/2 マウスドライバ <tt/psm/ でこれらの種類のプロトコルを直接サポート
しているので、使用する PS/2 マウスプロトコルを X サーバに伝える必要は
ありません。``<tt/Auto/'' は動作するはずですが、これではなく
``<tt>PS/2</tt>'' を使ってください。
</quote>
<!--
<item>You must specify the ``<tt>Auto</tt>'' protocol for the USB mouse.
<quote>
<bf/NOTE:/ Other XFree86 document may mention ``<tt>Usb</tt>'' as one of 
keywords for the mouse protocol.  This keyword is not necessary, thus, not 
supported in FreeBSD.  Be sure to use ``<tt>Auto</tt>'' for the USB
mouse.
</quote>
-->
<item>USB マウスに対しては ``<tt>Auto</tt>'' を指定しなければなりません。
<quote>
<bf/注意:/ XFree86 の他の文書では、``<tt>Usb</tt>'' はマウスプロトコル
用のキーワードの一つと書かれているかもしれません。このキーワードは必要
でなく、したがって FreeBSD ではサポートされていません。USB マウスに対
しては必ず ``<tt>Auto</tt>'' を使ってください。
</quote>
<!--
<item>The ``<tt>Logitech</tt>'' protocol is for old mouse models 
from Logitech.
Modern Logitech mice use either the ``<tt>MouseMan</tt>''
or ``<tt>Microsoft</tt>'' protocol.
-->
<item>Logitech 製の古いモデルのマウスに対しては ``<tt>Logitech</tt>''
プロトコルを使います。最近の Logitech マウスは ``<tt>MouseMan</tt>''
プロトコルと ``<tt>Microsoft</tt>'' プロトコルのどちらも使います。
<!--
<item>Most 2-button serial mice support the ``<tt>Microsoft</tt>'' protocol.
-->
<item>2 ボタンのシリアルマウスのほとんどは ``<tt>Microsoft</tt>'' プロ
トコルをサポートしています。
<!--
<item>3-button serial mice may work with the ``<tt>MouseSystems</tt>''
protocol. If it doesn't, it may work with the ``<tt>Microsoft</tt>''
protocol although the third (middle) button won't function.
3-button serial mice may also work with the ``<tt>MouseMan</tt>''
protocol under which the third button may function as expected.
-->
<item>3 ボタンのシリアルマウスは ``<tt>MouseSystems</tt>'' プロトコル
で動作すると思います。動作しない場合には、``<tt>Microsoft</tt>'' プロ
トコルで動作すると思いますが、この場合には 3 番目のボタン(中ボタン)は
機能しないでしょう。3 ボタンのシリアルマウスは ``<tt>MouseMan</tt>''
プロトコルで動作することもあり、この場合には 3 番目のボタンも期待通り
に動作すると思います。
<!--
<item>3-button serial mice may have a small switch to choose between ``MS''
and ``PC'', or ``2'' and ``3''.
``MS'' or ``2'' usually mean the ``<tt>Microsoft</tt>'' protocol.
``PC'' or ``3'' will choose the ``<tt>MouseSystems</tt>'' protocol.
-->
<item>3 ボタンのシリアルマウスには小さなボタンが付いていて、
``MS'' と ``PC''、あるいは ``2'' と ``3'' を選択できることがあります。
通常は ``MS'' と ``2'' は ``<tt>Microsoft</tt>'' プロトコルのことであ
り、``PC'' と ``3'' は ``<tt>MouseSystems</tt>'' プロトコルのことです。
<!--
<item>If the serial mouse has a roller or a wheel, it may be compatible 
with the ``<tt>IntelliMouse</tt>'' protocol.
-->
<item>シリアルマウスにローラーやホイールが付いている場合、このマウスは
``<tt>IntelliMouse</tt>'' プロトコル互換かもしれません。
</enum>

<!--
<sect>Running X
-->
<sect>X の実行
<p>
<!--
8mb of memory is a recommended minimum for running X.  The server,
window manager, display manager and an xterm take about 8Mb of virtual
memory themselves.  Even if their resident set size is smaller, on a
8Mb system that leaves very space for other applications such as gcc
that expect a few meg free.  The R6 X servers may work with 4Mb of
memory, but in practice compilation while running X can take 5 or 10
times as long due to constant paging.
-->
X を実行するにはメモリが最低 8MB 必要です。サーバ、ウィンドウマネージャ、
ディスプレイマネージャ、xterm で仮想メモリを 8MB 使います。たとえ常駐
セットサイズがこれより小さくても、メモリが 8MB のシステムでは、gcc の
ように数メガバイトの空きメモリを期待する他のアプリケーションの分のメモ
リがほとんど残りません。R6 の X サーバはメモリ 4MB でも動作しますが、
実際には X の実行中にコンパイルを行うと、頻繁にページングが発生するた
めに時間が 5〜10倍かかってしまいます。

<!--
The easiest way for new users to start X windows is to type
``<tt>startx >&amp; startx.log</tt>''.  Error messages are lost unless
you redirect them because the server takes over the screen.
-->
初めてのユーザが X Window を起動するための最も簡単な方法は、
``<tt>startx >&amp; startx.log</tt>'' を実行することです。X サーバが画
面表示を引き継ぐため、エラーメッセージはリダイレクトしないと無くなって
しまいます。

<!--
To get out of X windows, type: ``<tt/exit/'' in the console xterm.
You can customize your X by creating <tt/.xinitrc/, <tt/.xserverrc/,
and <tt/.twmrc/ files in your home directory as described in the <em/xinit/
and <em/startx/ man pages.
-->
X から抜けるためには、コンソールになっている xterm で ``<tt/exit/'' と
入力します。ホームディレクトリに <tt/.xinitrc/, <tt/.xserverrc/,
<tt/.twmrc/ ファイルを作ることにより、X をカスタマイズすることができま
す。これらのファイルについては、オンラインマニュアルの <em/xinit/ と
<em/startx/ の説明を参照してください。

<!--
<sect>Rebuilding Kernels for X
-->
<sect>X のためのカーネル再構築
<p>

<!--
The GENERIC FreeBSD kernels support XFree86
without any modifications required.  You do not need to make any changes
to the GENERIC kernel or any kernel configuration which is a superset.
-->
FreeBSD の GENERIC カーネルは何も変更しなくても XFree86 に対応していま
す。GENERIC カーネルや、そのスーパーセットであるカーネル設定であれば、
カーネルの変更を行う必要はありません。

<!--
For a general description of BSD kernel configuration get <url
name="smm.02.config.ps.Z"
url="ftp://gatekeeper.dec.com/pub/BSD/manuals/smm.02.config.ps.Z">.
It is a ready-to-print postscript copy of the kernel configuration
chapter from the system maintainers manual.
-->
BSD カーネルの設定の一般的な説明については、<url name="smm.02.config.ps.Z"
url="ftp://gatekeeper.dec.com/pub/BSD/manuals/smm.02.config.ps.Z">
を参照してください。これはシステム管理者用マニュアルからカーネル設定
の章を抜粋した、すぐに印刷できる Postscript 形式のファイルです。

<!--
If you do decide to reduce your kernel configuration file, do not
remove the line below (in <tt>/sys/arch/i386/conf</tt>).  It
is required for X support:
-->
カーネル設定ファイルを小さくすることにした場合には、
(<tt>/sys/arch/i386/conf</tt> ファイル)の以下の行は削除してはいけませ
ん。これは X をサポートするために必要です:

<tscreen><verb>
 options		UCONSOLE		#X Console support
</verb></tscreen>

<!--
The generic FreeBSD kernels are configured
by default with the syscons driver.  To configure your kernel similarly
it should have a line like this in <tt>/usr/src/sys/i386/conf/GENERIC</tt>:
-->
FreeBSD の GENERIC カーネルはデフォルトで syscons ドライバを使う設定に
なっています。同様のカーネル設定を行うには、
<tt>/usr/src/sys/i386/conf/GENERIC</tt> に次のような行が含まれていなけ
ればなりません:

<tscreen><verb>
 device		sc0	at isa? port "IO_KBD" tty irq 1 vector scintr
</verb></tscreen>

<!--
The number of virtual consoles can be set using the MAXCONS option:
-->
MAXCONS オプションを使って、仮想コンソールの数を設定することができます:

<tscreen><verb>
 options		"MAXCONS=4"		#4 virtual consoles
</verb></tscreen>

<!--
Otherwise, the default without a line like this is 16.  You must have more
VTs than gettys as described in the end of section 3, and 4 is a reasonable
minimum.
-->
このような設定が無い場合のデフォルト値は 16 になります。仮想端末の数は
セクション 3の最後で説明した gettys より多くなければなりません。4 は妥
当な最小値です。

<!--
The server supports two console drivers: syscons and pcvt.
The syscons driver is the default in FreeBSD 1.1.5 and higher.  They are
detected at runtime and no configuration of the server itself is required.
-->
X サーバは 2 つのコンソールドライバ(syscons と pcvt)をサポートしていま
す。FreeBSD 1.1.5 以降では syscons ドライバがデフォルトです。これらの
ドライバは実行時に検出されるので、サーバの設定自体を行う必要はありませ
ん。

<!--
If you intend to use pcvt as the console driver, be sure to include the
following option in your kernel configuration file.
-->
pcvt をコンソールドライバとして使いたければ、カーネルの設定ファイルに
必ず以下のオプションを入れてください。

<tscreen><verb>
 options		XSERVER			#Xserver
</verb></tscreen>

<!--
The number of virtual consoles in pcvt can be set using the following
option:
-->
pcvt における仮想コンソールの数は、以下のオプションを使って設定するこ
とができます:

<tscreen><verb>
 options		"PCVT_NSCREENS=10"	#10 virtual consoles
</verb></tscreen>

<!--
The bus mouse driver and the PS/2 mouse driver may not be included, or
may be included but disabled in your kernel.  If you intend to use
these mice, verify the following lines in the kernel configuration file:
-->
バスマウスや PS/2 マウスのドライバはカーネルに組み込まれていないことや、
組み込まれていても無効にされていることがあります。これらのマウスを使う
場合には、カーネル設定ファイルに以下の行があることを確かめてください:

<tscreen><verb>
 device		mse0	at isa? port 0x23c tty irq 5 vector mseintr
 device		psm0	at isa? port "IO_KBD" conflicts tty irq 12 vector psmintr
</verb></tscreen>

<!--
The <tt/mse0/ device is for the bus mouse and the <tt/psm/ device is 
for the PS/2 mouse.  Your bus mouse interface card may allow you to 
change IRQ and the port address.  Please refer to the manual of 
the bus mouse and the manual page for <tt/mse(4)/ for details.
There is no provision to change IRQ and the port address of the
PS/2 mouse.
-->
<tt/mse0/ はバスマウス用のデバイスで、<tt/psm/ デバイスは PS/2 マウス
用のデバイスです。バスマウスのインタフェースカードは、IRQ やポート番号
を変更できることがあります。詳しくは、バスマウスのマニュアルやオンライ
ンマニュアルの <tt/mse(4)/ を参照してください。PS/2 マウスの IRQ とポー
ト番号を変更する方法は用意されていません。

<!--
The XFree86 servers include support for the MIT-SHM extension.  The
GENERIC kernel does not support this, so if you want to make use of
this, you will need a kernel configured with SYSV shared memory
support.  To do this, add the following line to your kernel config
file:
-->
XFree86 サーバは MIT-SHM 機能拡張をサポートしています。GENERIC カーネ
ルはこれをサポートしていないので、使用したければ SYSV 共有メモリをサポー
トするようにカーネルの設定を行う必要があります。この設定を行うには、以
下の行をカーネルの設定ファイルに追加します:

<tscreen><verb>
 options		SYSVSHM			# System V shared memory
 options		SYSVSEM			# System V semaphores
 options		SYSVMSG			# System V message queues
</verb></tscreen>

<!--
If you are using a SoundBlaster 16 on IRQ 2 (9), then you need a patch for
sb16_dsp.c.  Otherwise a kernel configured with the SoundBlaster driver will
claim interrupt 9 doesn't exist and X server will lock up.
-->
SoundBlaster 16 を IRQ 2(9) で使っている場合、sb16_dsp.c にパッチを当
てる必要があります。パッチを当てないと、SoundBlaster ドライバを使う設
定のカーネルは 9 番割り込みが存在しないと言ってきて、X サーバが固まっ
てしまいます。

<!--
S3 cards and serial port COM 4 cannot be installed together on a
system because the I/O port addresses overlap.
-->
S3 のカードとシリアルポート COM4 は 1 つのシステムで同時には使用するこ
とはできません。I/O ポートアドレスが重なっているからです。

<!--
<sect>Building X Clients
-->
<sect>X クライアントの構築
<p>

<!--
The easiest way to build a new client (X application) is to use
<tt/xmkmf/ if an <tt/Imakefile/ is included with it.  Type ``<tt/xmkmf -a/''
to create the Makefiles, then type ``<tt/make/''.  Whenever you install
additional man pages you should update <tt/whatis.db/ by running
``<tt>makewhatis /usr/X11R6/man</tt>''.
-->
新しいクライアント(X のアプリケーション)を作る最も簡単な方法は、
<tt/Imakefile/ が付属していれば <tt/xmkmf/ を使うことです。
``<tt/xmkmf -a/'' を実行して Makefile を作り、それから
``<tt/make/'' を実行します。オンラインマニュアルもインストールした場合
には、必ず ``<tt>makewhatis /usr/X11R6/man</tt>'' を実行し、
<tt/whatis.db/ を更新してください。

<!--
<bf/Note:/ Starting with XFree86 2.1 and FreeBSD 1.1, the symbol
<bf/__386BSD__/ no longer gets defined either by the compiler or via the
X config files for FreeBSD systems.  When porting clients to BSD
systems, make use of the symbol <bf/BSD/ for code which is truly
BSD-specific.  The value of the symbol can be used to distinguish
different BSD releases.  For example, code specific to the Net-2 and
later releases can use:
-->
<bf/注意:/ XFree86 2.1 と FreeBSD 1.1 以降、FreeBSD システムに対しては、
シンボル <bf/__386BSD__/ はコンパイラによっても X の設定ファイル経由で
も定義されなくなりました。クライアントを BSD システムに移植する時は、
本当に BSD に特有のコードに対してはシンボル <bf/BSD/ を使ってください。
シンボルの値を使って、異なる BSD リリースを区別することができます。例
えば、Net-2 以降のリリース専用のコードでは次のような指定を行います:

<tscreen>
#if (BSD >= 199103)
</tscreen>

<!--
To ensure that this symbol is correctly defined, include
<tt>&lt;sys/param.h&gt;</tt> in the source that requires it.  Note that
the symbol <bf/CSRG_BASED/ is defined for *BSD systems in XFree86 3.1.1
and later.  This should be used to protect the inclusion of
<tt>&lt;sys/param.h&gt;</tt>.
-->
このシンボルの定義を確実に正しいものにするため、シンボルを必要とするソー
スコードでは <tt>&lt;sys/param.h&gt;</tt> をインクルードしてください。
XFree86 3.1.1 以降では、全ての *BSD システムを表す <bf/CSRG_BASED/ シ
ンボルが定義されていることに注意してください。
<tt>&lt;sys/param.h&gt;</tt> のインクルードを保護するために、これを使
うべきです。

<!--
For code that really is specific to a particular i386 BSD port, use
<bf/__FreeBSD__/ for FreeBSD, <bf/__NetBSD__/ for NetBSD,
<bf/__OpenBSD__/ for OpenBSD,
<bf/__386BSD__/ for 386BSD, and <bf/__bsdi__/ for BSD/386.
-->
特定の i386 用 BSD 専用の移植を行ったコードの場合、
NetBSD ならば <bf/__FreeBSD__/ for FreeBSD, <bf/__NetBSD__/ を、
OpenBSD ならば <bf/__OpenBSD__/ を、
386BSD ならば <bf/__386BSD__/ を、
BSD/386 ならば <bf/__bsdi__/ を使ってください。

<!--
<sect> Thanks
-->
<sect> 謝辞
<p>
<!--
Many thanks to:
  <itemize>
<item><bf/Pace Willison/  for providing initial *BSD support.
<item><bf/Amancio Hasty/ for 386BSD kernel and S3 chipset support.
<item><bf/David Greenman, Nate Williams, Jordan Hubbard/ for FreeBSD
       kernel support.  
<item><bf/Rod Grimes/, <bf/Jordan Hubbard/ and <bf/Jack Velte/ for
       the use of Walnut Creek Cdrom's hardware. 
<item><bf/Orest Zborowski/, <bf/Simon Cooper/ and <bf/Dirk Hohndel/ for ideas from the Linux distribution.
</itemize>
-->
多くの方々に感謝します:
  <itemize>
<item>*BSD のサポートを最初に行ってくださった <bf/Pace Willison/ さん
<item>386BSD のカーネルと S3 チップセットのサポートを行った<bf/Amancio Hasty/ さん
<item>FreeBSD のカーネルをサポートした
 <bf/David Greenman/ さん, <bf/Nate Williams/ さん, <bf/Jordan Hubbard さん/
<item>Walnut Creek Cdrom のハードウェアを使わせてくださった
<bf/Rod Grimes/ さん, <bf/Jordan Hubbard/ さん、 <bf/Jack Velte/ さん
<item>Linux ディストリビューションからアイディアを採り入れた
<bf/Orest Zborowski/ さん, <bf/Simon Cooper/さん, <bf/Dirk Hohndel/ さん
</itemize>

<verb>
$XFree86: xc/programs/Xserver/hw/xfree86/doc/Japanese/sgml/FreeBSD.sgml,v 3.1.2.3 1999/12/28 12:13:53 hohndel Exp $ 





$XConsortium: FreeBSD.sgml /main/12 1996/10/28 05:43:08 kaleb $
</verb>

<sect>日本語訳について<p>
日本語訳は X Japanese Documentation Project が行いました。
(3.3.6 版 翻訳: 藤原輝嘉
<url url="mailto:fujiwara@linux.or.jp" name="&lt;fujiwara@linux.or.jp&gt;">)

原文の著作権は XFree86 プロジェクト社にあり、日本語訳に関する権利は
X Japanese Documentation Project にあります。
問題点の指摘やご意見は藤原まで御連絡ください。
</article>
