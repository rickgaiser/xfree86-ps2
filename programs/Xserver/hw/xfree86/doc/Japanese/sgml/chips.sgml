<!DOCTYPE linuxdoc PUBLIC "-//XFree86//DTD linuxdoc//EN">
 
<article>

<!-- Title information -->
<!--
<title> Information for Chips and Technologies Users
-->
<title> Chips and Technologies ユーザ用の情報 </title>
<author> David Bateman (<it>dbateman@eng.uts.edu.au</it>),<newline>
         Egbert Eich (<it>Egbert.Eich@Physik.TH-Darmstadt.DE</it>)
<date> 5th June 1998
<trans> (3.3.2 まで) 岡本 一幸 Kazuyuki Okamoto &lt;ikko-@pacific.rim.or.jp&gt;,<newline>
        (3.3.3) 佐野 武俊 Taketoshi Sano &lt;kgh12351@nifty.ne.jp&gt;
<tdate> 1999/02/03 (ja)

<!-- Table of contents -->
<toc>

<!--
<sect> Introduction <p>
-->
<sect> はじめに <p>

<!--
The Chips and Technologies range of chips are primarily manufactured
for use in laptop computers, where their power conservation circuitry
is of importance. They can however be found in a few "<tt>Green</tt>"
video cards for desktop machines. This release of XFree86 includes 
support for
-->
Chips and Technologies 社のチップセットは、
電力消費管理回路が重要な意味を持つような
ラップトップコンピュータ上で使われることを
主な用途として製造されています。

しかし、デスクトップ機用のいくつかの
"<tt>Green</tt>"" ビデオカードにも、
これらのチップを使っているものがあります。

この版の XFree86 では次の機能をサポートしています。

<itemize>
<!--
<item>Linear Addressing
<item>16/24/32 bits per pixel
<item>Fully programmable clocks are supported
<item>H/W cursor support
<item>BitBLT acceleration of many operations using XAA
-->
<item>リニアアドレッシング
<item>ピクセルあたり 16/24/32 ビット
<item>プログラマブルクロック機能の完全なサポート
<item>ハードウェアカーソル
<item>XAA を使用した殆んどの操作での BitBLT 高速化機能
</itemize>

<!--
Most of the Chips and Technologies chipsets are supported by this driver
to some degree.
-->
ほとんどの Chips and Technologies 社製チップセットは、
程度の差はあるにせよ、このドライバーによってサポートされています。

<!--
<sect> Supported Chips <p>
-->
<sect>  サポートしているチップ <p>

<descrip>
<tag>ct65520</tag>
<!--
	(Max Ram: 1Mb, Max Dclk: 68MHz@5V)
-->
	(最大メモリ: 1M バイト,最大ドットクロック: 5V 時 68MHz )
<tag>ct65525</tag>
<!--
        This chip is basically identical to the 65530. It has the same
	ID and is identified as a 65530 when probed. See ct65530 for
	details.
-->
	このチップは基本的に 65530 として認識します。
	探査時に、 65530 と同じ ID を返します。
	詳細は ct65530 を見てください。
<tag>ct65530</tag>
<!--
	This is a very similar chip to the 65520. However it additionally
	has the ability for mixed 5V and 3.3V operation and linear addressing
	of the video memory.
	(Max Ram: 1Mb, Max Dclk: 56MHz@3.3V, 68MHz@5V)
-->
	このチップは 65520 そっくりです。
	しかし、 5V と 3.3V の混合動作モードと
	ビデオメモリのリニアアドレッシングを追加しています。
	(最大メモリ: 1M バイト,最大ドットクロック: 3.3V 時 56MHz, 5V 時 68MHz )
<tag>ct65535</tag>
<!--
	This is the first chip of the ct655xx series to support fully
	programmable clocks. Otherwise it has the the same properties
	as the 65530.
-->
	このチップは ct655xx 系列で
	プログラマブルクロックを完全にサポートした
	最初のチップです。
	その他の特性は 65530 と同じです。
<tag>ct65540</tag>
<!--
	This is the first version of the of the ct655xx that was capable
	of supporting Hi-Color and True-Color. It also includes a fully
	programmable dot clock and supports all types of flat panels.
	(Max Ram: 1Mb, Max Dclk: 56MHz@3.3V, 68MHz@5V)
-->
	ct655xx 系列で Hi-Color と True-Color をサポートした
	最初のチップです。
	完全にプログラム可能なドットクロックと
	全ての種類のフラットパネルをサポートしています。
	(最大メモリ: 1M バイト,最大ドットクロック: 3.3V 時 56MHz, 5V 時 68MHz )
<tag>ct65545</tag>
<!--
	The chip is very similar to the 65540, with the addition of H/W
	cursor, pop-menu acceleration, BitBLT and support of PCI Buses.
	PCI version also allow all the BitBLT and H/W cursor registers
	to be memory mapped 2Mb above the Base Address.
	(Max Ram: 1Mb, Max Dclk: 56MHz@3.3V,68MHz@5V)
-->
	このチップは 65540 そっくりです。
	ハードウェアカーソル、ポップアップメニューの高速化、
	BitBLT 機能と PCI バスをサポートしています。
	PCI 版は BitBLT とハードウェアカーソルのためのレジスタをすべて
	基底アドレスから始まる 2M バイトの空間に割り付け出来ます。
	(最大メモリ: 1M バイト,最大ドットクロック: 3.3V 時 56MHz, 5V 時 68MHz )
<tag>ct65546</tag>
<!--
	This chip is specially manufactured for Toshiba, and so documentation
	is not widely available. It is believed that this is really just a
	65545 with a higher maximum dot-clock of 80MHz.
	(Max Ram: 1Mb?, Max Dclk: 80MHz?)
-->
	このチップは東芝の為に特別に製造されました。
	そしてそのために資料が広く公開されていません。
	実際には単に 80MHz の最大ドットクロックを使えるようにした 65545 である
	と考えられています。
	(最大メモリ: 1M バイト?,最大ドットクロック: 80MHz? )
<tag>ct65548</tag>
<!--
	This chip is similar to the 65545, but it also includes XRAM support
	and supports the higher dot clocks of the 65546. 
	(Max Ram: 1Mb, Max Dclk: 80MHz)
-->
	このチップは 65545 に似ています。
	しかし、XRAM と 65546 の高いドットクロックをサポートしています。
	(最大メモリ: 1M バイト,最大ドットクロック: 80MHz )
<tag>ct65550</tag>
<!--
	This chip started a completely new architecture to previous ct655xx
	chips. It includes many new features, including improved BitBLT
	support (24bpp color expansion, wider maximum pitch, etc), Multimedia
	unit (video capture, zoom video port, etc) and 24bpp uncompressed true
	color (i.e 32bpp mode). Also memory mapped I/O is possible on all bus
	configurations. 
	(Max Ram: 2Mb, Max Dclk: 80MHz@3.3V,100MHz@5V)
-->
	これ以前の ct655xx 系列のチップとは全く異なる
	新しいアーキテクチャの最初のチップです。
	このチップには、例えば
	改良された BitBLT 機能 (24bpp に色を拡張、最大ピッチを拡大等々)、
	マルチメディア機構 (例えばビデオキャプチャ、ズームビデオポート等々)、
	24bpp 非圧縮天然色 (つまり 32bpp モード)
	などを含む、多くの新しい機能が盛り込まれています。
	また、全てのバス構成においてメモリマップ入出力も可能です。
	(最大メモリ: 2M バイト,最大ドットクロック: 3.3V 時 80MHz, 5V 時 l00MHz )

<!--
        ( Note: At least one non-PCI bus system with a ct65550 requires the
        "<tt>-no_bios</tt>" option for the SuperProbe to correctly detect
	the chipset with the factory default BIOS settings. The XF86_SVGA
	server can correctly detect the chip in the same situation. )
-->
	(注：PCI バス接続でない ct65550 を持つシステムのうち、すくなくとも
	ひとつの機種 (Libretto50) では、 BIOS の CMOS 設定がデフォルトの
	場合、 SuperProbe コマンドにチップの種類を正しく検出させるために
	"<tt>-no_bios</tt>" オプションが必要です。
	XF86_SVGA サーバーは同じ状況でもオプション無しで正しくチップを
	検出可能です。)
<tag>ct65554</tag>
<!--
	This chip is similar to the 65550 but has a 64bit memory bus as 
	opposed to a 32bit bus. It also has higher limits on the maximum
	memory and pixel clocks
	(Max Ram: 4Mb, Max Dclk: 100MHz@3.3V)
-->
	このチップは 65550 に似ていますが 32 ビットバスではなく
	64 ビットメモリバスです。
	またこのチップではメモリクロックとピクセルクロックの上限が
	より高くなりました。
	(最大メモリ: 4M バイト, 最大ドットクロック: 3.3V 時 100MHz)
<tag>ct65555</tag>
<!--
	Similar to the 65554 but has yet higher maximum memory and pixel
	clocks. It also includes a new DSTN dithering scheme that improves
	the performance of DSTN screens.
	(Max Ram: 4Mb, Max Dclk: 110MHz@3.3V)
-->
	65554 に似ていますが、メモリクロックとピクセルクロックの上限が
	さらに高くなっています。
	また DSTN 画面の性能を向上させる新しい DSTN ディザリング機能を
	塔載しています。
	(最大メモリ: 4M バイト, 最大ドットクロック: 3.3V 時 110MHz)
<tag>ct68554</tag>
<!--
	Similar to the 65555 but also incorporates "PanelLink" drivers. This
	serial link allows an LCD screens to be located up to 100m from the 
	video processor. Expect to see this chip soon in LCD desktop machines
	(Max Ram: 4Mb, Max Dclk: 110MHz@3.3V)
-->
	65555 に似ていますが "PanelLink" ドライバも組み込まれています。
	このシリアルリンクはビデオプロセッサから最大 100m 離れた位置に
	ある LCD 画面を動作させることができます。
	LCD のデスクトップ機にこのチップが搭載されることを期待しましょう。
	(最大メモリ: 4M バイト, 最大ドットクロック: 3.3V 時 110MHz)
<tag>ct69000</tag>
<!--
	Similar to the 65555 but incorporates 2Mbytes of SGRAM on chip. It is
	the first Chips and Technologies chipset where all of the registers
	are accessible through MMIO, rather than just the BitBlt registers.
	(Max Ram: 2Mb Only, Max Dclk: 220MHz@3.3V)
-->
	65555 に似ていますが、チップ上に 2M バイトの SGRAM が
	組み込まれています。
	このチップは BitBlt レジスターだけでなく、
	すべてのレジスターに MMIO 経由でアクセスできる
	最初の Chips and Technologies 社製チップです。
	(最大メモリ: 2M バイトのみ, 最大ドットクロック: 3.3V 時 220MHz)
<tag>ct64200</tag>
<!--
	This chip, also known as the WinGine, is used in video cards
        for desktop systems. It often uses external DAC's and programmable
	clock chips to supply additional functionally. None of these are
	currently supported within the driver itself, so many cards will only
	have limited support. Linear addressing is not supported for this
	card in the driver.
	(Max Ram: 2Mb, Max Dclk: 80MHz)
-->
	WinGine としても知られているこのチップは、
	デスクトップシステム用のビデオカードとして使用されています。
	このチップは追加機能を提供するために、
	外部 DAC およびプログラマブルクロックチップを
	しばしば使用します。
	これらは全て現在サポートされておらず、
	従って多くのカードでは限定的なサポートになります。
	またこのカードに対するリニアアドレッシングは
	サポートされていません。
	(最大メモリ: 2M バイト,最大ドットクロック: 80MHz)
<tag>ct64300</tag>
<!--
	This is a more advanced version of the WinGine chip, with specification
	very similar to the 6554x series of chips. However there are many
	difference at a register level. A similar level of acceleration to
	the 65545 is included for this driver.
	(Max Ram: 2Mb, Max Dclk: 80MHz)
-->
	このチップは WinGine チップのより進化したもので、
	仕様的には 6554x 系列のチップと良く似ていますが、
	レジスタレベルでは多くの点で独自構成になっています。
	このドライバーで得られる高速化のレベルは 65545 程度です。
	(最大メモリ: 2M バイト,最大ドットクロック: 80MHz)
</descrip>

<!--
<sect> XF86Config Options <p>
-->
<sect> XF86Config オプション <p>

<!--
The following options are of particular interest to the Chips
and Technologies driver.  Each of them must be specified in the
`svga' driver section of the XF86Config file, within the Screen
subsections of the depths to which they are applicable (you can enable
options for all depths by specifying them in the Device section).
-->
次のオプションは Chips and Technologies ドライバを使用する場合
特に重要です。
XF86Config ファイル中でオプションを指定する場所は、
 `svga' ドライバーを使用する Screen 節の中の、
そのオプションを指定したい色深度に対応する
Display サブセクションの中です。
(Device 節で指定すると、
全ての色深度に対してオプションを有効にできます。)

<descrip>
<tag>
<!--
Option "noaccel"
-->
Option &dquot;noaccel&dquot;
</tag>
<!--
        This option will disable the use of any accelerated functions.
        This is likely to help with some problems related to DRAM
        timing, high dot clocks, and bugs in accelerated functions, at
        the cost of performance (which will still be reasonable on VLB/PCI).
-->
	高速化機能を無効にします。
	DRAM の時間調整や高ドットクロックと高速化機能のバグなどに関する
	問題がある時に性能と引き替えに救ってくれます。
	(VLB/PCI の場合、このオプションが未だ必要かもしれません。)
<tag>
<!--
Option "no_bitblt" (Chips 65545 and later)
-->
Option &dquot;no_bitblt&dquot; (Chips 65545 以降)
</tag>
<!--
        This option will disable the use of the BitBLT engine which the
	65545 and above have. If you can use the  "<tt>noaccel</tt>" option
	to correct a problem, then this option might be better to use.
	It still allows the use of generic speedups.
-->
	65545 以上のチップに搭載されている BitBLT エンジンを無効にします。
	"<tt>noaccel</tt>" オプションを使用して問題が解決したら、
	このオプションを使用した方がいいかもしれません。
	一般的な速度向上に寄与します。
<tag>
<!--
Option "xaa_no_color_exp" (Chips 65545 and later)
-->
Option &dquot;xaa_no_color_exp&dquot; (Chips 65545 以降)
</tag>
<!--
	This option will have the effect of disabling the use
	of monochrome colour expansion. In particular this effects
	text and bitmaps. It is useful for problems related to image writes,
	and possible acceleration problems. In general this will result in
	a reduced performance. Note that this option replaces the 
	"<tt>no_imageblt</tt>" option used in XFree86 3.2.
-->
	白黒展開を無効にします。特にテキストとビットマップに作用します。
	画像書き込みや高速化に問題がある時に有用です。
	これを使うと一般に性能は低下します。
	XFree86 3.2 で使われていた "<tt>no_imageblt</tt>" オプションは
	このオプションで置き換えられたことに注意してください。
<tag>
<!--
Option "xaa_benchmark" (Chips 65545 and later)
-->
Option &dquot;xaa_benchmark&dquot; (Chips 65545 以降)
</tag>
<!--
	Turns on the XAA acceleration benchmarks. Information regarding
	what graphics primitives are accelerated and their relatives
	speeds will be printed when the X server starts.
-->
	XAA 高速化ベンチマークを起動します。
	X サーバの起動時に
	どのグラフィックプリミティブが高速化されているかという点と、
	その相対的な速度を表示します。
<tag>
<!--
videoram 1024 (or another value)
-->
videoram 1024 (または他の値)
</tag>
<!--
        This option will override the detected amount of video memory,
        and pretend the given amount of memory is present on the card.
	Note that many ct655xx chips only allow up to 1Mb of videoram,
	and the amount should be correctly detected.
-->
	探知したビデオメモリの大きさを上書きし、
	カードのメモリの大きさを指定した大きさにだまします。
	多くの ct655xx チップは 1M バイトまでのメモリしか搭載できず、
	またその量を正しく認識させる必要があることに注意して下さい。
<tag>
<!--
Option "nolinear" (Chips 65530 and later)
-->
Option &dquot;nolinear&dquot; (Chips 65530 以降)
</tag>
<!--
	By default linear addressing is used on all ct655xx chips.
	However this might be broken in some implementations. It
	is possible to turn the linear addressing off with this
	option. Note that H/W acceleration and 16/24/32bpp are only
	supported with linear addressing.
-->
	標準では全ての ct655xx チップに対して
	リニアアドレッシングを使います。
	しかし、これがうまく動作しないような実装がいくつか存在します。
	そういう場合は、リニアアドレッシングを
	このオプションで無効にしてください。
	ハードウェアによる高速化と 16/24/32bpp は
	リニアアドレッシングでのみ有効なことに注意して下さい。
<tag>
<!--
MemBase 0x03b00000 (or a different address)
-->
MemBase 0x03b00000 (もしくは異なるアドレス)
</tag>
<!--
        This sets the physical memory base address of the linear
        framebuffer. Typically this is probed correctly, but if
	you believe it to be mis-probed, this option might help.
	Also for non PCI machines specifying this force the linear base
	address to be this value, reprogramming the video processor
	to suit. Note that for the 65530 this is required as the
	base address can't be correctly probed.
-->
	リニアフレームバッファの物理メモリの基底アドレスを設定します。
	一般にこれは正しく探知されますが、もし探知に失敗していると
	感じたらこのオプションが救いになるでしょう。
	非 PCI 機器でこの値を指定して強制的に置き換えた場合、
	ビデオプロセッサはもう一度適正にプログラムされます。
	65530 では基底アドレスを正しく探知出来ないため
	このオプションを設定する必要があることに注意してください。
<tag>
<!--
Option "hw_cursor" (Chips 65545 and later)
-->
Option &dquot;hw_cursor&dquot; (Chips 65545 以降)
</tag>
<!--
        This option enables the use of a hardware accelerated cursor. This
	effectively speeds all graphics operations as the job of ensuring that
	the cursor remains on top is now given to the hardware. It also
	reduces the effect of cursor flashing during graphics operations.
-->
	チップが提供しているハードウェアカーソルを有効にします。
	これにより、カーソルを常に画面上へ表示させるための描画処理を
	ハードウェアにまかせることができるため、
	全ての画像操作において描画速度が顕著に向上します。
	またこのオプションは
	画像操作中のカーソルフラッシュ効果を低減します。
<tag>
<!--
Option "sw_cursor" (Chips 65545 and later)
-->
Option &dquot;sw_cursor&dquot; (Chips 65545 以降)
</tag>
<!--
        Software cursors have now been made the default and so this option
	has no effect.
-->
	この版ではソフトウェアカーソルが標準になりました。
	従って、現在このオプションには実質的な意味がありません。
<tag>
<!--
Option "STN"
-->
Option &dquot;STN&dquot;
</tag>
<!--
	The server is unable to differentiate between SS STN 
 	and TFT displays. This forces it to identify the display
	as a SS STN rather than a TFT.
-->
	この版の X サーバーは SS STN と TFT ディスプレイを
	自動識別できません。
	このオプションは、ディスプレイを TFT ではなく SS STN として
	強制的に識別させます。
<tag>
<!--
Option "use_modeline"
-->
Option &dquot;use_modeline&dquot;
</tag>
<!--
	The flat panel timings are related to the panel size and not the
	size of the mode specified in XF86Config. For this reason the
	default behaviour of the server is to use the panel timings already
	installed in the chip. The user can force the panel timings to be
	recalculated from the modeline with this option. However the panel
	size will still be probed.
-->
	フラットパネルの時間調整はパネルの大きさに依存しますが、
	XF86Config で指定したモードの大きさには依存しません。
	この理由から、 X サーバの標準動作では
	あらかじめチップに組み込まれているパネルの時間調整を使用します。
	このオプションの指定により、
	modeline からパネルの時間調整を再計算して置き換える事ができます。
	しかし、このオプションを指定してもパネルの大きさについては
	検出動作を実行します。
<tag>
<!--
Option "fix_panel_size"
-->
Option &dquot;fix_panel_size&dquot;
</tag>
<!--
	For some machines the LCD panel size is incorrectly probed from
	the registers. This option forces the LCD panel size to be
	overridden by the modeline display sizes. This will prevent the
	use of a mode that is a different size than the panel. Before
	using this check that the server reports an incorrect panel
	size. This option can be used in conjunction with the option
	"use_modeline" to program all the panel timings using
	the modeline values.
-->
	LCD パネルの大きさが間違ってレジスタから検出されるような
	いくつかの機器に対して使います。
	このオプションを使用すると、
	X サーバーの認識する LCD パネルの大きさが
	modeline の display サイズによって置き換えられます。
	これによって、実際のパネルの大きさと異なる設定のモードを
	使用しないようにできます。
	このオプションを使う前に、
	X サーバの報告するパネルの大きさが間違っていることを
	確認して下さい。
	このオプションは
	modeline で指定した数値を使用して
	全てのパネルの時間調整を行なうための
	&dquot;use_modeline&dquot; オプションと併用できます。
<tag>
<!--
Option "no_stretch"
-->
Option &dquot;no_stretch&dquot;
</tag>
<!--
	When the size of the mode used is less than the panel size, the
	default behaviour of the server is to stretch the mode in an attempt
	to fill the screen. A "<tt>letterbox</tt>" effect with no stretching
	can be achieved using this option.
-->
	モードの大きさが実際のパネルより小さく指定された場合、
	X サーバの標準では表示内容を画面一杯に引き延ばすように動作します。
	このオプションを使用することで、引き延ばしのない
	"<tt>letterbox</tt>" 効果が得られます。
<tag>
<!--
Option "lcd_center"
-->
Option &dquot;lcd_center&dquot;
</tag>
<!--
	When the size of the mode used is less than the panel size, the
	default behaviour of the server is to align the left hand edge of
	the display with the left hand edge of the screen. Using this option
	the mode can be centered in the screen. This option is reported to
	have problems with some machines at 16/24/32bpp, the effect of which
	is that the right-hand edge of the mode will be pushed off the screen.
-->
	モードの大きさが実際のパネルより小さく指定された場合、
	X サーバの標準挙動では画面の左端をパネルの左端に合わせます。
	このオプションを使うと画面をパネルの中央に表示します。
	このオプションは16/24/32bpp の場合にいくつかの機器で問題を生じる
	という報告がありました。
	その症状は画面の右端が欠けるとの事です。
<tag>
<!--
Option "hw_clocks" (Chips 65535 and later)
-->
Option &dquot;hw_clocks&dquot; (Chips 65535 以降)
</tag>
<!--
	On chips 65535 and later, the default is to use the programmable
	clock for all clocks. It is possible to use the fixed clocks
	supported by the chip instead by using this option. Typically
	this will give you some or all of the clocks 25.175, 28.322,
	31.000 and 36.000MHz. The current programmable clock will be
	given as the last clock in the list. On a cold-booted system this
	might be the appropriate value to use at the text console (see the 
	"<tt>TextClockFreq</tt>" option), as many flat panels will need a
	dot clock different than the default to synchronise. The
	programmable clock makes this option obsolete and so it's use
	isn't recommended.
-->
	chips 65535 以降のチップでは、
	全てのクロックでプログラマブルクロックの使用が標準です。
	このオプションの使用により、チップがサポートしている
	固定周波数クロックを代わりに使うことができます。
	例えば、 25.175, 28.322, 31.000 と 36.000MHz の
	全てか一部の周波数を使えることでしょう。
	最新のプログラマブルクロックは
	一覧の最後のクロックの値で与えられます。
	コールド・ブートしたシステムでは
	テキストコンソールに適正な値になっています
	( "<tt>TextClockFreq</tt>" 参照) が、
	多くのフラットパネルでは同期を取るために
	標準値とは異なるクロック値が必要です。
	プログラマブルクロックが
	このオプションを古めかしくしてしまったので、
	現在では使用をお勧めしません。
<tag>
<!--
Option "use_vclk1" (Chips 65550 and later)
-->
Option &dquot;use_vclk1&dquot; (Chips 65550 以降)
</tag>
<!--
	The HiQV series of chips have three programmable clocks. The
	first two are usually loaded with 25.175 and 28.322MHz for
	VGA backward compatibility, and the third is used as a fully
	programmable clock. On at least one system (the Inside 686 LCD/S
	single board computer) the third clock is unusable. This option
	forces the use of VClk1 as the programmable clock. It has been
	reported that this option can fix the blue/black screen problem
	on startup that a few machines suffer.
-->
	chips の HiQV 系列にはプログラマブルクロックが 3 つあります。
	最初の 2 つは VGA との互換性のために 25.175 および 28.322MHz を
	通常準備しています。
	3 つめはすべてプログラム可能なクロックです。
	すくなくともひとつのシステム
	(Inside 686 LCD/S シングルボードコンピュータ)
	では 3 つめのクロックを使えません。
	このオプションは
	プログラマブルクロックに VClk1 を強制使用させるものです。
	いくつかのマシンで発生していた起動時の黒/青画面問題を
	このオプションによって解決できたという報告があります。
<tag>
<!--
TextClockFreq 25.175
-->
TextClockFreq 25.175
</tag>
<!--
	It is impossible for the server to read the value of the currently
	used frequency for the text console from the chip with the ct6554x
	series of chips. Therefore the server uses a default value of
	25.175MHz as the text console clock. For some LCDs, in particular
	DSTN screens, this clock will be wrong. This allows the user to
	select a different clock for the server to use when returning to
	the text console.
-->
	テキスト用コンソールが現在使用している周波数を
	ct6554x 系列のチップから読み出すのは不可能です。
	従って X サーバはテキスト用コンソールが使う周波数の標準値として
	25.175MHz を用います。
	いくつかの LCD では、特に DSTN スクリーンの場合、
	この値は好ましくありません。
	このオプションを使うと、
	テキスト用コンソールに戻る時に X サーバが使う周波数として
	標準以外のクロックを指定することができます。
<tag>
<!--
Option "mmio"
-->
Option &dquot;mmio&dquot;
</tag>
<!--
        This enables the use of memory-mapped I/O to talk to the BitBLT
        engine. By default memory-mapped I/O is not enabled on the
	6554x series of chips, and is only usable on 6554x's with PCI
	buses. This option has no effect when not using the BitBLT engine
	(e.g. when using "<tt>no_bitblt</tt>"), or for the 65550 which can
	only use MMIO for access to the BitBLT engine. On 65545 PCI
	machines MMIO is enabled by default because the blitter can not
	be used otherwise.
-->
	BitBLT エンジンと接続する為にメモリマップ入出力を有効にします。
	6554x 系列のメモリマップ入出力は PCI バス接続の場合にのみ
	標準で有効に (その他の場合は無効に) されています。
	BitBLT エンジンを使用していない
	(例えば "<tt>no_bitblt</tt>" を使っている) 場合には、効果がありません。
	また BitBLT エンジンに接続するために MMIO だけを使う
	65550 以降の場合にも効果がありません。
	65545 PCI 機器では MMIO 経由でなければ blitter を使えないため、
	標準で MMIO を有効にします。
<tag>
<!--
Option "suspend_hack"
-->
Option &dquot;suspend_hack&dquot;
</tag>
<!--
	This option sets the centering and stretching to the bios
	default values. This can fix suspend/resume problems on some
	machines. It overrides the options "lcd_center" 
	and "no_stretch".
-->
	センタリングと画面の拡大をバイオスの標準値に設定します。
	いくつかの機器でのサスペンド/リジュームの問題を修正します。
	&dquot;lcd_center&dquot; と &dquot;no_stretch&dquot; を
	上書きします。
<tag>
<!--
Option "use_18bit_bus"  (Chips 65540/45/46/48)
-->
Option &dquot;use_18bit_bus&dquot;  (Chips 65540/45/46/48)
</tag>
<!--
	For 24bpp on TFT screens, the server assumes that a 24bit bus
	is being used. This can result in a reddish tint to 24bpp mode.
	This option, selects an 18 bit TFT bus. For other depths this
	option has no effect.
-->
	X サーバの標準では TFT 画面の 24bpp 用に
	24 ビットバスが使用されているものと仮定します。
	これによって 24bpp モードにほのかに赤みがかかる場合があります。
	このオプションは 18 bit TFT バスを選択します。他の色深度では、
	このオプションは無効です。
<tag>
<!--
Chipset "ct65546" (or some other chip)
-->
Chipset &dquot;ct65546&dquot; (または他のチップ)
</tag>
<!--
	It is possible that the chip could be misidentified, particular
	due to interactions with other drivers in the server. It is
	possible to force the server to identify a particular chip with
	this option.
-->
	特に X サーバ内の他のドライバと干渉した場合、
	チップを誤認する可能性があります。
	このオプションで所定のチップを X サーバに強制認識させます。
<tag>
<!--
Option "sync_on_green" (Chips 65550/54/55 and 68554)
-->
Option &dquot;sync_on_green&dquot; (Chips 65550/54/55 と 68554)
</tag>
<!--
	Composite sync on green. Possibly useful if you wish to use an
	old workstation monitor. The 65550/54 internal RAMDAC's support
	this mode of operation, but whether a particular machine does
	depends on the manufacturer.
-->
	グリーン同期を設定します。
	多分、古いワークステーションのモニタを使いたいときに役にたつでしょう。
	65550/54 の内蔵 RAMDAC はこのモードをサポートしますが、
	特定の機器で使えるかどうかはその機器の製造会社に依存します。
<tag>
<!--
Option "fast_dram" (Chips 65550/54/55 and 68554)
-->
Option &dquot;fast_dram&dquot; (Chips 65550/54/55 と 68554)
</tag>
<!--
	This option sets the internal memory clock (MCLK) registers to 38MHz.
	The default value programmed by the BIOS is usually OK, but some
	machines can accept a faster MClk to achieve a better performance.
	One machine known to work well with this option is the Toshiba 720CDT.
	Note that newer machines often have an MClk greater than 38MHz, and
	so this option might actually slower the machine down. This option
	is generally not recommended and is superseded by the
	"<tt>Set_MemClk</tt>" option.
-->
	内蔵メモリクロック(MCLK) レジスタを 38MHz に設定します。
	通常は BIOS がプログラムした値を標準値として問題無いのですが、
	いくつかの機器ではより良い性能に達するために
	より高速な MClk を使わせることが可能です。
	Toshiba 720CDT という機器では
	このオプションでうまく動作することが知られています。
	より新しい機器では
	もともと 38MHz 以上の MClk を使っている場合があることに
	注意が必要です。
	というのはこのオプションによって機械が遅くなる場合があるからです。
	このオプションは一般にはお勧めできませんし、
	また現在では "<tt>Set_MemClk</tt>" オプションによって
	置き換えられています。
<tag>
<!--
DacSpeed 80.000
-->
DacSpeed 80.000
</tag>
<!--
	The server will limit the maximum dotclock to a value as specified
	by the manufacturer. This might make certain modes impossible
	to obtain with a reasonable refresh rate. Using this option the
	user can override the maximum dot-clock and specify any value they
	prefer. Use caution with this option, as driving the video processor
	beyond its specifications might cause damage.
-->
        X サーバーの標準では、製造会社によって指定された数値を上限として
	使用する最高ドットクロックを制限します。
	この動作によって、画面解像度を上げてゆくと
	実用的な再描画速度を得られないモードが現われてきます。
	このオプションを使えば、最高ドットクロックの上限を書き換えて、
	任意の値を指定することが可能です。
	仕様上の限界を超えて酷使すると
	ビデオプロセッサにダメージを与えてしまうので
	このオプションの使用には注意が必要です。
<tag>
<!--
Set_MemClk 38.000 (Chips 65550/54/55 and 68554)
-->
Set_MemClk 38.000 (Chips 65550/54/55 と 68554)
</tag>
<!--
	This option sets the internal memory clock (MCLK) registers to 38MHz
	or some other value. Use caution as excess heat generated by
	the video processor if its specifications are exceeded might cause
	damage. However careful use of this option might boost performance.
-->
        このオプションを使って、内部メモリークロック (MCLK) レジスタを
	38MHz またはその他の数値に設定できます。
	仕様上の限界を超えてビデオプロセッサを酷使すると、
	発生した過剰な熱のためにダメージを受けるため、
	このオプションの使用には注意が必要です。
	しかし、うまく使えば描画性能を大きく向上させるために
	このオプションが役に立つことでしょう。
</descrip>

<sect> Modelines <p>

<!--
When constructing a modeline for use with the Chips and Technologies
driver you'll needed to considered several points
-->
Chips and Technologies 用ドライバに使わせる modeline を作成する時には
次のいくつかの点に考慮してください。

<descrip>
<tag> * Virtual Screen Size </tag>
<!--
		It is the virtual screen size that determines the amount
	of memory used by a mode. So if you have a virtual screen size
	set to 1024x768 using a 800x600 at 8bpp, you use 768kB for the
	mode. Further to this some of the XAA acceleration requires that
	the display pitch is a multiple of 64 pixels. So the driver will
	attempt to round-up the virtual X dimension to a multiple of 64,
	but leave the virtual resolution untouched. This might further
	reduce the available memory.
-->
	そのモードで必要となるメモリ量を決定する仮想画面の大きさです。
	例えば 8bpp の 800x600 で 仮想画面を 1024x768 に設定すると、
	そのモードでは 768kB 使います。
	さらにある種の XAA アクセラレーションコードは
	画面のピッチが 64 ピクセルの倍数であることを要求します。
	したがって、ドライバは仮想 X 画面の寸法を 64 の倍数に切り上げますが
	仮想画面解像度には影響が無いようにします。
	これにより、結果として利用可能なメモリはさらに少なくなってしまいます。
<tag> * 16/24/32 Bits Per Pixel </tag>
<!--
		Chips later than the ct65540 are capable of supporting
	Hi-Color and True-Color modes. These are implemented in the current
	server. The clocks in the 6554x series of chips are internally
	divided by 2 for 16bpp and 3 for 24bpp, allowing one modeline to
	be used at all depths.  The effect of this is that the maximum
	dot clock visible to the user is a half or a third of the value
	at 8bpp. The 6555x series of chips doesn't need to use additional
	clock cycles to display higher depths, and so the same modeline
	can be used at all depths, without needing to divide the clocks.
	Also 16/24/32 bpp modes will need 2 , 3 or 4 times respectively more
	video ram.
-->
	ct65540 以降のチップでは Hi-Color モードと True-Color モードを
	使用可能です。
	これらの機能は現在の X サーバに実装されています。
	一つの modeline を全ての色深度で使えるように、
	6554x 系列のチップではドライバー内部で使用するクロックを
	16bpp の場合は 2、 24bpp の場合は 3 で割っています。
	この割算により、ユーザーにとっては最大ドットクロックが
	それぞれ 8bpp における値の 1/2 または 1/3 として
	見えることになります。
	6555x 系列のチップではより高い色深度を表示する為に
	余分なクロックサイクルを必要としません。
	従ってクロックを割算しないでも
	全ての色深度で同じ modeline を使用できます。
	また、16/24/32 bpp モードでは 8bpp モードに比べて
	それぞれ 2, 3, 4 倍のビデオメモリが必要になります。
<tag> * Frame Acceleration</tag>
<!--
		Many DSTN screens use frame acceleration to improve the
	performance of the screen. This can be done by using an external
	frame buffer, or incorporating the framebuffer at the top of video
	ram depending on the particular implementation. The Xserver assumes
	that the framebuffer, if used, will be at the top of video ram.
	The amount of ram required for the framebuffer will vary depending
	on the size of the screen, and will reduce the amount of video
	ram available to the modes. Typical values for the size of the
	framebuffer will be 61440 bytes (640x480 panel), 96000 bytes
	(800x600 panel) and 157287 bytes (1024x768 panel).
-->
	多くの DSTN 表示装置では速度向上のため
	フレーム高速化を行なっています。
	この高速化には、
	外部のフレームバッファを使用したり、
	フレームバッファをビデオメモリの最上位に組み込む
	などの実装方法があります。
	X サーバーの標準では、もしフレームバッファーが使用されているなら、
	それはビデオメモリの最上位に組み込まれているものと仮定します。
	フレームバッファに必要なメモリ量は画面サイズに依存し、
	またモードに使用可能なビデオメモリ量に影響を与えます。
	典型的なフレームバッファの大きさは
	640x480 画素では 61440 バイト、
	800x600 画素では 96000 バイト、
	1024x768 画素では 157287 バイト
	です。
<tag> * H/W Acceleration </tag>
<!--
		The H/W cursor will need 1kB for the 6554x and 4kb for the
	65550. On the 64300 chips the H/W cursors is stored in registers and
	so no allowance is needed for the H/W cursor. In addition to this
	many graphics operations are speeded up using a
	"<tt>pixmap cache</tt>". Leaving too little memory available for
	the cache will only have a detrimental effect on the graphics
	performance.
-->
	ハードウェアカーソルのために
	6554x では 1kバイト、65550 では 4kバイト必要です。
	64300 ではハードウェアカーソルをレジスタに格納しているので
	ハードウェアカーソル用のメモリは必要ありません。
	このオプションに加えて "<tt>pixmap cache</tt>" を使用すると、
	多くの画像操作がより速くなります。
	ただし、キャッシュ用のメモリが少な過ぎる場合には
	グラフィック性能にマイナスの影響しか与えません。
<tag> * VESA like modes </tag>
<!--
		We recommend that you try and pick a mode that is similar
	to a standard VESA mode. If you don't a suspend/resume or LCD/CRT
	switch might mess up the screen. This is a problem with the video
	BIOS not knowing about all the funny modes that might be selected.
-->
	標準 VESA モードに近いモードを試してみることをお勧めします。
	もしそうしなければ、
	サスペンド/リジュームや LCD/CRT 切替えを行なった際に
	画面が乱れることがあります。
	これはその時使用されているちょっと変ったモードのことを
	ビデオ BIOS がまったく認識していないために生じる問題です。
<tag> * Dot Clock </tag>
<!--
		For LCD screens, the lowest clock that gives acceptable
	contrast and flicker is usually the best one. This also gives
	more memory bandwidth for use in the drawing operations. Some
	users prefer to use clocks that are defined by their BIOS. This
	has the advantage that the BIOS will probably restore the clock
	they specified after a suspend/resume or LCD/CRT switch. For a
	complete discussion on the dot clock limitations, see the next
	section.
-->
	LCD 画面の場合、
	満足できるコントラストとちらつきの無さが得られるような
	最も低い周波数をクロックとして使いましょう。
	これによって
	描画時に使用されるメモリの帯域を大きく使うこともできます。
	BIOS によって定義されているクロックを好んで使うユーザもいます。
	このようにすると、指定したクロックを
	サスペンド/リジュームや LCD/CRT 切替えを行なった後で
	BIOS が設定してくれます。
	ドットクロックの制限に関する詳細な説明は、次の節にあります。
</descrip>

<!--
The driver is capable of driving both a CRT and a flat panel
display. In fact the timing for the flat panel are dependent on the
specification of the panel itself and are independent of the particular
mode chosen. For this reason it is recommended to use one of the programs
that automatically generate XF86Config files, such as "<tt>xf86config</tt>"
or "<tt>XF86Setup</tt>".
-->
このドライバは CRT とフラットパネルディスプレイの両方を駆動できます。
実のところ、フラットパネル用の時間調整はパネル自身の仕様に依存しており、
指定されたモードとは独立に決められます。
この理由から XF86Config ファイルを自動生成する
"<tt>xf86config</tt>" や "<tt>XF86Setup</tt>"
などのプログラムを使われるようお勧めします。

<!--
However there are many machines, particular those with 800x600 screen or
larger, that need to reprogram the panel timings. The reason for this is
that the manufacturer has used the panel timings to get a standard EGA
mode to work on flat panel, and these same timings don't work for an SVGA
mode. For these machines the "<tt>use_modeline</tt>" and/or possibly the
"<tt>fix_panel_size</tt>" option might be needed. Some machines that 
are known to need these options include.
-->
しかし、特に 800x600 の画面またはそれ以上の解像度を持つ場合など、
パネルの時間調整を再設定する必要のある機器も多く存在しています。
それは製造会社がパネルの時間調整の値を
標準EGA モードで動作するように設定していて、
その時間調整の値では SVGA モードは動作しないからです。
このような機器では
"<tt>use_modeline</tt>" または/同時に "<tt>fix_panel_size</tt>"
を必要とします。
これらのオプションを必要とする
いくつかの機器の存在が知られています。

<!--
<quote><verb>
Modeline "640x480@8bpp"	  25.175  640  672  728  816   480  489  501  526
Modeline "640x480@16bpp"  25.175  640  672  728  816   480  489  501  526
Options: "use_modeline"
Tested on a Prostar 8200, (640x480, 65548, 1Mbyte)
</verb></quote>
-->

<quote><verb>
Modeline "640x480@8bpp"	  25.175  640  672  728  816   480  489  501  526
Modeline "640x480@16bpp"  25.175  640  672  728  816   480  489  501  526
Options: "use_modeline"
Prostar 8200 でテスト済み, (640x480, 65548, 1Mバイト)
</verb></quote>

<!--
<quote><verb>
Modeline "800x600@8bpp"	  28.322  800  808  848  936   600  600  604  628
Options: "fix_panel_size", "use_modeline"
Tested on a HP OmniBook 5000CTS (800x600 TFT, 65548, 1Mbyte)
</verb></quote>
-->

<quote><verb>
Modeline "800x600@8bpp"	  28.322  800  808  848  936   600  600  604  628
Options: "fix_panel_size", "use_modeline"
HP OmniBook 5000CTS でテスト済み (800x600 TFT, 65548, 1Mバイト)
</verb></quote>

<!--
<quote><verb>
Modeline "800x600@8bpp"	  30.150  800  896  960 1056   600  600  604  628
Options: "fix_panel_size", "use_modeline"
Test on a Zeos Meridan 850c (800x600 DSTN, 65545, 1Mbyte)
</verb></quote>
-->

<quote><verb>
Modeline "800x600@8bpp"	  30.150  800  896  960 1056   600  600  604  628
Options: "fix_panel_size", "use_modeline"
Zeos Meridan 850c でテスト済み (800x600 DSTN, 65545, 1Mバイト)
</verb></quote>

<!--
The NEC Versa 4080 just needs the "fix_panel_size" option.
-->
NEC Versa 4080 では "fix_panel_size" オプションが必須です。

<!--
<sect> The Full Story on Clock Limitations <p>
-->
<sect> クロックの制限に関するまとまった説明 <p>

<!--
There has been much confusion about exactly what the clock limitations
of the Chips and Technologies chipsets are. Hence I hope that this
section will clear up the misunderstandings.
-->
Chips and Technologies 社製のチップセットが持つクロックの制限とは
正確にはどういうことなのか、という点について
混乱している場合が多いようです。
この誤解を解くために、この節に説明を書くことにしました。

<!--
In general there are two factors determining the maximum dotclock.
There is the limit of the maximum dotclock the video processor can handle, 
and there is another limitation of the available memory bandwidth. The 
memory bandwidth is determined by the clock used for the video memory.
For chipsets incapable of colour depths greater that 8bpp like the 65535,
the dotclock limit is solely determined by the highest dotclock the video
processor is capable of handling. So this limit will be either 56MHz or
68MHz for the 655xx chipsets, depending on what voltage they are driven
with, or 80MHz for the 64200 WinGine machines.
-->
一般に、最高ドットクロックを決定する要因は 2 種類存在しています。
ビデオプロセッサが扱える最高ドットクロックによる制限と、
利用可能なメモリーの帯域幅による制限です。
メモリーの帯域幅はビデオメモリーのために使用されているクロックによって
決定されます。
65535 のように、 8bpp を超える色深度を使用できないチップセットの場合、
ビデオプロセッサが扱うことのできる最高ドットクロックによってのみ、
クロックの制限が決められます。
従ってこの制限は 655xx チップセットの場合、駆動電圧によってそれぞれ
56MHz または 68MHz のどちらかになり、64200 WinGine の場合には 80MHz と
なります。

<!--
The 6554x and 64300 WinGine chipsets are capable of colour depths of 16
or 24bpp. However there is no reliable way of probing the memory clock
used in these chipsets, and so a conservative limit must be taken for
the dotclock limit. In this case the driver divides the video processors
dotclock limitation by the number of bytes per pixel, so that the
limitations for the various colour depths are
-->
6554x 系列および 64300 WinGine チップセットは、
16bpp や 24bpp の色深度を扱うことができます。
しかし、これらのチップセットに使用されているメモリクロックを
確実かつ正確に検出する方法は今のところありません。
このため、ドットクロックの制限については
より安全と思われる数値を使用する必要があります。
このため、 C&amp;T ドライバーはビデオプロセッサのドットクロック制限を
1 画素あたりのバイト数 (number of bytes per pixel) で割り、
それを動作時のドットクロック制限として使用します。
したがって、
それぞれの色深度における使用可能な最高クロックは
次のようになります。

<verb>
                        8bpp    16bpp   24bpp
64300                   85      42.5    28.33
65540/65545 3.3v        56      28      18.67
65540/65545 5v          68      34      22.67
65546/65548             80      40      26.67
</verb>

<!--
      For a CRT or TFT screen these limitations are conservative and the user
might safely override them with the "<tt>DacSpeed</tt>" option to some
extent. However these numbers take no account of the extra bandwidth 
needed for DSTN screens.
-->
CRT または TFT の表示装置に対して、これらの制限値は充分余裕のあるものであり、
 "<tt>DacSpeed</tt>" オプションによってこれらの数値をある程度大きくしても
問題無く動作するでしょう。
しかし、これらの数値では DSTN 表示装置が必要とする特別な帯域幅のことを
考慮していません。

<!--
        For the HiQV series of chips, the memory clock can be successfully probed.
Hence you will see a line like
-->
HiQV 系列のチップでは、メモリークロックをきちんと検出できます。
例えば startx のログを取ったファイルの中に

<verb>
(--) SVGA: CHIPS: probed memory clock of 40090 KHz
</verb>

という行があることに気がつくでしょう。

<!--
in your startx log file. Note that many chips are capable of higher
memory clocks than actually set by BIOS. You can use the Set_MClk
option in your XF86Config file to get a higher MClk. However some
video ram, particularly EDO, might not be fast enough to handle this,
resulting in drawing errors on the screen. The formula to determine the
maximum usable dotclock on the HiQV series of chips is
-->
多くのチップでは、 BIOS によって実際に設定されている数値よりも
高いメモリークロックを扱うことができることに注目して下さい。
XF86Config ファイルの中で Set_MClk オプションを使うことで、
より高い MClk を指定できます。
ただし、例えば EDO のようなあまり速くないビデオメモリーのために
高い MClk を扱えず、表示画面に乱れを生じる場合もあります。
HiQV 系列のチップで使用可能な最高ドットクロックを求める公式を
次に示します。

<verb>
Max Dotclock = min(MaxDClk,  0.70  * 4 * MemoryClk / (BytesPerPixel + 
                (isDSTN == TRUE ? 1 : 0)))

[最高ドットクロック] = [MaxDClk:ビデオプロセッサによる制限] または
                       {[0.70 * 4 * メモリークロック] を
		        [BytesPerPixel: 1 画素あたりのバイト数、
		        (DSTN 表示装置の場合はこれに 1 を加える)] で
		        割った数値} のどちらか低いほう
</verb>

<!--
which says that there are two limits on the dotclock. One the overall
maximum, and another due to the available memory bandwidth of the chip.
For the memory bandwidth 4 bytes are transfered every clock cycle (Hence
the 4), but after accounting for the RAS/CAS signaling only about 70%
of the bandwidth is available. The whole thing is divided by the bytes
per pixel, plus an extra byte if you are using a DSTN. The extra byte
with DSTN screens is used for the frame buffering/acceleration in these
screens. So for the various Chips and Technologies chips the maximum
specifications are
-->
上記の公式を見ればわかるように、ドットクロックには 2 種類の制限があります。
ひとつは全体的な上限値であり、もうひとつはチップが使用できるメモリー帯域幅
によるものです。
メモリー帯域幅による制限について、計算の中身を説明すると、
まずクロックサイクルあたり 4 バイトが転送されます
(したがってメモリークロックに 4 をかけます) が、
RAS/CAS シグナル処理のため、
実際に利用できる帯域幅はおよそ 70% 程度になってしまいます。
次にこの全体を 1 画素あたりのバイト数で割りますが、
DSTN 表示装置を使用する場合には
1 画素あたりのバイト数におまけの 1 バイトを追加した数値で割ります。
DSTN 表示装置の「おまけの 1 バイト」はフレームバッファ処理および
フレーム高速化のために使用されます。
Chips and Technologies 社製チップの仕様を次に示します。

<verb>
                    Max DClk MHz      Max Mem Clk MHz
65550 rev A 3.3v          80                38 
65550 rev A 5v           110                38
65550 rev B               95                50
65554                     94.5              55
65555                    110                55
68554                    110                55
69000                    220               100
</verb>

<!--
Note that all of the chips except the 65550 rev A are 3.3v only. Which
is the reason for the drop in the dot clock. Now the maximum memory clock
is just the maximum supported by the video processor, not the maximum
supported by the video memory. So the value actually used for the memory
clock might be significantly less than this maximum value. But assuming your
memory clock is programmed to these maximum values the various maximum dot
clocks for the chips are
-->
65550 rev A 以外のチップはすべて 3.3v 専用であることに注意して下さい。
これはドットクロックが一時的に落ち込んでいる理由となっています。
ところで上記の最高メモリークロックは
単にビデオプロセッサがサポートしている数値というだけであり、
ビデオメモリーがサポートする最高クロックと同じであるという
保証はありません。
実際にメモリークロックとして使われている数値は
上記の最大値よりもずっと小さい場合があります。
しかし、
メモリークロックが上記の最高値にプログラムされていると
仮定した場合には、
それぞれのチップに対する最高ドットクロックの制限は
次のようになります。

<verb>
                        ------CRT/TFT-------    --------DSTN--------
                        8bpp    16bpp   24bpp   8bpp    16bpp   24bpp
65550 rev A 3.3v        80      53.2    35.47   53.2    35.47   26.6
65550 rev A 5v          106.2   53.2    35.47   53.2    35.47   26.6
65550 rev B             95      70      46.67   70      46.67   35.0
65554                   94.5    77      51.33   77      51.33   38.5
65555                   110     77      51.33   77      51.33   38.5
68554                   110     77      51.33   77      51.33   38.5
69000                   220    140      93.33  140      93.33   70.0
</verb>

<!--
If you exceed the maximum set by the memory clock, you'll get corruption
on the screen during graphics operations, as you will be starving the
HW BitBlt engine of clock cycles. If you are driving the video memory
too fast (too high a MemClk) you'll get pixel corruption as the data
actually written to the video memory is corrupted by driving the memory
too fast. You can probably get away with exceeding the Max DClk at 8bpp
on TFT's or CRT's by up to 10% or so without problems, it will just generate
more heat, since the 8bpp clocks aren't limited by the available memory
bandwidth.
-->
メモリークロックによって決まる上限を超えて動かした場合、
HW BitBlt エンジンがクロックサイクルごとに必要とするデータを入手できず、
画像操作中の表示が乱れることになるでしょう。
もし (高すぎる MemClk を指定するなどによって) 
ビデオメモリーを速すぎるクロックで動かした場合には、
メモリーに実際に書き込まれるデータが壊れてしまうため
画素単位での表示異常を見ることになるでしょう。
TFT または CRT 上で 8bpp 表示の場合には、
おそらく Max DClk 値を 10% 程度超えて設定しても
すこしばかり余分に熱を発生する以外の問題を生じることなく
描画速度を向上させることが可能です。
これは 8bpp におけるクロックが
使用可能なメモリーの帯域幅によって制限されないことによります。

<!--
If you find you truly can't achieve the mode you are after with the default
clock limitations, look at the options "<tt>DacSpeed</tt>" and 
"<tt>Set_MemClk</tt>". Using these should give you all the capabilities
you'll need in the server to get a particular mode to work. However use
caution with these options, because there is no guarantee that driving the
video processor beyond it capabilities won't cause damage.
-->
もし、標準のクロック制限に従うと
必要なモードをどうしても使えないような場合には、
  "<tt>DacSpeed</tt>" および "<tt>Set_MemClk</tt>" オプションを
調べてみましょう。
これらのオプションを使えば、特定のモードで動作させるために
X サーバー内で必要とするすべての機能を得ることができます。
だたし、ビデオプロセッサをその仕様を超えて動作させた場合、
ダメージを受けないという保証はありません。
これらのオプションを使用するにあたっては、充分な注意が必要です。

<!--
<sect> Troubleshooting <p>
-->
<sect> トラブルシューティング(問題解決)<p>

<descrip>
<!--
<tag> The cursor appears as a white box, after switching modes</tag>
	There is a known bug in the H/W cursor, that sometimes causes
	the cursor to be redrawn as a white box, when the mode is changed.
	This can be fixed by moving the cursor to a different region,
	switching to the console and back again, or if it is too annoying
	the H/W cursor can be disabled by removing the "<tt>hw_cursor</tt>"
	option.
-->
<tag>	モードを切替えた後で、カーソルが白い矩形になって見える。</tag>
	モードを切替えた時カーソルを白い矩形に再描画してしまう、
	ハードウェアカーソルの問題だと分かっています。
	この問題を解決するにはカーソルを他の領域に移動させ、コンソールへ
	切替えてから元に戻すか、切替えが面倒なら "<tt>hw_cursor</tt>" 
	オプションを外してハードウェアカーソルを無効にしてください。
<!--
<tag> The cursor hot-spot isn't at the same point as the cursor</tag>
 	With modes on the 6555x machines that are stretched to fill the
	flat panel, the H/W cursor is not correspondingly stretched. This
	is a small and long-standing bug in the current server. You can
	avoid this by either using the "<tt>no_stretch</tt>" option or
	removing the <tt>hw_cursor</tt>" option.
-->
<tag>	カーソルのホットスポットがカーソルと一致していない。</tag>
	6555x の機器上でフラットパネル全体に拡大したモードの場合、
	ハードウェアカーソルがモードに対応して拡大されていません。
	この問題は現在のサーバに存在する、
	小さいが長いあいだ残されたままのバグです。
	"<tt>no_stretch</tt>" か "<tt>sw_cursor</tt>" 
	のどちらかを使うことで、このバグを避けることが出来ます。<newline>
	訳注：ホットスポット:クリックした時の有効点。
<!--
<tag> The lower part of the screen is corrupted</tag>
	Many DSTN screens use the top of video ram to implement a frame
	accelerator. This reduces the amount of video ram available to
	the modes. The server doesn't prevent the user from specifying
	a mode that will use this memory, it prints a warning on the console.
	The effect of this problem will be that the lower part of the screen
	will reside in the same memory as the frame accelerator and will
	therefore be corrupt. Try reducing the amount of memory consumed
	by the mode.
-->
<tag>	画面の下の方の表示が乱れる </tag>
	多くの DSTN 画面では
	ビデオメモリの上位をフレーム高速化のために使用しています。
	これはモードのために使用できるメモリの量を
	減少させてしまいます。
	X サーバは
	利用者がこの領域のメモリを使うモードを指定することを
	妨げたりせず、コンソールに警告のメッセージを表示します。
	この場合、画面の下の方に相当するメモリがフレーム高速化の領域と
	同じ位置に割り当てられるため、両者が衝突して画面が乱れます。
	モードによって消費されるメモリの量を削減して下さい。
<!--
<tag> There is a video signal, but the screen doesn't sync.</tag>
        You are using a mode that your screen cannot handle. If it is a
        non-standard mode, maybe you need to tweak the timings a bit. If
        it is a standard mode and frequency that your screen should be
        able to handle, try to find different timings for a similar mode
        and frequency combination. For LCD modes, it is possible that your
	LCD panel requires different panel timings at the text console than
	with a graphics mode. In this case you will need the
	"<tt>use_modeline</tt>" and perhaps also the "<tt>fix_panel_size</tt>"
	options to reprogram the LCD panel timings to sensible values.
-->
<tag>	ビデオ信号は来ているが、画面が同期しない。</tag>
	その表示装置で取り扱うことができないモードを使用しています。
	非標準なモードを使用している場合は、
	少し画面の時間調整を変更する必要があるかもしれません。
	その表示装置で取り扱うことができるはずの
	標準的なモードと周波数を使用している場合は、
	それに近いモードと周波数の組合せを実現できるような
	異なる時間調整の設定を試してみて下さい。
	LCD のモードについては、
	テキストコンソールのパネルの時間調整とグラフィックのそれとで
	異なる数値を必要とする場合があります。
	このような場合には
	"<tt>use_modeline</tt>" を指定する必要があるかもしれず、
	多分 "<tt>fix_panel_size</tt>" も指定して
	LCD パネルの時間調整を微妙に変更する必要があるでしょう。
<!--
<tag> `Wavy' screen.</tag>
        Horizontal waving or jittering of the whole screen, continuously
        (independent from drawing operations).  You are probably using a
        dot clock that is too high (or too low); it is also possible that
	there is interference with a close MCLK. Try a lower dot clock.
	For CRT's you can also try to tweak the mode timings; try increasing
        the second horizontal value somewhat.
-->
<tag>	`波うつ' 画面。</tag>
	描画操作によらず絶えまなく水平方向に波うったり画面全体に落ち着かない。
	使用しているドットクロックが高過ぎるか低過ぎるような場合に発生します。
	近過ぎる MCLK と干渉をおこしている可能性もあります。
	より低いドットクロックを試してみましょう。
	CRT の場合には、モードの時間調整も変更してみましょう。
	2 番めの水平方向の数値を幾らか増加させてみると良いかもしれません。
<!--
<tag> Crash or hang after start-up (probably with a black screen).</tag>
        Try the "<tt>noaccel</tt>" or "<tt>no_bitblt</tt>" options. Check
        that the BIOS settings are OK; in particular, disable caching of
        0xa0000-0xaffff. Disabling hidden DRAM refresh may also help.
-->
<tag>	起動後に終了した、または固まった(多分、画面が黒いままで)。</tag>
	"<tt>noaccel</tt>" または "<tt>no_bitblt</tt>" オプションを
	試して下さい。
	BIOS の設定が大丈夫かチェックしましょう。
	特に 0xa0000-0xaffff のキャッシュは無効にしましょう。
	隠し DRAM のリフレッシュも無効にしましょう。
<!--
<tag> Hang as the first text is appearing on the screen on SVR4 machines.</tag>
        This problem has been reported under UnixWare 1.x, but not tracked
        down. It doesn't occur under UnixWare 2.x and only occurs on the
        HiQV series of chips. It might affect some other SVR4 operating
        systems as well. The workaround is to turn off the use of CPU to
        screen acceleration with the "<tt>xaa_no_color_exp</tt>" option.
-->
<tag> SVR4 の機器では画面上に最初の文字が出力されると固まる。</tag>
	この問題は UnixWare 1.x で報告されています。しかし解析されていません。
	UnixWare 2.x ではこの問題は現れません。
	また、HiQV シリーズのチップでのみ現れます。
	その他の SVR4 オペレーティングシステムでも同様の悪影響が
	出るかもしれません。
	この現象に遭遇したら "<tt>xaa_no_color_exp</tt>" オプションを使って
	CPU 画面間の高速化機能を使わないようにしましょう。
<!--
<tag> Crash, hang, or trash on the screen after a graphics operation.</tag>
        This may be related to a bug in one of the accelerated
        functions, or a problem with the BitBLT engine. Try the
        "<tt>noaccel</tt>" or "<tt>no_bitblt</tt>" options. Also check the
	BIOS settings. It is also possible that with a high dot clock and
	depth on a large screen there is very little bandwidth left for using
	the BitBLT engine. Try reducing the clock.
-->
<tag>	グラフィック操作後に終了する、固まる、または画面にゴミをまき散らす。</tag>
	この現象はアクセラレータ関数のバグに起因したものか、
	BitBLT エンジンに関する問題です。
	"<tt>noaccel</tt>" または "<tt>no_bitblt</tt>" オプションを
	試してみて下さい。
	また BIOS の設定もチェックしましょう。
	それから大きな画面で高いドットクロックや大きな色深度を使うと、
	BitBLT エンジンが使うための残りのメモリが
	とても小さな帯域幅になってしまいます。
	こういう場合にはクロックの削減を試して下さい。
<!--
<tag> Chipset is not detected.</tag>
        Try forcing the chipset to a type that is most similar to what
        you have.
-->
<tag> チップセットを探知しない。</tag>
	お手持ちのチップセットに似た型のチップセットを
	強制的に指定してみましょう。
<!--
<tag>The screen is blank when starting X</tag>
	One possible cause of this problem is if the kernel has been 
	compiled with the "APM_DISPLAY_BLANK" option. It appears that
	this option doesn't work as specified and can cause the Xserver
	to blank when starting X. In all cases the kernel should be compiled
	without this option. If the problem remains a CRT/LCD or switch to
	and from the virtual console will often fix it.
-->
<tag>X の開始時に画面が真っ黒になる。</tag>
	この問題は
	"APM_DISPLAY_BLANK" オプションを指定して
	カーネルをコンパイルしている場合に
	起こる可能性があります。
	このオプションを指定しても意図したとおりに動作せず、
	X 起動時に Xserver の表示画面が真っ黒になる場合があります。
	いずれにしろ、
	カーネルのコンパイル時にこのオプションを指定してはいけません。
	この問題が発生した場合、
	CRT/LCD または仮想コンソールとの画面切替えで回復する場合があります。
<!--
<tag> Textmode is not properly restored</tag>
        This has been reported on some configurations. Many laptops
	use the programmable clock of the 6554x chips at the console.
	It is not always possible to find out the setting that is
	used for this clock if BIOS has written the MClk after the
	VClk. Hence the server assumes a 25.175MHz clock at the
	console. This is correct for most modes, but can cause some
	problems. Usually this is fixed by switching between the LCD
	and CRT. Alternatively the user can use the "<tt>TextClockFreq</tt>"
	option described above to select a different clock for the
	text console. Another possible cause of this problem is if the kernel
	is compiled with the "APM_DISPLAY_BLANK" option. As mentioned
	before, this option should be disabled.
-->
<tag> テキストモードが適切に回復しない。</tag>
	いくつかの環境で発生すると報告されています。
	多くのラップトップでは
	コンソールで 6554x のプログラマブルクロックを使っています。
	BIOS が VClk の後に MClk を書き込んだ場合には、
	このコンソール用クロックの設定を
	プログラマブルクロックから必ず発見できるわけではありません。
	このため X サーバは 25.175MHz をコンソール用と決めています。
	この設定はほとんどのモードで正常に動作しますが、
	問題の発生する場合もあり得ます。
	通常この問題は LCD と CRT の間で画面切替えを実行することにより
	回復します。
	あるいは既に説明した "<tt>TextClockFreq</tt>" オプションを使って
	テキストコンソール用に標準とは異なるクロックを選べます。
	この問題の原因に関する他の可能性として、
	"APM_DISPLAY_BLANK" オプションを指定して
	カーネルをコンパイルしている場合があります。
	既に説明したように、このオプションは無効にしてください。
<!--
<tag> I can't display 640x480 on my 800x600 LCD</tag>
	The problem here is that the flat panel needs timings that
	are related to the panel size, and not the mode size. There is
	no facility in the current Xservers to specify these values,
	and so the server attempts to read the panel size from the
	chip. If the user has used the "<tt>use_modeline</tt>" or
	"<tt>fix_panel_size</tt>" options the panel timings are derived
	from the mode, which can be different than the panel size. Try
	deleting theses options	from XF86Config or using an LCD/CRT switch.
-->
<tag> 800x600 の液晶ディスプレイで 640x480 が表示出来ません。 </tag>
	この問題は、フラットパネルがその時間調節値として
	モードによる画面サイズではなく
	パネルの大きさに関係した数値を必要とする
	ことによります。
	現在の X サーバーにはこの数値を指定する機能はありませんので、
	X サーバはパネルの大きさをチップから読み込みます。
	"<tt>use_modeline</tt>" または "<tt>fix_panel_size</tt>" オプションを
	指定した場合には、パネルの時間調整としてパネルの大きさではなく
	指定されたモードの画面の大きさから求められた数値を使用します。
	これらのオプションを XF86Config から取り除くか、
	LCD/CRT 表示画面切替えを試してみましょう。
<!--
<tag> I can't get a 320x240 mode to occupy the whole 640x480 LCD</tag>
	There is a bug in the 6554x's H/W cursor for modes that are
	doubled vertically. The lower half of the screen is not accessible.
	The servers solution to this problem is not to do doubling vertically.
	Which results in the 320x240 mode only expanded to 640x360. If this
	is a problem, a work around is to remove the "<tt>hw_cursor</tt>"
	option. The server will then allow the mode to occupy the whole
	640x480 LCD.
-->
<tag> 640x480 LCD 全面を占有する 320x240 モードを得ることが出来ない。</tag>
	6554x のハードウェアカーソルでは縦方向に 2 倍になるモードに
	関するバグがあります。画面の下半分が利用できません。
	この問題の解決方法は縦方向に 2 倍にしない事です。
	320x240 モードでの解決結果は 640x360 に拡大する事だけです。
	これをしたくないならば、
	"<tt>sw_cursor</tt>" オプションを使ってください。
	これによって、 640x480 LCD の全面を占有するモードが使えます。
<!--
<tag> After a suspend/resume my screen is messed up</tag>
	During a suspend/resume, the BIOS controls what is read and 
	written back to the registers. If the screen is using a mode
	that BIOS doesn't know about, then there is no guarantee that
	it will be resumed correctly. For this reason a mode that is
	as close to VESA like as possible should be selected. It is also
	possible that the VGA palette can be affected by a suspend/resume.
	Using an 8bpp, the colour will then be displayed incorrectly. This
	shouldn't affect higher depths, and is fixable with a switch to
	the virtual console and back.
-->
<tag> サスペンド/リジュームの後で画面が乱れる。</tag>
	サスペンド/リジュームの時は BIOS がレジスタを読み書きします。
	BIOS が分からないモードを使っている場合、
	正しくリジュームする保証はありません。
	したがって、 VESA 標準にできるだけ近いモードを選択するべきです。
	また VGA パレットもサスペンド/リジュームによって
	影響を受ける可能性があります。
	8bpp を使用している場合、色が正しく表示出来なくなります。
	より大きな bpp ではこの現象は発生しません。
	またこの問題は仮想コンソールとの画面切替えによって回復可能です。
<!--
<tag> The right hand edge of the mode isn't visible on the LCD</tag>
	This is usually due to a problem with the "<tt>lcd-center</tt>"
	option. If this option is removed form XF86Config, then the problem
	might go away. Alternatively the manufacturer could have incorrectly
	programmed the panel size in the EGA console mode. The
	"<tt>fix_panel_size</tt>" can be used to force the modeline values into
	the panel size registers. Two machines that are known to have this
	problem are the "<tt>HP OmniBook 5000</tt>" and the "<tt>NEC  Versa
	4080</tt>".
-->
<tag> LCD 上でモードの右端が表示出来ない。 </tag>
	この現象は通常 "<tt>lcd-center</tt>" オプションと関連しています。
	このオプションを XF86Config から取り除くと、
	問題が解消されるかもしれません。
	別の原因として、
	製造者がパネルの大きさを間違って EGA コンソールモードとして
	仕込んだ場合にも発生します。
	"<tt>fix_panel_size</tt>" オプションを使用して
	modeline の数値からパネルサイズレジスタの内容を置き換えることが
	可能です。
	"<tt>HP OmniBook 5000</tt>" および "<tt>NEC  Versa 4080</tt>" の
	2 つの機器で、この問題の発生が報告されています。
<!--
<tag> My TFT screen has a reddish tint in 24bpp mode</tag>
	The server assumes that the TFT bus width is 24bits. If this is not
	true then the screen will appear to have a reddish tint. This can
	be fixed by using the "<tt>use_18bit_bus</tt>" option. Note that
	the reverse is also true. If the "<tt>use_18bit_bus</tt>" is used
	and the TFT bus width is 24bpp, then the screen will appear reddish.
	Note that this option only has an effect on TFT screens.
-->
<tag> 24bpp モードの時、 TFT 画面にほのかに赤みがかかる。</tag>
	X サーバは TFT のバスを 24 ビットと仮定しています。
	ほのかに赤みがかかるのはこの仮定が正しくない場合です。
	この問題は "<tt>use_18bit_bus</tt>" オプションを使用することで
	解決します。
	この反対もありうるので注意してください。
	24bpp の TFT バスに "<tt>use_18bit_bus</tt>" を使用すると
	画面にほのかに赤みがかかります。
	このオプションは TFT にしか効果がないので注意してください。
<!--
<tag> I can't start X-windows with 16, 24 or 32bpp</tag>
	Firstly, is your machine capable of 16/24/32bpp with the mode
	specified. Many LCD displays are incapable of using a 24bpp 
	mode. Also you need at least a 65540 to use 16/24bpp and at least a
	65550 for 32bpp. The amount of memory used by the mode will be
	doubled/tripled/quadrupled. The correct options to start the server
	with these modes are
-->
<tag> 16、24 または 32bpp で X を起動できない。</tag>
	まず、指定したモードで 16/24/32bpp を使える機器であるかどうか
	確認してください。
	多くの液晶ディスプレイでは 24bpp を扱えません。
	また 16/24bpp を使うには 65540 以上、
	32bpp を使うには 65550 以上が必要です。
	モードに使うビデオメモリは 8bpp のそれぞれ 2/3/4倍必要です。
	それぞれのモードで X サーバーを起動する時の正しいオプションを
	次に示します。

<verb>
	  startx -- -bpp 16               5-6-5 RGB ('64K color', XGA)
	  startx -- -bpp 16 -weight 555   5-5-5 RGB ('Hicolor')
	  startx -- -bpp 24               8-8-8 RGB truecolor
</verb>
<!--
	or with the HiQV series of chips (6555x, 68554 or 69000) you might try
-->
	HiQV 系列のチップ (6555x, 68554 または 69000) では、
	次のような指定も可能です。

<verb>
	  startx -- -bpp 32               8-8-8 RGB truecolor
</verb>

</descrip>

<!--
  A general problem with the server that can manifested in many way such
  as drawing errors, wavy screens, etc is related to the programmable
  clock. Many potential programmable clock register setting are unstable.
  However luckily there are many different clock register setting that
  can give the same or very similar clocks. The clock code can be fooled
  into giving a different and perhaps more stable clock by simply changing
  the clock value slightly. For example 65.00MHz might be unstable while
  65.10MHz is not. So for unexplained problems not addressed above, please
  try to alter the clock you are using slightly, say in steps of 0.05MHz
  and see if the problem goes away. Alternatively, using the
  "<tt>use_vclk1</tt>" option with chips later than the 65550 might also
  help.
-->
  画面描画エラーや波うつ画面などの多くのかたちで現れてくる
  X サーバについての一般的な問題は、プログラマブルクロックに
  関連したものです。
  多くのプログラマブルクロックレジスタの設定は潜在的に不安定です。
  とはいえ好運にも同じか非常に良く似たクロックを発生させる
  多くの異なるレジスタ設定があります。
  単に指定するクロック値を少し変更することで、
  より安定した異なるクロックを発生するように
  クロックプログラムを手なづけることが可能です。
  例えば 65.00MHz が不安定であっても 65.10MHz は安定している、
  ということもあり得ます。ですから、今までに説明していない問題に
  対処するには、クロックをほんの少しづつ、例えば 0.05MHz 刻みに
  変更してみて、問題が解消するかどうか試してみましょう。
  別の方法として、 65550 以降のチップでは
  "<tt>use_vclk1</tt>" オプションを使ってみるのも良いでしょう。

<!--
  For other screen drawing related problems, try the "<tt>noaccel</tt>" or
  "<tt>no_bitblt</tt>" options. A useful trick for all laptop computers is to
  switch between LCD/CRT (usually with something like Fn-F5), if the
  screen is having problems.
-->
  その他の画面描画に関する問題に対しては、
  "<tt>noaccel</tt>" または "<tt>no_bitblt</tt>" オプションを
  試してみて下さい。
  画面表示に問題が発生した場合、
  すべてのラップトップコンピュータで有効な技は
  LCD/CRT 表示画面切替えです。
  (通常ファンクションキー 5 番によって実行できます)

<!--
  If you are having driver-related problems that are not addressed by this
  document, or if you have found bugs in accelerated functions, you can
  try contacting the XFree86 team (the current driver maintainer can be
  reached at <it>dbateman@eng.uts.edu.au</it> or 
  <it>Egbert.Eich@Physik.TH-Darmstadt.DE)</it>,
  or post in the Usenet newsgroup "<it>comp.windows.x.i386unix</it>".
-->
  この文書に記載の無いドライバ関連の問題が発生した場合、
  もしくは高速化機能にバグを発見した場合には、
  XFree86 チームに連絡をとってみて下さい。
  (現在このドライバの保守は  <it>dbateman@eng.uts.edu.au</it> および
  <it>Egbert.Eich@Physik.TH-Darmstadt.DE</it> が行なっています。)
  もしくは、Usenet のニュースグループ "<it>comp.windows.x.i386unix</it>"
  に投稿して下さい。

<!--
<sect> Disclaimer <p>
-->
<sect> 責任放棄声明 <p>

<!--
XFree86, allows the user to do damage to their hardware with software.
Although the authors of this software have tried to prevent this, they
disclaim all responsibility for any damage caused by the software. Use
caution, if you think the Xserver is frying your screen, TURN THE COMPUTER
OFF!!
-->
XFree86 の提供するソフトウェアは、
利用者が自分自身でハードに損傷を与えることを許容する可能性があります。
開発者達はそういうことが起きないように努力してはいますが、
このソフトによる如何なる損傷についても、全ての責任を放棄しています。
使用に際しては充分注意して下さい。
Xserver が画面を焼いていると感じた場合には、すぐに電源を切って下さい。

<!--
<sect> Acknowledgement <p>
-->
<sect> 謝辞 <p>

<!--
The authors of this software wish to acknowledge the support
supplied by Chips and Technologies during the development of this
software.
-->
このソフトウェアの作者を代表して、
開発中に Chips and Technologies 社から提供された支援に対して
感謝します。

<!--
<sect> Authors <p>
-->
<sect> 著者 <p>

<!--
<tt>Major Contributors</tt> (In no particular order)
<itemize>
<item>Nozomi Ytow
<item>Egbert Eich
<item>David Bateman
<item>Xavier Ducoin
</itemize>
-->
<tt>主な貢献者</tt> (順不同)
<itemize>
<item>Nozomi Ytow
<item>Egbert Eich
<item>David Bateman
<item>Xavier Ducoin
</itemize>

<!--
<tt>Contributors</tt> (In no particular order)
<itemize>
<item>Ken Raeburn
<item>Shigehiro Nomura
<item>Marc de Courville
<item>Adam Sulmicki
<item>Jens Maurer
</itemize>
-->
<tt>貢献者</tt> (順不同)
<itemize>
<item>Ken Raeburn
<item>Shigehiro Nomura
<item>Marc de Courville
<item>Adam Sulmicki
<item>Jens Maurer
</itemize>

<!--
We also thank the many people on the net who have contributed by reporting
bugs and extensively testing this server before its inclusion in XFree86 3.2
-->
このサーバが XFree86 3.2 に含まれるようになる以前から
バグレポートと徹底的なテストによって開発に貢献してくださった
インターネット上の多くの皆さんにも感謝致します。

<verb>
$XFree86: xc/programs/Xserver/hw/xfree86/doc/Japanese/sgml/chips.sgml,v 1.1.2.4 1999/11/26 15:23:56 hohndel Exp $
</verb>

<hrule>

このファイルは
岡本  一幸 
( Kazuyuki Okamoto <url url="mailto:ikko-@pacific.rim.or.jp"
name="&lt;ikko-@pacific.rim.or.jp&gt;"> ) さんによる
xc/programs/Xserver/hw/xfree86/doc/sgml/chips.sgml,v 3.12.2.6 1997/07/28 14:17:31
の日本語訳をベースに、
佐野  武俊
( Taketoshi Sano <url url="mailto:kgh12351@nifty.ne.jp"
name="&lt;kgh12351@nifty.ne.jp&gt;"> ) が
XFree86 3.3.3 を日本でインストールする人向けに
xc/programs/Xserver/hw/xfree86/doc/sgml/chips.sgml,v 3.12.2.12 1998/11/07 13:52:45
を和訳したものです。
ここがおかしいとか、ここはこうしたほうがいいといったご意見がありましたら、
電子メールでお知らせ下さい。
原文の著作権は XFree86 プロジェクト社にあります。
この和訳の著作権は xjman プロジェクトが所有しますが、
文章内容についての不具合は私 (佐野) まで電子メールで送って下さい。
<hrule>
</article>
