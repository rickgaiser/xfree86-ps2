<!DOCTYPE linuxdoc PUBLIC "-//XFree86//DTD linuxdoc//EN">

<article>
<!--
<title> Information for S3 ViRGE, ViRGE/DX, ViRGE/GX, ViRGE/GX2, 
ViRGE/MX, ViRGE/VX, Trio3D, Trio3D/2X, Savage3D and Savage4 Users
-->
<title> S3 ViRGE, ViRGE/DX, ViRGE/GX, ViRGE/GX2, 
ViRGE/MX, ViRGE/VX, Trio3D, Trio3D/2X, Savage3D, Savage4
ユーザ向けの情報
<author>The XFree86 Project Inc.
<date>2 August 1999
<trans>The X Japanese Documentation Project
<tdate>12 September 1999
<toc>

<!-- <sect> Supported hardware -->
<sect> サポートしているハードウェア
<p>
<!--
Since release 3.3.2 of XFree86, there are now two servers which support
the ViRGE family of chips. The XF86_S3V server 
is a dedicated server which supports the S3 ViRGE (86C325), the ViRGE/DX 
(86C375), ViRGE/GX (86C385) and the ViRGE/VX (86C988) chips. Use of that
server is no longer recommended. It is not actively being supported anymore.
-->
XFree86 リリース 3.3.2 から、ViRGE 系のチップをサポートするサーバは2つ
になりました。XF86_S3V サーバは S3 ViRGE (86C325), ViRGE/DX (86C375),
ViRGE/GX (86C385), ViRGE/VX (86C988) チップをサポートする専用サーバで
す。現在はこれらのサーバは使わない方がいいでしょう。既にサポートが活発
に行われなくなったからです。

<!--
The above ViRGE chipsets are supported in the 
XF86_SVGA server, which includes a new ViRGE driver making use 
of the XAA acceleration architecture and also supports 
ViRGE/GX2 (86C357), ViRGE/MX (86C260), Trio3D (86C365), Trio3D/2X (86C362), 
Savage3D (86C391), Savage4 (86C396/86C397) and Savage2000 chips as of 3.3.6.
-->
上記の ViRGE 系チップセットは XF86_SVGA サーバでもサポートされています。
このサーバには XAA アクセラレーションアーキテクチャを利用した ViRGE ド
ライバが含まれており、XFree86 3.3.6 では ViRGE/GX2 (86C357), ViRGE/MX
(86C260), Trio3D (86C365), Trio3D/2X (86C362), Savage3D (86C391),
Savage4 (86C396/86C397), Savage2000 チップもサポートしています。
<p>
<!--
The following sections describe details of ViRGE support.  Be aware that
there are two servers described.  XF86_S3V is the ViRGE specific server
and was created first.  The new acceleration architecture support is found
in the XF86_SVGA server using the s3_virge driver.  Each has strengths and
weaknesses.
-->
以降のセクションでは ViRGE のサポートについて詳しく説明します。2つのサー
バについての説明があることに注意してください。XF86_S3V は ViRGE 専用の
サーバであり、最初に作られたものです。新しいアクセラレーションアーキテ
クチャのサポートが XF86_SVGA サーバに入っており、これが s3_virge ドラ
イバを使っています。それぞれに長所と短所があります。

<!-- <sect> XF86_S3V server -->
<sect> XF86_S3V サーバ
<p>
<!--
The S3V server has some minor fixes since 3.3.1.
You should find that the ViRGE server is stable at all depths.
The server supports 1 and 32 bpp
pixmap formats.
This fixes known problems with xanim and Netscape clients in 
early versions of the S3V server.
It has been tested with ViRGE cards with 2 and 4MB DRAM, ViRGE/DX 4M,
 ViRGE/VX 8M (4M VRAM/4M DRAM), and with a 220MHz ViRGE/VX card with 2MB
VRAM up to 1600x1200 with 8/15/16bpp.
-->
3.3.1 以降、S3V サーバは細かい点がいくつか変更されています。使ってみれ
ば、ViRGE サーバはどの色の深さでも安定していることが分かるでしょう。こ
のサーバは 1 bpp と 32bpp のピックスマップフォーマットをサポートしてい
ます。この修正は、初期バージョンの S3V サーバにおいて、xanim や 
Netscape といったクライアントで起こっていた問題に対処するものです。こ
のサーバがテストされているカードは、2MB と 4MB のDRAM を積んだ ViRGE 
カード、ViRGE/DX 4M, ViRGE/VX 8M (4M VRAM/4M DRAM), 220MHz の ViRGE/VX 
カード(1600x1200 で 8/15/16bpp まで使える 2MB VRAM を積んだもの)です。

<!--  
NOTE: This driver is pretty new, and not everything might work like you expect
it to. It shouldn't crash your machine, but you may have video artifacts
or missing lines. Please report any and all problems to
<htmlurl name="XFree86@Xfree86.org" url="mailto:XFree86@Xfree86.org">
using the appropriate bug report sheet. 
-->
注意: このドライバは比較的新しいものであり、全てが期待通りに動くとは限
りません。マシンをクラッシュさせることは無いはずですが、ビデオ表示がお
かしくなったり、行が欠けたりすることはあるかもしれません。問題が見つか
れば、どんなものであっても
<htmlurl name="XFree86@Xfree86.org" url="mailto:XFree86@Xfree86.org">
までお知らせください。その際には、適切なバグレポート用紙を使ってくださ
い。

<!-- <sect1>Features: -->
<sect1>機能:
<p>

<itemize>
<!--
<item>Basic support for S3 ViRGE, ViRGE/DX, ViRGE/GX and ViRGE/VX video
  adapters
-->
<item>S3 ViRGE, ViRGE/DX, ViRGE/GX, ViRGE/VX ビデオアダプタの基本サポー
ト
<!--
<item>uses linear frame buffer
-->
<item>リニアフレームバッファの使用
<!--
<item>it should be possible to reach resolutions up to the maximum supported
 by your video card memory.  (eg. 1600x1200 at 8 and 16bpp, 1280x1024 at
 24/32 bpp for a 4 Meg. card)
-->
<item>ビデオカードのメモリによって決まる最大の解像度までの解像度を使う
ことができるはずです(メモリが 4M のカードでは、8/16bpp で 1600x1200,
24/32bpp で 1280x1024)。
<!--
<item>it should be possible to use pixel depths of 8, 15, 16, 24, and 32 bits
  per pixel.
-->
<item>8, 15, 16, 24, 32 bpp のピクセルを使うことができるはずです。
<!--
<item>32 bpp is implemented as translation to 24 bpp
-->
<item>32 bpp は 24bpp へ変換されるように実装されています。
</itemize>
		       
<!-- <sect1>Known limitations -->
<sect1>既知の制限事項
<p>

<itemize>
<!--
<item>No support for external RAMDACs on the ViRGE/VX.
-->
<item>ViRGE/VX では 外部 RAMDAC はサポートされていません。
<!--
<item>No support for VLB cards.
-->
<item>VL バスのカードはサポートされていません。
<!--
<item>No support for doublescan modes.
-->
<item>複数スクリーンモードはサポートされていません。
<!--
<item>The driver only works with linear addressing.
-->
<item>ドライバはリニアアドレッシングでしか動作しません。
<!--
<item>For 24/32 bpp some simple dashed line acceleration is implemented, but
sloped dash/double dash are drawn as solid lines.
-->
<item>24/32 bpp の場合、点線のうち簡単なもののいくつかのアクセラレーショ
ンは実装されていますが、sloped dash や double dash は実線を使って描画さ
れます。
<!--
<item>No support for current chipsets.
-->
<item>最新のチップセットはサポートされていません。
<!--
<item>No longer actively maintained.
-->
<item>もはや活発にはメンテナンスされていません。
</itemize>


<!-- <sect1>Configuration: -->
<sect1>設定:
<p>
<!--
The server auto-detects RAM size, RAMDAC and ClockChip. Do not bother putting 
these in your "Device" section. 
The "nolinear" option is unsupported.
-->
このサーバは RAM のサイズ、RAMDAC, ClockChip を自動検出します。わざわ
ざ "Device" セクションを設定する必要はありません。"nolinear" オプショ
ンはサポートされていません。

<!-- <sect2>Cursor: -->
<sect2>カーソル:
<p>

<!--
<itemize>
<item>The default is hardware cursor, no option is needed.
<item>"sw_cursor" switches to software cursor.
</itemize>
-->
<itemize>
<item>デフォルトではハードウェアカーソルを使います。オプション指定は必
要ありません。
<item>"sw_cursor" を指定すると、ソフトウェアカーソルに切り替わります。
</itemize>

<!-- <sect> XF86_SVGA server -->
<sect> XF86_SVGA サーバ
<p>
<!--
The XF86_SVGA ViRGE driver supports all current flavors of the S3 ViRGE
chipset including Trio3D and the Savage family.
It uses the XAA acceleration architecture for acceleration, and allows
color depths of 8, 15, 16, 24 and 32 bpp. It has been tested on several 2MB
and 4MB ViRGE cards, a 4MB ViRGE/DX card, a ViRGE/VX card and a 4MB Trio3D
card. Resolutions of up to 1600x1200 have been achieved. This is an early
release of this driver, and not everything may work as expected. Please note
that Trio3D support is an initial release and not very well tested. Please
report any problems to <htmlurl name="XFree86@Xfree86.org" url="mailto:XFree86@Xfree86.org">
using the appropriate bug report sheet. 
-->
XF86_SVGA の ViRGE ドライバは、Trio3D と Savage 系を含めた現在の S3
ViRGE 系のチップセットを全てサポートしています。
このドライバは XAA アクセラレーションアーキテクチャを使ってアクセラレー
ションを行っており、色の深さは 8, 15, 16, 24, 32 bpp を利用できます。
このドライバのテストを行ったのは、2MB, 4MB の ViRGE カードのいくつか、
4MB の ViRGE/DX カード と ViRGE/VX カード、4MB の Trio3D カードです。
解像度は 1600x1200 まで使用できます。このドライバは初期リリースなので、
全て期待通りに動作するとは限りません。Trio3D のサポートは初めてのリリー
スであり、テストも十分でない点に注意してください。何か問題があれば、
<htmlurl name="XFree86@Xfree86.org" url="mailto:XFree86@Xfree86.org">
までお知らせください。連絡の際には適切なバグレポート用紙を使ってくださ
い。

<!-- <sect1>Features -->
<sect1>機能
<p>

<itemize>
<!--
<item>Supports PCI hardware, ViRGE, ViRGE/DX, ViRGE/GX, ViRGE/GX2, ViRGE/MX, 
ViRGE/VX, Trio3D and the Savage family.
-->
<item>PCI ハードウェア、ViRGE, ViRGE/DX, ViRGE/GX, ViRGE/GX2,
ViRGE/MX, ViRGE/VX, Trio3D, Savage 系をサポートしています。
<!--
<item>Supports 8bpp, 15/16bpp, 24bpp and 32bpp.
-->
<item>8bpp, 15/16bpp, 24bpp, 32bpp をサポートしています。
<!--
<item>VT switching seems to work well, no corruption reported 
at all color depths. 
-->
<item>仮想端末切替えはうまく動作しているようです。どの色の深さでも、表
示が乱れるという報告は受けていません。
<!--
<item>Acceleration is pretty complete: Screen-to-screen copy, solid rectangle 
fills, CPU-to-screen color expansion, 8x8 pattern mono and color fills. 
Currently, the color expansion appears to be substantially faster than 
the accel server due to the optimized XAA routines.
-->
<item>アクセラレーションはかなり良くできています(スクリーンからスクリー
ンへのコピー、長方形の塗りつぶし、CPUからスクリーンへの色展開、モノク
ロとカラーでの 8x8 パターンによる塗りつぶし)。XAA のルーチンが最適化さ
れているので、現在の色展開の速度はアクセラレーション付き  S3 ViRGE 専
用サーバよりもかなり高速です。
<!--
<item>Acceleration at 32bpp is limited: only ScreenToScreen bitblit and solid 
rectangles are supported. The ViRGE itself has no support for 32bpp 
acceleration, so the graphics engine is used in 16bpp mode. 
-->
<item>32bpp におけるアクセラレーションは限定されています。
ScreenToScreen bitblit と solid rectangle だけがサポートされています。
ViRGE 自体に 32bpp でのアクセラレーション機能がないため、グラフィック
スエンジンを 16bpp モードで使用しています。
<!--
<item>All modes include support for a hardware cursor.
-->
<item>全てのモードでハードウェアカーソルがサポートされています。
</itemize>

<!--
<sect1>Known limitations in the Savage family support (s3_savage driver)
-->
<sect1>Savage 系チップのサポートにおける既知の制限 (s3_savage ドライバ)
<p>
<!--
The Savage family driver for the Savage3D and the Savage4 was donated to XFree86
by S3 very closely before the release of XFree86-3.3.5. The driver violates a few
design principles and goals, but since there is massive demand for it, we decided
to include it in XFree86-3.3.5. For 3.3.6 some rewrites have been done,
there is fallback code for non-BIOS modes.
-->
Savage3D と Savage4 向けの Savage 系チップ用ドライバは、XFree86-3.3.5 
のリリースの直前に S3 が XFree86 に寄付しました。このドライバは 
XFree86 の設計の原則と目的に違反している部分がいくつかありますが、需要
が非常に大きいので、XFree86-3.3.5 に含めることに決めました。
3.3.6 ではいくらか書き直しが行われ、非 BIOS モードのために昔に戻したコー
ドが入っています。
<p>

<!--
<sect1>Known limitations of the s3_virge driver
-->
<sect1>s3_virge ドライバの既知の制限
<p>

<itemize>
<!--
<item>No support for external RAMDACs on the ViRGE/VX.
-->
<item>ViRGE/VX では外部 RAMDAC はサポートされていません。
<!--
<item>No support for VLB cards.
-->
<item>VL バスのカードはサポートされていません。
<!--
<item>No support for doublescan modes.
-->
<item>ダブルスキャンモードはサポートされていません。
<!--
<item>The driver only works with linear addressing.
-->
<item>このドライバはリニアアドレッシングでしか動作しません。
<!--
<item>Lines and polygons are not accelerated yet (but XAA still provides some
acceleration in this respect).
-->
<item>線や多角形ではまだアクセラレーションは使えません(ただし、XAA は
一部のアクセラレーションをサポートしています)。
<!--
<item>Burst Command Interface (BCI) support and 32bpp support not implemented
for the Trio3D.
-->
<item>バーストコマンドインタフェース(BCI, Burst Command Interface)のサ
ポートと 32bpp のサポートは、Trio3D 用には実装されていません。
<!--
<item>Trio3D support only works for some modelines. Many of the standard
modelines do not work (often slightly modifying the dot clock works, though).
The following two modelines seem to work reliably at 8bpp and 24bpp:
-->
<item>Trio3D サポートが動作するのは一部のモード行だけです。標準の
モード行の多くでは動作しません(ただし、少しドットクロックを変えれば動
くかもしれません)。以下の 2 つのモード行は 8bpp と 24bpp で安定して動
作するようです:
<verb>
Modeline "1024x768"  75  1024 1048 1184 1328  768  771  777  806 -hsync -vsync
Modeline "1280x1024" 135 1280 1312 1416 1664  1024 1027 1030 1064
</verb>
<!--
The following two modelines seem to work reliably at 16bpp:
-->
以下の 2 つのモード行は 16bpp で安定して動作するようです:
<verb>
Modeline "640x480"  45.80 640 672 768 864 480 488 494 530 -hsync -vsync 
Modeline "800x600"  36      800  824  896 1024    600  601  603  625
</verb>
</itemize>

<!-- <sect1>Configuration -->
<sect1>設定
<p>

<!--
The ViRGE SVGA driver supports a large number of XF86Config options, which can 
be used to tune PCI behavior and improve performance.
-->
ViRGE SVGA ドライバは XF86Config のオプションの多くをサポートしていま
す。このオプションを使って、PCI の動作をチューンしたり、性能を向上させ
ることができます。

<!--
Memory options:
-->
メモリ用のオプション:
<itemize>
<!--
<item>"slow_edodram" will switch the ViRGE to 2-cycle edo mode. Try this if
you encounter pixel corruption on the ViRGE. Using this option will
cause a large decrease in performance. 
-->
<item>"slow_edodram" を指定すると ViRGE は2サイクルの EDO モードに切り
替わります。ViRGE でピクセルが崩れる場合には、このオプションを試してく
ださい。このオプションを使用すると、性能は大幅に悪くなります。
<!--
<item>"early_ras_precharge" and "late_ras_precharge" will modify the memory 
timings, and may fix pixel corruption on some cards. The default behavior 
is set by the BIOS, and is normally "late_ras_precharge".
-->
<item>"early_ras_precharge" と "late_ras_precharge" はメモリのタイミン
グを変更するもので、一部のカードでのピクセルが崩れる問題を解決すること
ができます。デフォルトの動作は BIOS が決定しますが、普通は
"late_ras_precharge" です。
<!--
<item>"set_mclk value" sets the video memory clock rate to 'value' (in MHz).
The performance of the card is directly proportional to the memory
clocking, so this may provide a performance increase. The BIOS setting
for your card is printed at server start-up. Often, "low-cost" cards 
use the S3 default of 50MHz. This can often be exceeded with faster 
memory, some cards may function reliably at 60 or 65 MHz (even higher
on some recent /DX and /GX cards). Note
that S3 only officially supports an MCLK of 50MHz and XFree86 does not
encourage exceeding those specs.
*** Note: This option should not be preceded by the "Option" keyword!
-->
<item>"set_mclk value" は、ビデオメモリのクロックレートを 'value' に設
定します(単位は MHz)。カードの性能はメモリのクロック数に直接比例するの
で、このオプションで性能を向上させることができます。BIOS が行ったカー
ドの設定はサーバの起動時に表示されます。「安物」のカードでは S3 のデフォ
ルト値である 50MHz がよく使われます。メモリの方がこれより速いことも多
く、そのようなカードでは 60 MHz や 65MHz でもうまく動作します(最近の
/DX や /GX カードにはもっと速くてもよいものがあります)。S3 が公式にサ
ポートしているのは MCLK 値が 50MHz の場合だけなので、XFree86 はこの仕
様を越えるような使い方はお勧めしません。
***注意: このオプションは "Option" キーワードより後に置いてはいけませ
ん!
</itemize>

<!--
Acceleration and graphic engine:
-->
アクセラレーションとグラフィックエンジン用のオプション:

<itemize> 
<!--
<item>"noaccel" turns off all acceleration
-->
<item>"noaccel" はアクセラレーションを全て無効にします。
<!--
<item>"fifo_aggressive", "fifo_moderate" and "fifo_conservative" alter the 
settings for the threshold at which the pixel FIFO takes over the internal 
memory bus to refill itself. The smaller this threshold, the better
the acceleration performance of the card. You may try the fastest 
setting ("aggressive") and move down if you encounter pixel corruption.
The optimal setting will probably depend on dot-clock and on color 
depth. Note that specifying any of these options will also alter other
memory settings which should increase performance, so you should at
least use "fifo_conservative" (this uses the chip defaults).
-->
"fifo_aggressive", "fifo_moderate", "fifo_conservative" は、ピクセルの
FIFO が内部メモリバスを占有して、自身を塗りつぶし直すときの閾値の設定
を変更します。この閾値を小さく取るほど、カードのアクセラレーション性能
は向上します。まず最も速い設定("aggressive")を試し、ピクセルが崩れるよ
うならば遅い設定にするとよいでしょう。最適な設定を決めるのはたぶんドッ
トクロック値と色の深さです。これらのオプションのどれかを設定すると、性
能向上に繋がるような他のメモリ設定も変更されます。したがって、少なくと
も "fifo_conservative" (チップのデフォルト設定を使う)を使わなければな
りません。
</itemize>

<!--
PCI options:
-->
PCI 用オプション:

<itemize>
<!--
<item>"pci_burst_on" will enable PCI burst mode. This should work on all but a
few "broken" PCI chipsets, and will increase performance.
-->
<item>"pci_burst_on" を指定すると、PCI のバーストモードが有効になりま
す。このオプションは「欠陥のある」一部の PCI チップセット以外では動作
するはずで、性能を向上させます。
<!--
<item>"pci_retry" will allow the driver to rely on PCI Retry to program the 
ViRGE registers. "pci_burst_on" must be enabled for this to work. 
This will increase performance, especially for small fills/blits, 
because the driver does not have to poll the ViRGE before sending it 
commands to make sure it is ready. It should work on most 
recent PCI chipsets. A possible side-effect is that it may interfere with
DMA operations on the PCI bus (e.g. sound cards, floppy drive).
-->
<item>"pci_retry" を指定すると、ドライバは PCI の Retry を信用して
ViRGE のレジスタのプログラムを行うことができるようになります。このオプ
ションを動作させるには、"pci_burst_on" は有効になっていなければなりま
せん。このオプションを使うと性能が向上します(特に小さい fill/blit の場
合)。その理由は、ドライバがコマンドを送る前に ViRGE に問い合わせを行っ
て、コマンド実行が可能なことを確かめる必要がなくなるからです。このオプ
ションは最近のほとんどの PCI チップセットで動作するはずです。起こり得る
副作用としては、PCI バス上での DMA 操作(例: サウンドカードやフロッピー
ドライブ)との干渉が考えられます。
</itemize>

<!--
Cursor:
-->
カーソル用のオプション:

<itemize>
<!--
<item>"hw_cursor" turns on the hardware cursor.
-->
<item>"hw_cursor" ハードウェアカーソルを有効にします。
</itemize>

<!--
Color depth options and limitations:
-->
色の深さに関するオプションと制限事項:

<itemize>
<!--
<item>Pixel multiplexing is used above 80MHz for 8bpp on the ViRGE. 
-->
<item>ViRGE の場合、8bpp で 80MHz 以上のクロックであるとピクセルの多重化が行
われます。
<!--
<item>15bpp is supported, use "-bpp 15" as an option to the server.
-->
<item>15bpp はサポートされています。サーバのオプションに "-bpp 15" を
指定してください。
<!--
<item>24bpp is supported using the STREAMS engine.
-->
<item>24bpp は STREAMS エンジンを利用してサポートされています。
<!--
<item>32bpp uses STREAMS as well; however, because the ViRGE does not really 
support 32 bpp "natively", acceleration is quite limited.
-->
<item>32bpp でも STREAMS エンジンが使われます。しかし、ViRGE は 32bpp
を「ネイティブ」にはサポートしていないので、アクセラレーションはかなり
制限されています。
<!--
<item>Both 24bpp and 32bpp do not support interlace modes.  
-->
<item>24bpp でも 32bpp でもインタレースモードはサポートされていません。
<!--
<item>32bpp is limited to a width of < 1024 pixels.  (1024x768 is not possible,
even if you have the memory.)  This is a hardware limit of ViRGE chips.
-->
<item>32bpp 時の画面幅は 1024 ピクセル未満に制限されています。
(十分なメモリがあっても 1024x768 は使用できません。) これは ViRGE チッ
プのハードウェア的な制限です。
</itemize>

<!-- <sect1>Hints for LCD configuration (S3 ViRGE/MX) -->
<sect1>LCD 用設定のヒント (S3 ViRGE/MX)
<p>
<!--
If LCD is active the CRT will always output 1024x768 (or whatever is 
the _physical_ LCD size) and smaller modes are zoomed to fit on the LCD
unless you specify Option "lcd_center" in the device section.
-->
LCD がアクティブならば、CRT 出力は常に 1024x768 (または、LCD の「物理
的」サイズ)で行われます。画面の小さいモードの場合は、デバイスのセクショ
ンでオプション "lcd_center" を指定しない限り、LCD に収まるようにズーム
表示が行われます。

<!--
The pixel clock for this physical size (e.g. 1024x768) mode...
-->
この物理サイズ(例: 1024x768)のモードに対応するピクセルクロック値につい
ては、以下のことが成り立ちます。
<itemize>
<!--
<item>...can explicitly set in the config file (device section) with  e.g. `Set_LCDClk 70'
(resulting 70 MHz pixel clock being used for all modes when LCD is on)
-->
<item>ピクセルクロック値は、設定ファイル(のデバイスのセクション)で、例
えば `Set_LCDClk 70' のように明示的に指定できます。(この結果、LCD が有
効の時には全てのモードにおいてピクセルクロック値が 70 MHz になります。)
<!--
<item>...is taken from the _first_ mode in the modes line iff this mode's display size
is the same as the physical LCD size
-->
<item>このモードにおけるディスプレイのサイズが物理的な LCD のサイズと
同じならば、ピクセルクロック値はモード行の「最初の」モードから取得され
ます。
<!--
<item>...the default LCD pixel clock of BIOS initialisation setup is used.  
This value is output at server startup in the line `LCD size ...' 
unless you're specifying a value using `Set_LCDClk ...'
-->
<item>BIOS の初期化によるデフォルトの LCD ピクセルクロック値が使われま
す。`Set_LCDClk ...' を用いて値を指定しなければ、この値はサーバの起動
時に `LCD size ...' という行に出力されます。
</itemize>

<!--
If LCD is _not_ active, the normal mode lines and pixel clocks 
are used for the VGA output.
-->
LCD がアクティブで「ない」場合には、通常のモード行とピクセルクロック値
が VGA 出力に使われます。

<!--
Whenever you switch output sources with Fn-F5 or similar,
the Xserver won't get informed and pixel clock and other settings are wrong.
Because of this you have to switch modes _after_ switch output sources!
Then the server will check which outputs are active and select the correct
clocks etc.  
So the recommended key sequence to switch output is
-->
Fn-F5 等を使って出力ソースを切替えると、X サーバはピクセルクロックを知
らされず、ピクセルクロックや他の設定はおかしくなります。したがって、出
力ソースを切替えた「後」にモードを切替えなければなりません。そうすれば、
X サーバはどの出力がアクティブかをチェックし、適切なクロック値等を選択
します。よって、出力を切替えるためのお勧めのキーシーケンスは次のように
なります:

	Fn-F5  Ctrl-Alt-Plus  Ctrl-Alt-Minus

<!--
and everything should be ok..  
-->
これで全てうまくいくはずです。

<!--
on the Toshiba keypad you can first hold down Ctrl-Alt, then press `Fn' additionally 
before pressing Plus/Minus too to avoid to explicitly enable/disable 
the numeric keypad for mode switching.
-->
東芝のノートPC のキーボードでは、まず Ctrl-Alt を押した状態にしておき、
Plus/Minus を押す前にさらに `Fn' を押します。これにより、モード切替え
のたびにいちいちキーボードの数値部分を有効または無効にすることが避けら
れます。

<!-- <sect>Authors -->
<sect>作者
<p>

<!-- <sect1> XF86_S3V server -->
<sect1> XF86_S3V サーバ
<p>
Harald Koenig <it>&lt;koenig@tat.physik.uni-tuebingen.de&gt;</it>
<p>

<!-- and: -->
および

<itemize>
<item>Kevin Brosius <it>Cobra@compuserve.com</it>
<item>Berry Dijk <it>berry_dijk@tasking.nl</it>
<item>Dirk Hohndel <it>hohndel@XFree86.Org</it>
<item>Huver Hu <it>huver@amgraf.com</it>
<item>Dirk Vangestel <it>gesteld@sh.bel.alcatel.be</it>
</itemize>

<!-- <sect1> XF86_SVGA ViRGE driver -->
<sect1> XF86_SVGA ViRGE ドライバ
<p>

Sebastien Marineau <it>&lt;marineau@genie.uottawa.ca&gt;</it>

<!-- and:  -->
および

<itemize>
<item>Harald Koenig <it>&lt;koenig@tat.physik.uni-tuebingen.de&gt;</it>
<item>Kevin Brosius <it>Cobra@compuserve.com</it>
<item>Sebastian Kloska <it>kloska@mpimp-golm.mpg.de</it>
<item>Alok Ladsariya <it>alok@XFree86.Org</it>
<item>Dirk Hohndel <it>hohndel@XFree86.Org</it>
</itemize>

<verb>
$XFree86: xc/programs/Xserver/hw/xfree86/doc/Japanese/sgml/S3V.sgml,v 1.1.2.3 1999/12/28 12:13:57 hohndel Exp $
</verb>

<sect>日本語訳について<p>
日本語訳は X Japanese Documentation Project が行いました
(翻訳: 藤原輝嘉 <url url="mailto:fujiwara@linux.or.jp"
name="&lt;fujiwara@linux.or.jp&gt;">,
校正: 金田浩司  <url url="mailto:vanitas@ma3.seikyou.ne.jp"
name="&lt;vanitas@ma3.seikyou.ne.jp&gt;">)。問題点の指摘やご意見は藤原
まで御連絡ください。原文の著作権は XFree86 プロジェクト社にあり、日本
語訳の著作権は X Japanese Documentation Project にあります。
</article>
