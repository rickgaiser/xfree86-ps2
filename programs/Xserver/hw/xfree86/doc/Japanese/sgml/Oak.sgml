<!DOCTYPE linuxdoc PUBLIC "-//XFree86//DTD linuxdoc//EN">
 
<article>

<!-- Title information -->
<!--
<title>Information for Oak Technologies Inc. Chipset Users
-->
<title>Oak Technologies Inc. 製チップセットユーザ向けの情報
<author>Jorge F. Delgado Mendoza (<it>delgadomendoza.j@pg.com</it>)
<date>17 August 1999
<trans>The X Japanese Documentation Project
<tdate>12 September 1999

<!-- Table of contents -->
<toc>

<!--
<sect>Supported chipsets <p>
-->
<sect>サポートしているチップセット <p>

<!--
The driver is used in the 8-bit / 256-color SVGA server and the mono
server. The following chipsets for Oak Tech. Inc. are supported:
-->
このドライバはモノクロサーバと 8 ビット、256色の SVGA サーバで使われて
います。以下に挙げる Oak Tech. Inc. 製のチップセットがサポートされてい
ます:
<descrip>
<tag>OTI037C</tag>
<!--
        8-bit VGA chipset, with up to 256Kbytes of DRAM. All the 
        boards I have seen are only able to do standard VGA modes.
        (ie. up to 320x200x256 and up to 640x480x16). Currently the
        probe for this chip is disabled, so use the generic VGA
        driver instead.
-->
8ビットの VGA チップセットで、256K バイトまでの DRAM を積むことができ
ます。筆者が見たことがあるものは全て標準 VGA モード(つまり、
320x200x256 以下と 640x480x16 以下)でしか動作しませんでした。このチッ
プの自動検出は現在は無効になっているので、代わりに汎用 VGA ドライバを
使ってください。
<tag>OTI067</tag>
<!--
        ISA SVGA chipset, up to 512Kbytes of DRAM (usually 70/80 ns).
-->
ISA の SVGA 対応チップセットです。512K バイトまでの DRAM(普通は 70/80
ns)を積むことができます。
<tag>OTI077</tag>
<!--
        Enhanced version of the 067, with support for 1Mbyte and
        up to 65 Mhz dot-clock. This chipset is capable of resolutions
up to
        1024x768x256 colors in Non-Interlaced mode, and up to
        1280x1024x16 colors Interlaced.
-->
067 の改良版で、1M バイトのメモリと 65MHz までのドットクロックに対応し
ています。このチップセットはノンインタレースモードでは解像度 1024x768,
256 色以下の表示が可能で、インタレースモードでは解像度 1280x1024, 16
色までの表示が可能です。
<tag>OTI087</tag>
<!--
        One of the first VLB chipsets available, it has a 16-bit
        external data path, and a 32-bit internal memory-controller 
        data path. It features some acceleration hardware: 
        register-based color expansion, hardware cursor, 
        a primitive BitBlt engine, a 64 bit graphic latch and some 
        other new (on its time) features. 
        Maximum BIOS resolutions are 1024x768x256
        Non-Interlaced and 1280x1024x256 interlaced. Maximum
        Dot-Clock is 80Mhz, but is usually coupled with the OTI068
        clock generator capable of frequencies up to 78Mhz.
        This chipset supports up to 2MBytes of 70/70R ns DRAM.
-->
初期の VLB チップセットの1つであり、16ビット幅の外部データパスがあり、
32ビット幅の内部メモリコントローラデータパスがあります。一部の機能に対
応するアクセラレーション用ハードウェアを装備しています。この機能はレジ
スタベースの色展開、ハードウェアカーソル、プリミティブな BitBlt エンジ
ン、64ビットグラフィックラッチや、その他の新しい(当時)機能です。
BIOS の最大解像度は 1024x768x256(ノンインタレース)と 1280x1024x256(イ
ンタレース)です。最大ドットクロック値は 80MHz ですが、普通は 78MHz ま
での周波数にしか対応していない OTI068 クロックジェネレータと組み合わせ
て使われます。このチップセットは 70/70R ns の DRAM を 2MB まで積むこと
ができます。
<!-- <tag>OTI107 and OTI111</tag> -->
<tag>OTI107, OTI111</tag>
<!--
        These are new, PCI chipsets by Oak Tech. Inc. Support is not
        included for them, as they are very rare and I haven't had
        the chance to look at one of these boards. 
        We have been unable to locate 107's. If anybody has such a board and
        can donate it to XFree86, we would be more than glad to add
        support for them. 
-->
Oak Tech. の新しい PCI チップセットです。このチップセットへの対応は行
われていません。というのも、このチップセットは非常に珍しく、筆者も実物
を見たことがないからです。現在のところ、107 搭載ボードを見つけることは
できていません。このようなボードを持っている方がいらっしゃれば、ぜひ 
XFree86 に寄付してください。喜んでこのチップセットのサポートを追加しま
す。
	<p>
<!--
	An OTI111 is now available and we are working on support for it.
-->
現在は OTI111 が入手できるようになっており、我々もこれをサポートするた
めの作業を行っています。
</descrip>

<!--
All the chipsets up to the OTI087 are "Backwards compatible", 
in fact some early drivers for the OTI087 based chipsets were 
those made for the 077.
-->
OTI087 までの全てのチップセットは「後方互換性」があります。実際、
OTI087 ベースのチップセット用ドライバの初期のものには、077 用に作られ
たものもありました。

<!--
Accelerated support is included only for OTI087 chipsets, also Mono
server is only included for 067/077 chipsets.
-->
アクセラレーション機能をサポートしているのは OTI087 チップセット用ドラ
イバだけです。また、モノクロサーバは 067/077 チップセット用のものしか
ありません。

<!--
<sect>XF86Config options <p>
-->
<sect>XF86Config のオプション <p>

<!--
The following options are of particular interest to the Oak driver. Each
of them must be specified in the 'svga' driver section of the
<tt>XF86Config</tt> file, within the Screen subsections to which they
are
applicable (you can enable options for all depths by specifying them in
the
Device section).
-->
以下に挙げるオプションは Oak ドライバ専用です。それぞれのオプションは、
<tt>XF86Config</tt> ファイルの 'svga' ドライバセクションの、適用したい
Screen 向けのサブセクション内で指定しなければなりません(Device セクショ
ンで指定すれば、全ての色の深さにおいてオプションを有効にすることができ
ます)。
<descrip>
<tag>
Option &dquot;linear&dquot; (OTI087)
</tag>
<!--
        This option enables a linear framebuffer at 0xE00000 (14Mb) for
        cards recognized as ISA by the probe.  Cards that are VLB will
        map the framebuffer at 0x4E00000.  The aperture depends
        on the VideoRam parameter in the <tt>XF86Config</tt> file or on
        the probed value for the board. It will speed up performance by
        about 15&percnt; on a VLB-based boards for a DX2-66 486.
-->
自動検出により ISA カードとして認識されるカードでは、このオプションを
使用すると 0xE00000(14MB)においてリニアフレームバッファが有効になります。
VLB カードでは、フレームバッファは 0x4E00000 にマップされます。アパー
チャは<tt>XF86Config</tt> ファイルのパラメータ VideoRam またはボードに
対して検出を行った結果値に依存します。DX2-66 486 マシンに VLB ベースの
ボードを積んでいる場合は、このオプションで 15&percnt; 程度性能が向上し
ます。
<!--
        Sometimes a motherboard will not be able to map at 0x4E00000,
        and then linear mode will not work with more than 14 Mbytes of
        main RAM. I know this because mine doesn't.
-->
マザーボードが 0x4E00000 へのマップを行えないことがあり、その時にはメ
インメモリが 14MB 以上あるとリニアモードは動作しないでしょう。これは筆
者の環境で確認しました。
<tag>
Option &dquot;fifo_aggressive&dquot; (OTI087)
</tag>
<!--
        This option will cause the command FIFO threshold of the
        chipset to be set at 0 instructions, which should be optimal
        for 16-bit data transfers, as empirical use of different
        thresholds, with xbench, show. Expect a 5-10&percnt; of
performance
        boost on a DX2-66 486.
-->
このオプションを指定すると、チップセットのコマンド FIFO の閾値が0イン
ストラクションにセットされます。この値は16ビットデータ転送においてはきっ
と最適値でしょう(これは異なる値を使って xbench で実験した結果です)。
DX2-66 の 486 マシンでは 5-10&percnt; の性能向上が期待できます。
<tag>
Option &dquot;fifo_conservative&dquot; (OTI087)
</tag>
<!--
        This option will set the FIFO to a safe value of 14, slowing
        the board by a 50&percnt;, use this only if you experience
streaks or
        anomalies on the screen.
-->
このオプションは FIFO を安全な値である14にセットしますが、ボードの性能
は 50&percnt; 低下します。このオプションを使うのは、画面に縞が入るとき
や画面がおかしくなる時だけにしましょう。
<tag>
Option &dquot;enable_bitblt&dquot; (OTI087)
</tag>
<!--
        This option will enable an internal cache on the board that
        will be used as a rudimentary bitblt engine. Performance boost
        is more or less 100&percnt;, (double BlitStones on xbench). Most
        OTI087 boards seem to have this feature broken, corrupting text
        from xterms and leaving mouse droppings throughout the
        screen. As a rule of thumb, enable it, if it works badly,
        disable it.
-->
このオプションはボードの内部キャッシュを有効にします。このキャッシュは
基本的な bitblt エンジンとして使われます。性能はだいたい100&percnt;向
上します(xbench の BlitStones 値が倍になります)。ほとんどの OTI087 ボー
ドは、この機能に不具合があるようで、xterm が出力するテキストが壊れたり、
画面全体にマウスの移動した後のゴミが残ったりします。経験則としては、ま
ずはこのオプションを有効にしておき、不具合があるようならば無効にすると
よいでしょう。
<tag>
Option &dquot;clock_50&dquot; (OTI087)
</tag>
<!--
        This one will force the internal speed to 50 Mhz.
-->
このオプションは内部スピードを 50MHz にします。
<tag>
Option &dquot;clock_66&dquot; (OTI087)
</tag>
<!--
        This one will force the internal speed to 66 Mhz, speeding up
        performance of the chipset.
-->
このオプションは内部スピードを 66MHz にします。これにより、チップセッ
トは高速に動作するようになります。
<tag>
Option &dquot;no_wait&dquot; (OTI087)
</tag>
<!--
        Sets the VLB interface to no wait states. On a medium VLB
        board (mine is VLB/PCI, so its not a very fast one) in VLB
        transparent mode, it manages up to 16 Mbytes/second transfer
        rate through the bus.
-->
VLB インタフェースが待ち状態にならないように設定します。中程度の VLB
ボード(筆者のボードは VLB/PCI で、あまり高速ではありません)では、VLB
透過モードのとき、バス経由の転送レートは 16MB/秒 まで上がります。
<tag>
Option &dquot;first_wait&dquot; (OTI087)
</tag>
<!--
        Makes the VLB interface to add one wait state to the first
        read or write of a given burst.
-->
VLB インタフェースがバースト転送で読み書きを行うときに、最初に1度待ち
状態になるようにします。
<tag>
Option &dquot;first_wwait&dquot; (OTI087)
</tag>
<!--
        Similar to the previous one, this only inserts a wait state in
        the first 'write' of a given burst. reads are not
        affected. This is the default behaviour of the server.
-->
前のオプションと似ていますが、これはバースト転送の最初の「書き込み」の
時だけ待ち状態になるようにします。読み込みには影響を与えません。これは
サーバのデフォルトの動作です。
<tag>
Option &dquot;write_wait&dquot; (OTI087)
</tag>
<!--
        This configures the VLB interface to add one wait state to
        each write cycle.
-->
このオプションは、各書き込みサイクルごとに1度待ち状態になるように VLB
インタフェースを設定します。
<tag>
Option &dquot;read_wait&dquot; (OTI087)
</tag>
<!--
        This configures the VLB interface to add one wait state to
        each read cycle.
-->
このオプションは、各読み込みサイクルごとに1度待ち状態となるように VLB
インタフェースを設定します。
<tag>
Option &dquot;all_wait&dquot; (OTI087)
</tag>
<!--
        Enables the slowest VLB transfer adding wait states in all
        cases. Hopefully, no board will need this enabled.
-->
全ての場合において待ち状態になるようにし、VLB 転送を最も遅くします。た
ぶん、このオプションを必要とするボードはないでしょう。
<tag>
Option &dquot;one_wait&dquot; (OTI087)
</tag>
<!--
        Sets the VLB interface to at least one wait state.
-->
少なくとも1度待ち状態になるように VLB インタフェースを設定します。
<tag>
Option &dquot;noaccel&dquot; (OTI087)
</tag>
<!--
        One accelerated routine has been lately added to the driver,
        allowing it to draw solid fills quite faster. This routine
        only works (up to date) on segmented addressing, and only if
        the virtual width is 1024. This option is automatically enabled
        by the driver. Use this option if you want to disable it.
-->
最近、1つのアクセラレーションルーチンがドライバに追加されました。これ
により、塗りつぶしの速度がずっと速くなりました。このルーチンは(最新の
状態でも)分割アドレッシング使用時、かつ仮想スクリーンの幅が 1024 の時
しか動作しません。この機能はドライバが自動的に有効にします。無効にした
い場合には、このオプションを指定します。
</descrip>

<!--
As a rule of thumb, use the option "no_wait", and if it doesn't
result in corrupting text, lucky you. If not, try "first_wwait", and
downwards. ISA card owners should not use these options.
-->
経験的には、最初に "no_wait" を試し、これでテキスト表示が乱れなければ
そのままで大丈夫です。表示が乱れる場合には、"first_wwait" を試し、それ
でも駄目なら性能を順次落としていきます。ISA カードを使っている場合には、
このオプションを指定してはいけません。

<!-- <sect>Mode issues <p> -->
<sect>モードについて <p>

<!--
    The use of very high dot-clocks has a REAL negative effect on the
    performance of the boards, due to its limited 80Mbit/sec, higher
    dot clocks limit its ability to draw data into the
    framebuffer. Thus expect better performance of a 72Mhz based mode
    than on a 78Mhz based one (for example) where more bandwidth is
    required for screen refresh.
-->
非常に高いドットクロックを使用すると、ボードの性能に「非常に」悪い影響
を与えます。その理由は、ドットクロックは 80Mビット/秒に制限されている
ため、高いドットクロックではフレームバッファへのデータ描画の能力が制限
されるからです。したがって、(例えば)72MHz ベースのモードの性能の方が
78MHz ベースのモードよりも性能が高くなると考えられます。スクリーンの書
き換えに必要とするバンド幅は後者の方が高いからです。

<!--  
    It does not make much sense to use the highest clock (78 MHz) for
    1024x768 at 76 Hz on a OTI087; the card will almost come to a
    standstill. A 72 MHz dot clock results in 70 Hz which should be
    acceptable. If you have a monitor that supports 1024x768 at 76 Hz
    with a 78 MHz dot clock, a standard OTI087 based card is a poor
    match anyway.
-->
OTI087 では 76Hz, 1024x768 モード時に最高のクロック(78MHz)を使っても
あまり意味がありません。カードがほとんど限界に達するからです。72MHz の
ドットクロックでちょうど良い値は 70Hz です。ドットクロック 78MHz で
1024x768, 76Hz をサポートしているモニタを使う場合には、いずれにせよ普
通の OTI087 ベースのカードでは力不足です。

<!-- <sect>Linear addressing<p> -->
<sect>リニアアドレッシング<p>

<!--
    Linear addressing is hardwired to 14 Mbytes for ISA boards 
    and 78 Mbytes for VLB boards, thus if you have more
    than that on your board you shouldn't enable it.
    The aperture is selected from the VideoRam
    parameter of the XF86Config or from the amount of memory that is
    detected if VideoRam is not found.
-->
リニアアドレッシングは ISA ボードの場合は 14M バイト、VLB ボードの場合
には 78M バイトとハードウェア的に決まっています。したがって、それ以上
の領域がある場合には、リニアアドレッシングを有効にしてはいけません。ア
パーチャは XF86Config ファイルの VideoRam パラメータか、(VideoRam が設
定されていなければ)検出したメモリの量を使って決められます。

<!--
    I hope (because I have not tested it very thoroughly) that linear
    addressing will work on all ISA boards, VLB ones work flawlessly.
-->
リニアアドレッシングは全ての ISA で動き、VLB ボードも問題無く動くと思
います(完全にはテストしていません)。

<verb>
$XFree86: xc/programs/Xserver/hw/xfree86/doc/Japanese/sgml/Oak.sgml,v 1.1.2.2 1999/11/26 15:23:46 hohndel Exp $





$XConsortium: Oak.sgml /main/8 1996/05/12 20:58:00 kaleb $
</verb>

<sect>日本語訳について<p>
日本語訳は X Japanese Documentation Project が行いました
(翻訳: 藤原輝嘉 <url url="mailto:fujiwara@linux.or.jp"
name="&lt;fujiwara@linux.or.jp&gt;">,
校正: 金田浩司  <url url="mailto:vanitas@ma3.seikyou.ne.jp"
name="&lt;vanitas@ma3.seikyou.ne.jp&gt;">)。
問題点の指摘やご意見は藤原まで御連絡ください。原文の著作権は XFree86 
プロジェクト社にあり、日本語訳に伴う権利は X Japanese Documentation
Project にあります。
</article>
