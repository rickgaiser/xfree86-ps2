<!DOCTYPE linuxdoc PUBLIC "-//XFree86//DTD linuxdoc//EN">

<article>
<!--
<title>README for XFree86 on NetBSD
-->
<title> NetBSD で XFree86 を使用する人は読んでください
<author>Rich  Murphey,
David Dawes,
Marc  Wandschneider,
Mark  Weaver,
Matthieu Herrb
<Date>Last modified on: 20 August 1999
<trans> 大石  勲 Isao Ohishi &lt;ohishi@hf.rim.or.jp&gt; &amp;
The X Documentation Project
<tdate>Last modified on: 12 September 1999

<toc>


<!--
<sect>What and Where is XFree86?
-->
<sect> XFree86 って何？どこにあるの？

<p>
<!--
XFree86 is a port of X11R6.3 that supports several versions of
Intel-based Unix.  It is derived from X386 1.2, which was the X server
distributed with X11R5.  This release consists of many new features
and performance improvements as well as many bug fixes.  The release
is available as source patches against the X Consortium X11R6.3 code, as
well as binary distributions for many architectures.
-->
XFree86 は Intel ベースの様々な種類の UNIX の幾つかをサポートしている
X11R6.3 の移植版です。X11R5 と一緒に配布された X386 1.2 という X サーバに
由来しています。今回のリリースには沢山のバグ修正とともに多くの特徴と性能の
改善が含まれています。本リリースは the X Consortium の X11R6.3 のソースコード
へのパッチとして入手できますし、また多くのアーキテクチャ用のバイナリ配
布としても入手できます。

<!--
See the <htmlurl url="COPYRIGHT.html" name="Copyright Notice">.
-->
<htmlurl url="COPYRIGHT.html" name="Copyright Notice"> を見てください。

<!--
The sources for XFree86 are available by anonymous ftp from:
-->
XFree86 のソースは次の anonymous ftp から入手できます:

<htmlurl name="ftp://ftp.XFree86.org/pub/XFree86/current"
url="ftp://ftp.XFree86.org/pub/XFree86/current">

<!--
Binaries for NetBSD 1.4 and later are available from:
<htmlurl name="ftp://ftp.XFree86.org/pub/XFree86/current/binaries/NetBSD-1.4"
url="ftp://ftp.XFree86.org/pub/XFree86/current/binaries/NetBSD-1.4">
-->
NetBSD 1.4 以降用のバイナリは以下の場所から入手できます:
<htmlurl name="ftp://ftp.XFree86.org/pub/XFree86/current/binaries/NetBSD-1.4"
url="ftp://ftp.XFree86.org/pub/XFree86/current/binaries/NetBSD-1.4">

<!--
A list of mirror sites is provided by
-->
ミラーサイトのリストは以下の場所にあります:
<htmlurl name="ftp://ftp.XFree86.org/pub/XFree86/MIRRORS"
url="ftp://ftp.XFree86.org/pub/XFree86/MIRRORS">

<p>
<!--
Other NetBSD versions:
-->
その他のバージョンの NetBSD :

<!--
These binaries are not compatible with earlier NetBSD versions. If
you're still running NetBSD earlier than 1.4, you should think about
upgrading to a newer version of NetBSD first.
-->
これらのバイナリは初期のバージョンの NetBSD とは互換性がありません。
もしバージョン 1.4 より前の NetBSD を使用しているのであれば、まず最初に新しい
バージョンの NetBSD を使用する事を検討してください。

<!--
If you don't upgrade, you'll have to build XFree86 from the sources.
XFree86 should compile cleanly under earlier versions of
NetBSD, although this has not been tested.
-->
アップグレードを行わないなら、XFree86 をソースから構築する必要があり
ます。XFree86 は初期のバージョンの NetBSD でもきちんとコンパイル
できるはずですが、テストは行われていません。

<!--
XFree86 also builds on NetBSD/sparc. See section
<ref id="sparc" name="Building on other architectures"> for details.
-->
NetBSD/sparc に関しても XFree86 は作られています。詳細は
<ref id="sparc" name="他のアーキテクチャでの構築"> セクション見てください。

<!--
The client side of XFree86 also builds on NetBSD/alpha and many other 
architecture supported by NetBSD. 
-->
XFree86 のクライアントに関しても、NetBSD/alpha や NetBSD がサポートする
他の多くのアーキテクチャで作られています。

<!--
XFree86 also supports NetBSD on PC98 machines. 
-->
XFree86 は PC98 の NetBSD もサポートしています。

<!--
<sect>Bug Reports for This Document
-->
<sect>このドキュメントのバグの報告について

<p>
<!--
Send email to <em/matthieu@laas.fr/ (Matthieu Herrb) or
<em/XFree86@XFree86.org/ if you have comments or suggestions about
this file and we'll revise it.
-->
このファイルに関してコメントや提案があるならば、 電子メールを 
<em/matthieu@laas.fr/ (Matthieu Herrb) か <em/XFree86@XFree86.org/ 
宛に送っていただければ、修正します。

<!--
<sect>New OS-dependant features in XFree86 3.3.4
-->
<sect>XFree86 3.3.4 における、OS 依存の新機能
<p>
<itemize>
<!--
<item>The maximum number of open connections in the server has been
raised to 128,
-->
<item>サーバの最大接続数が 128 に増えました。
<!--
<item>support for the <bf/wsmouse/ mouse protocol included in  NetBSD 1.4 has
been added. 
-->
<item>NetBSD 1.4 に含まれている <bf/wsmouse/ マウスプロトコルに対応しました。
</itemize>


<!--
<sect>Installing the Binaries
-->
<sect>バイナリのインストール

<p>
<!--
Refer to section 5 of the <htmlurl url="RELNOTES.html" name="Release
Notes">  for detailed installation instructions.
-->
インストール作業の詳細な手順に関しては、<htmlurl url="RELNOTES.html" 
name="リリースノート"> のセクション 5 を参照してください。

<!--
<sect>Configuring X for Your Hardware
-->
<sect> ハードウェアに応じた X の設定

<p>
<!--
The <tt>/etc/XF86Config</tt> file tells the X server what kind of
monitor, 
video card and mouse you have.  You <em/must/ create it to tell the
server what specific hardware you have.
-->
<tt/XF86Config/ ファイルには、使っているモニタやビデオカードやマウスを
X サーバに伝えます。使用している特定のハードウェアを
サーバに伝えるためにそのファイルを作る<em/必要があります/。
<p>
<!--
The easiest way to create this file is to run the <bf/XF86Setup/
utility as root. Refer to <htmlurl url="QuickStart.html"
name="QuickStart.doc"> for details about its use.
-->
このファイルを作成するための最も簡単な方法は、root ユーザとして
<bf/XF86Setup/ ユーティリティを実行することです。使用に際しての詳細な
部分に関しては、<htmlurl url="QuickStart.html"
name="QuickStart.doc"> を参照してください。
<p>
<!--
You'll need info on your hardware:
-->
ハードウェアに関する情報が必要です:
<itemize>
<!--
<item>Your mouse type, baud rate and its /dev entry.
-->
<item>マウスの種類、転送速度、/devでのデバイスファイル名。
<!--
<item>The video card's chipset (e.g. ET4000, S3, etc).
-->
<item>ビデオカードのチップセット(例えば ET4000, S3, 等)。
<!--
<item>Your monitor's sync frequencies.
-->
<item>モニタの同期周波数。
</itemize>

<!--
The recommended way to generate an <tt/XF86Config/ file is to use the
<tt/XF86Setup/ utility.  The xf86config text utility is still there
for the (few) cases where XF86Setup can't be used. Also, there is a
sample file installed as <tt>/usr/X11R6/lib/X11/XF86Config.eg</tt>,
which can be used as a starting point.
-->
<tt/XF86Config/ ファイルを作る方法としては <tt/XF86Setup/ の使用をお勧
めします。xf86config というテキストベースのツールも XF86Setup が使
えないような(数少ない)場合に備えてまだ用意されています。また、サンプルの
ファイル例も <tt>/usr/X11R6/lib/X11/XF86Config.eg</tt> にインストール
されていますので、それをベースに修正して使用することもできます。

<!--
For details about the <tt/XF86Config/ file format, refer to the
<em>XF86Config(5)</em> manual page.
-->
<tt/XF86Config/ ファイルの記述形式の詳細に関しては、<em>XF86Config(5)</em>
のマニュアルを参照してください。

<!--
Once you've set up a XF86Config file, you can fine tune the video
modes with the <tt>xvidtune</tt> utility. 
-->
XF86Config ファイルの設定が一旦終ったら、<tt>xvidtune</tt> ユーティリ
ティを使用してビデオモードのチューニングを行う事ができます。

<!--
<sect1>About mouse configuration
-->
<sect1>マウスの設定について

<p>
<!--
If your serial mouse does not work try using <tt>kermit</tt> or
<tt>tip</tt> to connect to the mouse serial port and verify that it
does indeed generate characters.
-->
シリアルマウスが動作しない場合は、<tt>kermit</tt> とか <tt>tip</tt> 等
を使用してマウスの繋がっているシリアルポートに接続して、マウスを動かす
とちゃんと文字が発生するかどうかを確認してください。
<p>
<!--
The NetBSD pms mouse driver handles PS/2 style mice as
Busmouse. Specify the protocol as ``<bf/busmouse/'' in the mouse
section of your 
<tt/XF86Config/ file if you're using a PS/2 mouse.
-->
NetBSD では pms マウスドライバが PS/2 タイプのマウスをバスマウスとして
扱っています。PS/2 マウスを使用している場合には、<tt/XF86Config/ ファイル
中の Mouse セクションで、<bf/busmouse/ をプロトコルとして指定してくだ
さい。
<p>
<!--
Only standard PS/2 mice are supported by this driver. Newest PS/2
mice that send more than three bytes at a time (especially
Intellimouse, or MouseMan+ with a ``3D'' roller) are not supported yet. 
-->
このドライバは普通の PS/2 マウスしかサポートしていません。最新のPS/2
マウス(特に"3D"ローラー付の IntelliMouse や MouseMan+ 等)は一度に3バイト
以上の通信が可能ですが、これらはまだサポートされていません。
<p>
<!--
XFree86 3.3.4 and later also have support for the mouse driver included in
the new <bf/wscons/ console driver introduced by NetBSD 1.4. Specify
``<tt/wsmouse/'' as the protocol and ``<tt>/dev/wsmouse0</tt>'' as the 
device in <tt>/etc/XF86Config</tt> if you're using NetBSD 1.4 with
wscons. 
-->
XFree86 3.3.4 以降は NetBSD 1.4 で導入された新しい <bf/wscons/ コンソール
ドライバに含まれているマウスドライバもサポートしています。NetBSD 1.4 
で wscons を使っているならば、<tt>/etc/XF86Config</tt> ではマウスの
プロトコルとして ``<tt/wsmouse/'' を指定し、デバイスとして
``<tt>/dev/wsmouse0</tt>'' を指定してください。
<p>
<!--
See <htmlurl url="mouse.html" name="README.mouse">  for general
instruction on mouse configuration in XFree86.
-->
XFree86 での一般的なマウスの設定手順に関しては <htmlurl url="mouse.html" 
name="README.mouse"> を見てください。

<!--
<sect1>Other input devices
-->
<sect1>その他の入力デバイス
<p>
<!--
XFree86  supports the dynamic loading of drivers for external
input devices using the <tt/XInput/ extension. Currently supported
devices are:
-->
XFree86 は <tt/XInput/ 機能拡張を使用して外部入力機器ドライバの
ダイナミックローディングをサポートしました。現在では、以下の
機器がサポートされています:
<itemize>
<!--
<item>Joystick (<tt/xf86Jstk.so/)
<item>Wacom tablets (Wacom IV protocol only, <tt/xf86Wacom.so/)
<item>SummaSketch tablets (<tt/xf86Summa.so/)
<item>Elographics touchscreen (<tt/xf86Elo.so/)
-->
<item>ジョイスティック (<tt/xf86Jstk.so/)
<item>Wacom タブレット (Wacom IV プロトコルのみ, <tt/xf86Wacom.so/)
<item>SummaSketch タブレット (<tt/xf86Summa.so/)
<item>Elographics タッチスクリーン (<tt/xf86Elo.so/)
</itemize>

<!--
To use a specific device, add the line
-->
特定の機器を使用するには、以下の行を <tt/XF86Config/ の <bf/Module/ 
セクション追加します。
<tscreen>
<tt/load/ <tt/"/<em/module/<tt/"/
</tscreen>
<!--
in the <bf/Module/ section of <tt/XF86Config/, where <em/module/ is
the name of the <tt/.so/ file corresponding to your device.
You also need to set up a <bf/XInput/ section in <tt/XF86Config/. 
Refer to the <em>XF86Config(5)</em> man page for detailed
configuration instructions.
-->
ここで <em/module/ は機器に対応した <tt/.so/ ファイルの名称です。
<tt/XF86Config/ の <bf/XInput/ セクションも設定する必要があります。
設定手順の詳細に関しては <em>XF86Config(5)</em> のマニュアルを参照
してください。
<p>
<!--
You can then change the device used to drive the X pointer with the
<em/xsetpointer(1)/ command.
-->
<em/xsetpointer(1)/ コマンドを使用すれば、X のポインタを操作する機器
を変更する事ができます。
<p>
<!--
For joystick support, you'll need to install the joystick device
driver in the kernel. It is included in NetBSD 1.2. See
<em/joy(4)/ for details.
-->
ジョイスティックをサポートするためには、カーネル内にジョイスティックデバイス
ドライバが含まれていなければなりません。NetBSD 1.2 では含まれています。
詳しくは <em/joy(4)/ を見てください。

<!--
<sect1>Configuring PEX and XIE extensions
-->
<sect1>PEX と XIE 拡張機能の設定
<p>
<!--
The PEX and XIE extensions are  supported as external modules.
If you want to have access to these extensions, add the following
lines to the <bf/Module/ section of <tt/XF86Config/:
-->
PEX と XIE 拡張機能は外部モジュールでサポートされています。これらの拡張機能
を使いたいならば、<tt/XF86Config/ の <bf/Module/ セクションに次の行を追加し
てください:
<tscreen><verb>
   load    "pex5.so"
   load    "xie.so"
</verb></tscreen>


<!--
<sect>Running X
-->
<sect>X の実行

<p>
<!--
8mb of memory is a recommended minimum for running X.  The server,
window manager and an xterm take about 4 Mb of memory themselves.  On
a 4Mb system that would leave nothing left over for other applications
like gcc that expect a few meg free.  X will work with 4Mb of memory,
but in practice compilation while running X can take 5 or 10 times as
long due to constant paging.
-->
X を実行させるには最低限 8MB のメモリが推奨されます。サーバとウィンドウ
マネージャと xterm 一つで約 4MB 程のメモリを消費します。4MB のシステム
だと、gcc等のような数MBの空きを期待しているアプリケーションへのメモリが
残らなくなります。X は 4MB のメモリでも動作しますが、実際問題として X を
動作させながらコンパイルを行うと、常にページングが発生している状態となり
5 〜 10 倍程度の処理時間差が発生します。

<!--
The easiest way for new users to start X windows is to type: 
-->
初めてのユーザが X ウィンドウをする場合の最も簡単な方法は以下のコマン
ドを入力することです:
<tscreen><verb>
startx >& startx.log
</verb></tscreen>
<!-- &amp; -->
<!--
Error messages are lost unless you redirect them
because the server takes over the screen.
-->
エラーメッセージをリダイレクトしておかないと、
サーバに画面が切り替わってしまって見えなくなります。

<!--
To get out of X windows, type: ``<tt/exit/'' in the console xterm.
You can customize your X by creating <tt/.xinitrc/, <tt/.xserverrc/,
and <tt/.twmrc/ files in your home directory as described in the xinit
and startx man pages.
-->
X から抜けるには、``<tt/exit/'' とコンソールの xterm で入力します。ホーム
ディレクトリに <tt/.xinitrc/, <tt/.xserverrc/ や <tt/.twmrc/ のファイル
を xinit や startx のマニュアルで説明されているように作っておけば、X 
をカスタマイズすることができます。

<!--
<sect1>Starting Xdm, the display manager
-->
<sect1> xdm(ディスプレイマネージャ)のインストール

<p>
<!--
To start the display manager, log in as root on the console and type:
``<tt/xdm -nodaemon/''.
-->
ディスプレイマネージャを起動させるには、コンソールで root でログイン
してから ``<tt/xdm -nodaemon/'' と入力してください。

<!--
You can start xdm automatically on bootup by disabling the console getty
and adding the following code to <tt>/etc/rc.local</tt>:
-->
getty を無効にし、かつ次の記述を <tt>/etc/rc.local</tt> に追加すること
で、システム起動時に自動的に xdm を起動することができます:

<tscreen><verb>
  if [ -x /usr/X11R6/bin/xdm ]; then
    echo -n ' xdm'; /usr/X11R6/bin/xdm
  fi
</verb></tscreen>

<!--
To disable the console getty, change ``<bf/on/'' to ``<bf/off/'' in
the console entry in <tt>/etc/ttys</tt>:
-->
コンソールの getty を無効にするには、<tt>/etc/ttys</tt> 中のコンソール
のエントリの ``<bf/on/'' を ``<bf/off/'' に変えます:

<tscreen><verb>
 ttyv0	"/usr/libexec/getty Pc"	pc	off secure
</verb></tscreen>

<p>
<!--
Under NetBSD 1.4 with the wscons console driver, you must enable a
virtual console for the X server first. To do this follow these steps:
-->
NetBSD 1.4 で wscons コンソールドライバを使っている場合、最初に X サー
バ用の仮想コンソールを有効にしなければなりません。これを行うには、以下
の手順に従ってください:
<itemize>
<!--
<item>Make sure the device file exists. If not, ``<tt>cd /dev ;
./MAKEDEV wscons</tt>''. 
-->
<item>デバイスファイルが存在することを確かめます。もしなければ
``<tt>cd /dev ; ./MAKEDEV wscons</tt>'' で作ります。
<!--
<item>Next, make sure your kernel wants to do wscons. (see <ref
id="wscons" name="below">).
-->
<item>次に、カーネルが wscons を使う設定になっていることを確かめます
(これは <ref id="wscons" name="後述します">)。
<!--
<item>Next, make sure ``<tt>wscons=YES</tt>'' in
<tt>/etc/rc.conf</tt>.
-->
<item>次に、<tt>/etc/rc.conf</tt> において ``<tt>wscons=YES</tt>''
が設定されていることを確かめます。
<!--
<item>Next, make sure <tt>/etc/wscons.conf</tt> exists. The relevant
bits:
<item>次に、<tt>/etc/wscons.conf</tt> が存在することを確かめます。関連
するビットを以下に示します:
-->
<tscreen><verb>
#screen	0	-	vt100
screen	1	-	vt100
screen	2	-	vt100
screen	3	-	vt100
screen	4	-	-
screen	5	-	vt100
</verb></tscreen>
</itemize>
<!--
(Thanks to Mason Loring Bliss <tt>&lt;mason@acheron.middleboro.ma.us&gt;</tt> for
this explanation)
-->
(この説明を書いてくださった
Mason Loring Bliss さん(<tt>&lt;mason@acheron.middleboro.ma.us&gt;</tt>)
に感謝します)
<p>
<!--
Note that the binary distributions of XFree86 for NetBSD don't include
support for the XDM-AUTHORIZATION-1 protocol. 
-->
NetBSD 用の XFree86 のバイナリ配布には、XDM-AUTHORIZATION-1 プロトコル
のサポートは含まれていない点に注意してください。

<!--
<sect>Kernel Support for X
-->
<sect>X に関するカーネルサポート

<p>
<!--
To make sure X support is enabled under NetBSD, the following
line must be in your config file in <tt>/sys/arch/i386/conf</tt>:
-->
NetBSD で X のサポートを行うためには、次の行を <tt>/sys/arch/i386/conf</tt> 
中の設定ファイルに記述しておかなければなりません:

<tscreen>
 options XSERVER, UCONSOLE
</tscreen>

<!--
<sect1>Console drivers
-->
<sect1>コンソールドライバ

<p>
<!--
The server supports the standard NetBSD/i386
console drivers: pccons, pcvt and wscons (in pcvt compatibility
mode). They are detected at runtime and no 
configuration of the server itself is required.
-->
このサーバは NetBSD/i386 で標準的な コンソールドライバである
pccons, pcvt, wscons(pcvt 互換モード)をサポートしています。
これらは実行時に検出されるので、サーバの設定などは必要ありません。

<p>
<!--
The pccons driver is the most widely tested and is the console driver
contained in the NetBSD binary distribution's kernels.
-->
pccons ドライバは最もよくテストされ、NetBSD のバイナリ配布用のカーネルに
も含まれているドライバです。

<p>
<!--
The pcvt console driver is bundled with NetBSD. The pcvt X
mode is compatible with the pccons driver X mode. It offers several
virtual consoles and international keyboard support. In order to use
this driver, change the line:
-->
pcvt ドライバは NetBSD に付属しています。pcvt の X モードは pccons の X
モードと互換性があります。複数の仮想コンソールが利用できたり、各国対応の
キーボードをサポートしていたりします。このドライバを使用するためには、
カーネル設定ファイル中の次の行:

<tscreen>
 device          pc0     at isa? port "IO_KBD" irq 1
</tscreen>

<!--
to
-->
を

<tscreen>
 device         vt0     at isa? port "IO_KBD" irq 1
</tscreen>

<!--
in your kernel config file, and rebuild and install your kernel.
-->
に変更してカーネルを再構築して新しいカーネルをインストールしてください。

<p>
<label id="wscons">
<!--
XFree86 will also run with the wscons console driver in
NetBSD 1.4. For now, it uses the pcvt compatibility mode, so be
sure to have the lines:
-->
XFree86 は NetBSD 1.4 の  wscons コンソールドライバでも動作します。
現在のところは pcvt 互換モードを使っているので、wscons を使っている場
合には、以下の行をカーネルの設定ファイルに必ず入れてください:
<tscreen><verb>
options         WSDISPLAY_COMPAT_PCVT           # emulate some ioctls
options         WSDISPLAY_COMPAT_SYSCONS        # emulate some ioctls
options         WSDISPLAY_COMPAT_USL		# VT handling
options         WSDISPLAY_COMPAT_RAWKBD         # can get raw scancodes
</verb></tscreen>
<!--
in your kernel configuration file if you're using wscons. Refer to the 
<em>wscons(4)</em> and <em>wsmouse(4)</em> manual pages for
informations on how to configure wscons into the kernel.
-->
wscons をカーネルに組み込む方法については、<em>wscons(4)</em> と 
<em>wsmouse(4)</em> のオンラインマニュアルを参照してください。

<!--
<sect1>Aperture Driver
-->
<sect1>アパーチャドライバ
<p>
<!--
By default NetBSD 0.9C and higher include the BSD 4.4 kernel security
feature that disable access to the <tt>/dev/mem</tt> device when in
multi-users mode. But XFree86 servers can take advantage (or require)
linear access to the display memory.
-->
NetBSD 0.9C 以降ではマルチユーザモード環境での <tt>/dev/mem</tt> への
アクセスを拒否するという 4.4BSD のカーネルセキュリティ機能が含まれて
います。しかし XFree86 のサーバではビデオメモリへのリニアなアクセスが
性能の向上に使われたり(必須となることもあります)します。

<!--
Moset recent accelerated servers require linear memory access, some
other can take advantage of it, but do not require it.
-->
最近のアクセラレーション付きのサーバのほとんどはリニアメモリアクセスが
必須ですが、リニアメモリアクセスを利用できるけれど必要とはしないサーバ
もあります。

<!--
There are two ways to allow XFree86 to access linear memory:
-->
XFree86 にリニアメモリアクセスを許可するには2つの方法があります:

<!--
The first way is to disable the kernel security feature by adding
`option INSECURE' in the kernel configuration file and build a new
kernel.
-->
一つの方法は、カーネルの設定ファイルに `option INSECURE' を追加してカー
ネルを作り直し、カーネルのセキュリティ機能を無効にすることです。

<!--
The second way is to install the aperture driver:
You can get the aperture driver sources from 
<htmlurl url="ftp://ftp.netbsd.org/pub/NetBSD/arch/i386/apNetBSD.shar" 
name="ftp://ftp.netbsd.org/pub/NetBSD/arch/i386/apNetBSD.shar">.
-->
もう一つの方法はアパーチャドライバをインストールすることです:
アパーチャドライバのソースは
<htmlurl url="ftp://ftp.netbsd.org/pub/NetBSD/arch/i386/apNetBSD.shar" 
name="ftp://ftp.netbsd.org/pub/NetBSD/arch/i386/apNetBSD.shar">
から入手することができます。

<!--
How to activate it is highly dependent from your exact operating
system version:
-->
アパーチャドライバを有効にする方法は、使用している OS のバージョンに強
く依存します。
<itemize>
<!--
<item> NetBSD 1.0, 1.1, 1.2, 1.2.1:
-->
<item> NetBSD 1.0, 1.1, 1.2, 1.2.1 の場合
<p>
<!--
Add the following lines to the end of <tt>/etc/rc.local</tt>:
-->
<tt>/etc/rc.local</tt> の最後に次の行を追加します:
<tscreen><verb>
 KERNDIR=/usr/X11R6/lib/X11/kernel
 if [ -f ${KERNDIR}/ap.o ]; then
   modload -o ${KERNDIR}/ap -e ap -p ${KERNDIR}/apinstall ${KERNDIR}/ap.o
 fi
</verb></tscreen>

<!--
<item> NetBSD 1.2D and later
-->
<item> NetBSD 1.2D 以降の場合
<p>
<!--
Add the following line to  <tt>/etc/lkm.conf</tt>:
-->
<tt>/etc/lkm.conf</tt> に次の行を追加します。
<tscreen><verb>
/usr/X11R6/lib/X11/kernel/ap.o  -  ap /usr/X11R6/lib/X11/kernel/apinstall - 
</verb></tscreen> 

<!--
<item> NetBSD 1.2G, 1.3 and later
-->
<item> NetBSD 1.2G, 1.3 以降の場合
<p>
<!--
The <tt>lkm.conf</tt> format changed in 1.2G. 
Add the following line to  <tt>/etc/lkm.conf</tt>:
-->
<tt>lkm.conf</tt> のフォーマットが 1.2G で変わりました。
<tt>/etc/lkm.conf</tt> に次の行を追加してください:
<tscreen><verb>
/usr/X11R6/lib/X11/kernel/ap.o  -  ap /usr/X11R6/lib/X11/kernel/apinstall - -AFTERMOUNT
</verb></tscreen> 
</itemize>

<!--
Reboot your system. XFree86 will auto-detect the aperture
driver if available.
-->
システムを再起動します。アパーチャドライバが使用できる場合は、XFree86 
はこれを自動認識するしょう。

<1--
<bf/Warning:/ if you boot another kernel than <tt>/netbsd</tt> or
<tt>/bsd</tt>,
loadable kernel modules can crash your system. Always boot in
single user mode when you want to run another kernel.
-->
<bf/警告:/ <tt>/netbsd</tt> や <tt>/bsd</tt> 以外のカーネルで起動する
場合、ローダブルカーネルモジュールを使用するとシステムがクラッシュしま
す。他のカーネルで起動する場合には、必ずシングルユーザモードで起動する
ようにしてください。

<p>
<!--
<quote>
<bf/Caveat:/ the  aperture driver only allows one access at a time
(so that the system is in the same security state once X is
launched). This means that if you run multiple servers on multiples
VT, only the first one will have linear memory access.
Use 'option INSECURE' if you need more that one X server at a time.
</quote>
-->
<quote>
<bf/注意:/ アパーチャドライバは一度に一つのアクセスしか許可しません
(だから一旦 X が起動されるとシステムは同じセキュリティ状態になります)。
これは複数のサーバを複数の仮想端末で実行した場合に、最初の一つだけがリ
ニアアクセスできるということです。同時に複数の X サーバを使用する必要
がある場合には、'option INSECURE' を使用してください。
</quote>

<!--
<sect1>MIT-SHM
-->
<sect1>MIT-SHM
<p>
<!--
NetBSD 1.0 and later supports System V shared memory. If XFree86 
detects this support in your kernel, it will support the MIT-SHM
extension.
-->
NetBSD 1.0 以降では System V 形式の共有メモリがサポートされています。
XFree86 はカーネル内でこれがサポートされていることを検出すると、MIT-SHM
機能拡張をサポートするようになります。

<!--
    To add support for system V shared memory to your kernel add the
    lines:
-->
    カーネルに System V 形式の共有メモリサポートを組み込むには、以下の
    行をカーネル設定ファイルに追加してください:

<tscreen><verb>
 # System V-like IPC
 options         SYSVMSG
 options         SYSVSEM
 options         SYSVSHM
</verb></tscreen>

<!--
    to your kernel config file.
-->

<!--
<sect> Rebuilding the XFree86 Distribution
-->
<sect> XFree86 配布物の再構築

<p>
<!--
The server link kit allow you to rebuild just the X server with a
minimum amount of disk space.  Just unpack it, make the appropriate
changes to the <tt/xf86site.def/, type ``<tt>./mkmf</tt>'' and
``<tt/make/'' to link the server.  See <tt>/usr/X11R6/lib/Server/README</tt>
for more info.
-->
サーバリンクキットを使用すれば、Xサーバを再構築するのに最低限のディスク
容量で済みます。リンクキットの圧縮を解いて、<tt/xf86site.def/ の内容
を必要に応じて変更し、``<tt>./mkmf</tt>'' と ``<tt/make/''  を入力して
サーバをリンクします。詳細に関しては 
<tt>/usr/X11R6/lib/Server/README</tt> を見てください。

<!--
See <htmlurl url="INSTALL.html" name="INSTALL"> for instructions on
unbundling and building the source distribution.
-->
ソース配布物の展開と構築の手順については
<htmlurl url="INSTALL.html" name="INSTALL"> を参照してください。

<!--
You should configure the distribution by editing
<tt>xc/config/cf/host.def</tt>  before compiling.  To compile the
sources, invoke ``<tt/make World/'' in the xc directory.
-->
コンパイルする前に <tt>xc/config/cf/xf86site.def</tt> を編集して
配布物の設定を行わなければなりません。ソースをコンパイルするには、
xc ディレクトリで ``<tt/make World/'' と入力します。

<!--
<sect1>Console drivers<label id="console-drivers">
-->
<sect1>コンソールドライバ<label id="console-drivers">

<p>
<!--
XFree86 has a configuration option to select the console
drivers to use in <tt/xf86site.def/:
-->
XFree86 では <tt/xf86site.def/ 中のオプション設定を使用して
いるコンソールドライバの選択に使います。
<!--
<itemize>
<item> if you're using pccons put:
<tscreen><verb>
 #define XFree86ConsoleDefines -DPCCONS_SUPPORT
</verb></tscreen>
<item>if you're using pcvt put:
<tscreen><verb>
 #define XFree86ConsoleDefines -DPCVT_SUPPORT
</verb></tscreen>
<item>if you're using syscons put:
<tscreen><verb>
 #define XFree86ConsoleDefines -DSYSCONS_SUPPORT
</verb></tscreen>
<item>if you're running codrv put:
<tscreen><verb>
 #define XFree86ConsoleDefines -DCODRV_SUPPORT
</verb></tscreen>
</itemize>
-->
<itemize>
<item> pccons を使用している場合:
<tscreen><verb>
 #define XFree86ConsoleDefines -DPCCONS_SUPPORT
</verb></tscreen>
<item> pcvt を使用している場合:
<tscreen><verb>
 #define XFree86ConsoleDefines -DPCVT_SUPPORT
</verb></tscreen>
<item> syscons を使用している場合:
<tscreen><verb>
 #define XFree86ConsoleDefines -DSYSCONS_SUPPORT
</verb></tscreen>
<item> codrv を使用している場合:
<tscreen><verb>
 #define XFree86ConsoleDefines -DCODRV_SUPPORT
</verb></tscreen>
</itemize>
<!--
If you don't define <bf/XFree86ConsoleDefines/ in <tt/xf86site.def/ the
pccons and pcvt drivers will be supported by default.
-->
<tt/xf86site.def/ で <bf/XFree86ConsoleDefines/ を設定しない
場合は、pccons と pcvt のドライバがサポートされます。

<p>
<!--
Syscons and codrv are not bundled with NetBSD. They are
available by anonymous FTP from a number of sites. They are not
supported by the XFree86 binary distribution anymore. 
-->
syscons と codrv は NetBSD には付属していません。これらはあちこちのサ
イトから anonymous FTP で入手することができます。これらは XFree86 のバ
イナリ配布ではサポートされていません。

<!--
<sect1>pcvt_ioctl.h file:
-->
<sect1>pcvt_ioctl.h ファイル:

<p>
<!--
XFree86's default configuration includes support for the PCVT console
driver. Unfortunately, NetBSD versions before 19980413 don't install
the <tt/pcvt_ioctl.h/ 
file in <tt>/usr/include/machine</tt>. If you want to build XFree86
with PCVT support, execute the following command as root before
starting <tt/make World/:
-->
標準設定の XFree86 には PCVT コンソールドライバのサポートが含まれています。
しかし残念ながら、19980413 以前のバージョンの NetBSD は 
<tt>/usr/include/machine</tt> へ <tt/pcvt_ioctl.h/ をインストールしま
せん。PCVT をサポートする XFree86を作る場合には、以下のコマンドを root 
で実行してから <tt/make World/ を始めなければなりません。
<tscreen><verb>
cp /usr/src/sys/arch/i386/isa/pcvt/pcvt_ioctl.h /usr/include/machine
</verb></tscreen>

<!--
If you don't have kernel sources, you can grab this file from
ftp.netbsd.org or one of its mirrors. If you're not running PCVT, you
can remove -DPCVT_SUPPORT from <bf/XFree86ConsoleDefines/ in
<tt/xf86site.def/ too.
-->
カーネルのソースが無い場合は、ftp.netbsd.org かそのミラーサイトからこ
のファイルを入手する事もできます。また PCVT を使用していなければ、 
<tt/xf86site.def/ の <bf/XFree86ConsoleDefines/ から
-DPCVT_SUPPORT を削除することもできます。


<!--
<sect1>console.h and ioctl_pc.h files:
-->
<sect1>console.h と ioctl_pc.h ファイル:

<p>
<!--
If you want to build a server supporting codrv and you
don't already have the corresponding header file 
<tt/ioctl_pc.h/ installed in <tt>/usr/include/machine</tt>, then
install the copy that is supplied in
<tt>xc/programs/Xserver/hw/xfree86/etc</tt>.  If you run
NetBSD-current you probably want to install it in
<tt>/usr/src/sys/arch/i386/include</tt> too, so that it get
reinstalled each time you run <tt/make includes/.
-->
codrv をサポートしたサーバを作りたいが、対応するヘッダファイルである 
<tt/ioctl_pc.h/ が <tt>/usr/include/machine</tt> にインストールされて
いない場合は、 <tt>xc/programs/Xserver/hw/xfree86/etc</tt> にあるファ
イルをインストールしておきます。NetBSD-current を使用している場合
には <tt>/usr/src/sys/arch/i386/include</tt> にもインストール
しておくと、 <tt/make includes/ する度に再インストールされます。

<!--
If you have installed the  codrv console driver, this
file should be taken from your installed version of the driver.
-->
codrv コンソールドライバをインストールした場合、このファイルは
ドライバに付属しているものを使用しなければなりません。

<!--
The <tt/console.h/ file for syscons isn't distributed with XFree86
anymore. You should get it from the syscons distribution.
-->
syscons の <tt/console.h/ ファイルは XFree86 からは提供していま
せん。syscons に付属のものを使用してください。

<!--
<sect1>Support for shared libs under NetBSD 1.0 and later
-->
<sect1>NetBSD 1.0 以降での共有ライブラリのサポート

<p>
<!--
By default XFree86 builds for NetBSD with shared libraries 
support. If you're building on 0.9 or don't want shared libraries 
add the following line to <tt/host.def/:
-->
XFree86 は標準で NetBSD の共有ライブラリサポートを使用して作られていま
す。NetBSD 0.9 で XFree86 を作る場合や、共有ライブラリを使用したくない
場合は、<tt/xf86site.def/ に次の行を加えます:

<tscreen>	
 #define BuildBsdSharedLibs 	NO
</tscreen>

<!--
<sect1>Building on other architectures<label id="sparc">
-->
<sect1>他のアーキテクチャでの構築<label id="sparc">

<p>
<!--
XFree86 also compiles on NetBSD/sparc. The Sun server
patches from Dennis Ferguson and Matthew Green have been integrated in
<tt>xc/programs/Xserver/hw/sun</tt>.  Small
modifications to <tt/xf86site.def/ are needed:
-->
XFree86 は NetBSD/sparc 上でもコンパイルされています。
Dennis Ferguson 氏と Matthew Green 氏が作成した Sun 用のサーバのパッチ
は既に <tt>xc/programs/Xserver/hw/sun</tt> に統合されています。
<tt/xf86site.def/ は多少の変更する必要があります:
<!--
<itemize>
<item>Set all variables defining the servers to build to
<bf/NO/. (The variables controlling the Sun servers to build
<bf/Xsun24Server/, <bf/XsunServer/ and <bf/XsunMonoServer/ are
defined at the end of <tt/NetBSD.cf/.)
<item>Set <bf/ServerToInstall/ to the sun server of your
choice. (Xsun or XsunMono).
<item>Look at other applicable options in the <htmlurl name="INSTALL document"
url="INSTALL.html">.
</itemize>
-->
<itemize>
<item>構築するサーバを定義する変数を全て <bf/NO/ に設定します。(Sun 用
のサーバ <bf/Xsun24Server/, <bf/XsunServer/, <bf/XsunMonoServer/ のど
れを作るかという指示は <tt/NetBSD.cf/ の最後に定義します。)
<item><bf/ServerToInstall/ を設定して、使用したい Sun 用のサーバを
を選択してください(Xsun または XsunMono)。
<item>その他の設定可能なオプションに関しては、
<htmlurl name="インストールドキュメント" url="INSTALL.html"> を参照し
てください。
</itemize>

<!--
Problems with this port should be reported to the
<em/port-sparc@NetBSD.Org/ mailing list or directly to me
<em/matthieu@laas.fr/ rather than to the xfree86 mailing list. 
-->
この Sun 用に移植したサーバに関して問題が発生した場合は、XFree86 のメー
リングリストよりも <em/port-sparc@NetBSD.Org/ メーリングリストか、直接筆者
<em/matthieu@laas.fr/ まで連絡してください。

<p>
<!--
Note that the NetBSD project has now its own source tree, based on the
XFree86 source tree, with some local modifications. You may want to
start with this tree to rebuild from sources. 
The NetBSD xsrc source tree is available at:
-->
現在 NetBSD プロジェクトでは、XFree86 のソースを元にいくつかの変更が行
われた独自のソースツリーを持っていることに注意してください。こちらのソー
スを使用して再構築することもできます。NetBSD の xsrc ソースツリーは以
下のところから入手可能です:
<htmlurl url="ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-current/xsrc/"
name="ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-current/xsrc/">

<!--
<sect>Building New X Clients
-->
<sect>新しい X クライアントの構築

<p>
<!--
The easiest way to build a new client (X application) is to use
<tt/xmkmf/ if an <tt/Imakefile/ is included in the sources.  Type
``<tt/xmkmf -a/'' to create the Makefiles, check the configuration if
necessary and type ``<tt/make/''.  Whenever you install additional man
pages you should update <tt/whatis.db/ by running ``<tt>makewhatis
/usr/X11R6/man</tt>''.
-->
新しいクライアント(X のアプリケーション)を作る場合、ソース中に
<tt/Imakefile/ が含まれているなら、<tt/xmkmf/ を使うのが最も簡単
でしょう。``<tt/xmkmf -a/'' と入力して Makefileを作り、必要に応じて
設定のチェックを行、それから ``<tt/make/'' と入力します。
同時にマニュアルもインストールした場合、<tt/whatis.db/
を更新するために ``<tt>makewhatis /usr/X11R6/man</tt>'' と実行して
おきます。

<!--
To avoid the ``Virtual memory exhausted'' message from cc while
compiling, increase the data and stack size limits (in csh type ``<tt/limit
datasize 32M/'' and ``<tt/limit stacksize 16M/'').
-->
コンパイル中に ``Virtual memory exhausted'' というメッセージが
cc から出力されるのを避けるには、データやスタックのサイズ制限を
増やしておくといいでしょう(csh の場合 ``<tt/limit datasize 32M/''
と ``<tt/limit stacksize 16M/'' を実行しておきます)。

<!--
Note: Starting with XFree86 2.1 and NetBSD 0.9A, the symbol
<bf/__386BSD__/ no longer gets defined either by the compiler or via the
X config files for *BSD systems.  When porting clients to *BSD
systems, make use of the symbol <bf/BSD/ for code which is truly
BSD-specific.  The value of the symbol can be used to distinguish
different BSD releases.  For example, code specific to the Net-2 and
later releases can use:
-->
メモ: NetBSD 0.9A と XFree86 2.1 からは、<bf/__386BSD__/ という
シンボルをコンパイラも X の *BSD 用の設定ファイルも設定しなくなって
います。クライアントを各種 BSD 系のシステムへ移植する時は、<bf/BSD/
というシンボルを本来 BSD 特有なコードに使うようにする必要があります。
シンボルの値を使って BSD のリリースを区別することもできます。例えば、
Net-2 以降のリリースに特有のコードの場合には以下のようにします:

<tscreen>                   
#if (BSD >= 199103)
</tscreen>

<!--
To ensure that this symbol is correctly defined, include
<tt>&lt;sys/param.h&gt;</tt> in the source that requires it.  Note that
the symbol <bf/CSRG_BASED/ is defined for *BSD systems in XFree86 3.1.1
and later.  This should be used to protect the inclusion of
<tt>&lt;sys/param.h&gt;</tt>.
-->
このシンボルを正しく設定する為に、<tt>&lt;sys/param.h&gt;</tt> を
ソース中でインクルードするようにしてください。XFree86 3.1.1 以降では、
<bf/CSRG_BASED/ というシンボルが各種 BSD システムのために定義されてい
ます。これは <tt>&lt;sys/param.h&gt;</tt> のインクルードの保護のために
使われます。

<!--
For code that really is specific to a particular i386 BSD port, use
<bf/__FreeBSD__/ for FreeBSD, <bf/__NetBSD__/ for NetBSD,
<bf/__OpenBSD__/ for OpenBSD,
<bf/__386BSD__/ for 386BSD, and <bf/__bsdi__/ for BSD/386.
-->
本当に i386 系の各種 BSD に特有な部分に関するコードには、
FreeBSD には <bf/__FreeBSD__/ を、NetBSD には <bf/__NetBSD__/ を、
OpenBSD には <bf/__OpenBSD__/ を、386BSD には <bf/__386BSD__/ を、
BSD/386 には <bf/__bsdi__/ を使用してください。

<!--
Another note: If you get the message:
-->
メモ(その2): 実行時に次のようなメッセージが出たら

<tscreen>                   
 ld.so: undefined symbol _XtCvtStringToFont 
</tscreen>

<!--
at run-time, you've stumbled on a semantic weakness of the NetBSD 
dynamic linker. Applications that use libXmu also need libXt. If the
client uses a standard <tt/Imakefile/, this dependency will probably by
included in the Makefile automagically &ndash; you'll not see the
problem. Otherwise, just add ``<tt/-lXt/'' to your library list in the
Imakefile or Makefile and relink.
-->
NetBSD のダイナミックリンク機構の弱点でつまづいています。libXmu を
使用するアプリケーションは、libXt も使用します。クライアントがごく
普通の <tt/Imakefile/ を使用するなら、この依存性は自動的に Makefile
中に含まれます。したがって問題が現れることはないでしょう。もしそうでな
い場合は単に、``<tt/-lXt/'' を Imakefile や Makefile のライブラリリス
トに追加して、再リンクを行ってください。

<!--
<sect> Thanks
-->
<sect> 謝辞

<p>
<!--
Many thanks to:
-->
以下の方々に深く感謝します:
<!--
<itemize>
<item><bf/Pace Willison/ for providing the initial port to 386BSD.
<item><bf/Amancio Hasty/ for fixing cursor restoration, mouse bugs
and many others. 
<item><bf/Christoph Robitschko/ for fixing <tt/com.c/ and thus select().
<item><bf/Nate Williams/ for the patchkit support for X.
<item><bf/Rod Grimes/ and <bf/Jack Velte/ of Walnut Creek Cdrom for use
  of their machines in preparing the FreeBSD binary release.
</itemize>
-->
<itemize>
<item><bf/Pace Willison/ さんは最初に 386BSD への移植を行いました。
<item><bf/Amancio Hasty/ さんはカーソルの復元やマウスのバグなどたくさ
んの修正を行いました。
<item><bf/Christoph Robitschko/ さんは <tt/com.c/ と、それに伴って select() を修正しました。
<item><bf/Nate Williams/ さんは X 用のパッチキットのサポートを行いました。
<item>Walnut Creek Cdrom の <bf/Rod Grimes/ さんと <bf/Jack Velte/ さ
んは FreeBSD のバイナリリリース用に機材の提供してくださいました。
</itemize>

<verb>
$XFree86: xc/programs/Xserver/hw/xfree86/doc/Japanese/sgml/NetBSD.sgml,v 1.1.2.4 1999/12/28 12:13:54 hohndel Exp $






$XConsortium: NetBSD.sgml /main/26 1996/10/28 05:43:20 kaleb $
</verb>

<sect>日本語訳について<p>
この日本語訳(バージョン 3.3.3-3.3.6)は
大石勲 さん &lt;ohishi@hf.rim.or.jp&gt;
の 3.3.2 版の翻訳をベースに
X Japanese Documentation Project が更新を行ったものです
(更新: 藤原輝嘉 <url url="mailto:fujiwara@linux.or.jp"
name="&lt;fujiwara@linux.or.jp&gt;">)。
</article>
