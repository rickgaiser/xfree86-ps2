<!DOCTYPE linuxdoc PUBLIC "-//XFree86//DTD linuxdoc//EN">
 
<article>

<!-- Title information -->
<!--
<title> Information for Cirrus Chipset Users
-->
<title> Cirrus チップセットユーザ向けの情報
<author> Harm Hanemaayer (<it>H.Hanemaayer@inter.nl.net</it>),
Randy Hendry (<it>randy@sgi.com</it>) (64xx),
Corin Anderson (<it>corina@the4cs.com</it>)
<date> 5 November 1998
<trans> The X Japanese Documentation Project
<tdate> 18 January 1999

<!-- Table of contents -->
<toc>


<!-- <sect> Supported chipsets <p> -->
<sect> サポートしているチップセット <p>

<!--
There are two different SVGA drivers for Cirrus chipsets, one called
``cirrus'' and one called ``cl64xx''.
The ``cirrus'' driver is used in the 256-color SVGA server (with
acceleration) and the mono server (without acceleration). The SVGA server
supports 16, 24, and 32 bits-per-pixel truecolor modes on some configurations.
The ``cl64xx'' driver is used in the 256-color SVGA, 16-color and mono
servers.  Note that except where stated otherwise, this document is
referring to the ``cirrus'' driver.
The following chipsets by Cirrus Logic are supported:
-->
Cirrus のチップセット用には、&dquot;cirrus&dquot; と 
&dquot;cl64xx&dquot; と呼ばれる2つの異なる SVGA ドライバがあります。
&dquot;cirrus&dquot; ドライバは 256 色の(アクセラレータ付き)SVGA サー
バと(アクセラレータ無し)白黒サーバで用いられています。ハードウェア構成
によっては、SVGA サーバは 16, 24, 32bpp の truecolor モードをサポート
します。&dquot;cl64xx&dquot; ドライバは 256 色の SVGA サーバと 16 色サー
バ、白黒 サーバで用いられています。特に断っていない限りは、この文書で
は &dquot;cirrus&dquot; ドライバについて記述しているものとします。次の 
Cirrus Logic 製チップセットがサポートされています:
<descrip>
<tag>CL-GD5420</tag>
<!--
	ISA SVGA chipset, 1Mbyte; maximum dot clock is 45 MHz (256
	color server). Acceleration with extended write modes (used
	for scrolling and solid filling in this driver). This chipset
	can <em>not</em> support 1024x768 non-interlaced in 256 colors.
-->
ISA SVGA チップセット, 1Mバイト; 最大ドットクロックは 45 MHz (256 色サー
バ)。拡張書き込みモードによるアクセラレータ機能(このサーバでは、スクロー
ルと塗りつぶしに用いています)。このチップセットは 256 色の 1024x768 ノ
ンインターレースはサポート<em>していません</em>。
<tag>CL-GD5422</tag>
<!--
	Enhanced version of the 5420 (32-bit internal memory
	interface). Maximum dot clock is 80 MHz.
-->
5420の改良版(32 ビット内蔵メモリインターフェース)。最大ドットクロック
は 80 MHz です。
<tag>CL-GD6205/6215/6225/6235</tag>
<!--
	Laptop chipsets more or less compatible with the 5420. The
	only dot clock supported is 25 MHz (more on an external
	display). Some problems have been reported with these
	chipsets (especially on external displays). Take note of
	the "<tt>noaccel</tt>" option.
-->
5420 とほぼ互換のラップトップ用チップセット。ドットクロックは 25 MHz 
のみサポートしています(外部ディスプレイではそれ以上も可能)。これらのチッ
プセットを使った時に起こる問題がいくつか報告されています(特に外付けディ
スプレイ使用時)。&dquot;<tt>noaccel</tt>&dquot; オプションを調べてみて
ください。
<tag>CL-GD6420/6440</tag>
<!--
	These chipsets are not compatible with the 542x series, but are
        supported by the ``cl64xx'' driver. It is used in
        recent laptops, and bears some similarity to old Cirrus
        chipsets (5410/AVGA2). The driver may also work for other
        64xx chips. The configuration identifiers for this driver are
	"<tt>cl6420</tt>" and <tt>"cl6440"</tt>.  This driver is discussed
	in detail in section <ref id="cl64xx" name="The cl64xx Driver">.
-->
これらのチップセットは 542x シリーズとは互換はありませんが、
&dquot;cl64xx&dquot; ドライバでサポートされています。このチップセット
は最近のラップトップに搭載されており、昔の Cirrus チップセット
(5410/AVGA2)と似た部分を持っています。このドライバは他の 64xx チップセッ
トに対しても動作しています。このドライバに対する設定用の識別子は 
&dquot;<tt>cl6420</tt>&dquot; と <tt>&dquot;cl6440&dquot;</tt> です。
このドライバについては「<ref id="cl64xx" name="cl64xx ドライバ">」セク
ションで詳しく説明します。
<tag>CL-GD5424</tag>
<!--
	Basically VLB version of the 5422, but resembles the
	5426 in some respects.
-->
基本的には 5422 の VLB 版ですが、5426 に似ている点もいくつかあります。
<tag>CL-GD5426</tag>
<!--
	Supports both ISA bus and VLB, and up to 2Mbyte of memory.
	Has BitBLT engine for improved acceleration (BitBlt, image
	transfer, text). Dot clock limit is 85 MHz.
-->
ISA バスと VLB 両方をサポートしており、2M バイトまでメモリを搭載できま
す。アクセラレーション性能を向上させるには BitBLT エンジンを搭載してく
ださい(BitBLT は画像転送とテキスト表示に有効です)。ドットクロックの上
限は 85 MHz です。
<tag>CL-GD5428</tag>
<!--
	Enhanced version of the 5426.
-->
5426 の改良版です。
<tag>CL-GD5429</tag>
<!--
	Enhanced version of the 5428; officially supports higher
	MCLK and has memory-mapped I/O.
-->
5428 の改良版で、より高い MCLK 値を公式にサポートし、メモリマップド 
I/O を搭載しています。
<tag>CL-GD5430</tag>
<!--
	Similar to 5429, but with 543x core (32-bit host interface).
	Does not have 64-bit memory mode.
-->
5429 に似ていますが、543x のコアを持っています(32 ビットホストインタフェー
ス)。64 ビットメモリモードは持っていません。
<tag>CL-GD5434</tag>
<!--
	`Alpine' family chip with 64-bit internal memory interface.
        The chip
	can only support 64-bit mode if equipped with 2 Mbytes of
	memory; cards with only 1 Mbyte are severely limited.
	Supports dot clocks up to 110 MHz (later chips support
	135 MHz).
-->
64 ビット内蔵メモリインタフェースを持った `Alpine' の系列のチップです。
このチップは、2M バイトのメモリを搭載すると 64 ビットモードしかサポー
トしません。1M バイトしかメモリを積んでいなければ性能は厳しく制限され
ます。110 MHz までのドットクロックをサポートします(新しいチップセット
は 135 MHz をサポートしています)。
<tag>CL-GD5436</tag>
<!--
	Highly optimized 5434.
-->
高度に最適化した 5434 です。
<tag>CL-GD5440</tag>
<!--
	Similar to the CL-GD5430, and detected as such.
-->
CL-GD5430 に似ており、CL-GD5430 として検出されます。
<tag>CL-GD5446</tag>
<!--
	Another member of the Alpine family of 2D accelerators; similar
        to the CL-GD5436.
-->
Alpine 系列の2次元アクセラレータの一つで、CL-GD5436 に似ています。
<tag>CL-GD5480</tag>
<!--
	Newer Alpine family chip that support synchronous graphics RAM
	(SGRAM).
-->
同期グラフィックスRAM(SGRAM)をサポートした、Alpine 系列の新しいチップ
です。
<tag>CL-GD5462, CL-GD5464 and CL-GD5465</tag>
<!--
	The Laguna VisualMedia family of 2D  Accelerators.  These chips 
	use Rambus RDRAM memory.  The '62 is a 64-bit 2D 
	accelerator, including a BitBlit engine, video windows (not currently
	used by the server), and 64x64 HW cursor.  Mono modes have not been
	tested. The CL-GD5464 is the next chip in the Laguna family, and the
	CL-GD5465 is the latest member, both have been tested.
-->
Laguna VisualMedia 系列の 2 次元アクセラレータです。これらのチップセッ
トは Rambus RDRAM メモリを使っています。CL-GD5462 は 64 ビット 2 次元
アクセラレータであり、BitBlit エンジンとビデオウィンドウ(現在のサーバ
では使用していません)、ハードウェアカーソルに対応しています。白黒モー
ドはテストされていません。CL-GD5464 は Laguna 系列の次のチップで、
CL-GD5465 の最新のチップです。どちらもテストされています。サポートしま
したがテストしていません。
<tag>CL-GD7541/7542/7543/7548</tag>
<!--
	Laptop chipsets more or less compatible with the 5428/3x.
        While has it been tested on some configurations, not all
        configuration may work correctly.
-->
5428/3x と一部互換性があるラップトップ用のチップセットです。いくつかの
環境でテストは行ったのですが、全ての環境で正しく動作するわけではないよ
うです。
<tag>CL-GD7555</tag>
<!--
	Limited untested support, without auto-detection, has been
	provided for this chip which is a 64-bit extension of the 754x
	family. Use a Chipset "clgd7555" line.
-->
このチップに対しては、754x 系列の 64 ビット拡張がサポートされています。
ただしサポートは制限付きで、テストされておらず、自動検出も行われません。
Chipset "clgd7555" という行で指定してください。
</descrip>

<!--
Here's a list of maximum dot clocks for each supported depth:
-->
サポートしている色の深さそれぞれについての最大ドットクロック値のリスト
を示します:

<!--
<quote><verb>
                mono     8 bpp (256c) 16 bpp       24 bpp       32 bpp
CL-GD62x5       45 MHz   45 MHz    
CL-GD5420       80 MHz   45 MHz (1)
CL-GD542x/512K  80 MHz   45 MHz    
CL-GD5422/24    80 MHz   80 MHz       40 MHz       27 MHz
CL-GD5426/28    85 MHz   85 MHz       45 MHz (2)   28 MHz
CL-GD5429       85 MHz   85 MHz       50 MHz       28 MHz
CL-GD5430       85 MHz   85 MHz       45 MHz (2)   28 MHz
CL-GD5434/1Mb   85 MHz   85 MHz       42 MHz       28 MHz
CL-GD5434/2Mb   85 MHz   110/135 MHz  85 MHz       28 MHz       45/50 MHz (2)
CL-GD5436/1Mb	85 MHz	 110 MHz (3)  60 MHz (3)   40 MHz (3)
CL-GD5436/2Mb	85 MHz	 135 MHz      85 MHz       85 MHz (3)   60 MHz (3)
CL-GD5446/1Mb	85 MHz	 110 MHz (3)  60 MHz (3)   40 MHz (3)
CL-GD5446/2Mb	85 MHz	 135 MHz      85 MHz       85 MHz (3)   60 MHz (3)
CL-GD5462	170 MHz  170 Mhz      170 MHz      170 MHz      135 MHz
CL-GD5464/65	170 MHz  230 Mhz      170 MHz      170 MHz      135 MHz
CL-GD5480	85 MHz	 200 MHz      100 MHz      100 MHz      50 MHz
CL-GD754x	80 MHz   80 MHz       40 MHz (4)   (5)

(1) with 512K memory.
(2) 50 MHz with high MCLK setting.
(3) Depends on memory clock.
(4) This may be too low for some chips.
(5) This depth may actually work if it is enabled and tested.
</verb></quote>
-->
<quote><verb>
                白黒     8 bpp(256色) 16 bpp       24 bpp       32 bpp
CL-GD62x5       45 MHz   45 MHz    
CL-GD5420       80 MHz   45 MHz (1)
CL-GD542x/512K  80 MHz   45 MHz    
CL-GD5422/24    80 MHz   80 MHz       40 MHz       27 MHz
CL-GD5426/28    85 MHz   85 MHz       45 MHz (2)   28 MHz
CL-GD5429       85 MHz   85 MHz       50 MHz       28 MHz
CL-GD5430       85 MHz   85 MHz       45 MHz (2)   28 MHz
CL-GD5434/1Mb   85 MHz   85 MHz       42 MHz       28 MHz
CL-GD5434/2Mb   85 MHz   110/135 MHz  85 MHz       28 MHz       45/50 MHz (2)
CL-GD5436/1Mb	85 MHz	 110 MHz (3)  60 MHz (3)   40 MHz (3)
CL-GD5436/2Mb	85 MHz	 135 MHz      85 MHz       85 MHz (3)   60 MHz (3)
CL-GD5446/1Mb	85 MHz	 110 MHz (3)  60 MHz (3)   40 MHz (3)
CL-GD5446/2Mb	85 MHz	 135 MHz      85 MHz       85 MHz (3)   60 MHz (3)
CL-GD5462	170 MHz  170 Mhz      170 MHz      170 MHz      135 MHz
CL-GD5464/65	170 MHz  230 Mhz      170 MHz      170 MHz      135 MHz
CL-GD5480	85 MHz	 200 MHz      100 MHz      100 MHz      50 MHz
CL-GD754x	80 MHz   80 MHz       40 MHz (4)   (5)

(1) メモリが 512K の場合
(2) 高い MCLK 値を設定すると 50 MHz。
(3) メモリクロックに依存します。
(4) この値は一部のチップに対しては低すぎるかもしれません。
(5) 有効にしてテストすれば、この深さでも実際に動作するかもしれません。
</verb></quote>


<!--
Rough virtual/physical screen resolution limits for different amounts of
video memory:
-->
大まかに言うと、仮想的/物理的な画面解像度はビデオメモリの量の制約を受
けます:
<!--
<quote><verb>
            mono        8 bpp        16 bpp     24 bpp     32 bpp
256K        800x600     640x400                         
512K        1152x900    800x600     640x400             
1024K       1600x1200   1152x900    800x600     680x510
2048K       2304x1728   1600x1200   1152x900    960x720    800x600
4096K       2304x1728   2272x1704   1600x1200   1360x1020  1152x900
</verb>
</quote>
-->
<quote><verb>
            白黒        8 bpp        16 bpp     24 bpp     32 bpp
256K        800x600     640x400                         
512K        1152x900    800x600     640x400             
1024K       1600x1200   1152x900    800x600     680x510
2048K       2304x1728   1600x1200   1152x900    960x720    800x600
4096K       2304x1728   2272x1704   1600x1200   1360x1020  1152x900
</verb>
</quote>
<!--
For 546x chips, the above table isn't quite accurate.  While the virtual 
width may be any size, the screen <it>pitch</it> will be rounded up to the 
nearest value in the table
below.  Thus, each line on the screen will take more video memory than just
what is displayed.  To maximize video memory, then, choose the virtual
desktop width from the table of pixel widths below:
-->
546x チップの場合、上の表はあまり正確ではありません。仮想画面の幅は任
意ですが、画面の<it>ピッチ</it> を次の表のうち、最も近い値に切り上げま
しょう。従って、画面上の各行はビデオメモリは単に表示を行うだけの量より
も多くのビデオメモリを必要とします。ビデオメモリを最大限使うには、以下
のピクセル幅の表から仮想デスクトップの幅を選択してください:
<quote><verb>
8bpp:	640, 1024, 1280, 1664, 2048, 2560, 3328, 4096, 5120, 6656
16bpp:	320,  512,  640,  832, 1024, 1280, 1664, 2048, 2560, 3328
24bpp:	640, 1024, 1280, 1664, 2048, 2560, 3328, 4096, 5120, 6656
32bpp:	160,  256,  320,  416,  512,  640,  832, 1024, 1280, 1664
</verb></quote>

<!--
For other Cirrus chips, it's advisable to have a virtual width that is a
multiple of 32 if acceleration is used.
The horizontal monitor timings must be below 2048.
-->
他の Cirrus 製チップセットでは、アクセラレータ機能を使う場合には、仮想
画面の幅を 32 の倍数にするとよいでしょう。モニタの水平方向のタイミング
は 2048 以下にしなければいけません。

<!--
To run <tt>XF86_SVGA</tt> at a higher color depth, pass options to the
X server as follows:
-->
より大きい色の深さで <tt>XF86_SVGA</tt> を動作させるには、次のオプショ
ンを X サーバ渡してください:
<!--
<verb>
startx &mdash; -bpp 16		5-6-5 RGB ('64K color', XGA)
startx &mdash; -bpp 16 -weight 555	5-5-5 RGB ('Hicolor') (not on 5462)
startx &mdash; -bpp 24		8-8-8 RGB truecolor
startx &mdash; -bpp 32		8-8-8 XRGB truecolor (543X/46/6X only)
</verb>
tf: "-" 2 個を "&mdash;" に置き換えてます(sgmltools のバグ回避のためです)。
-->
<verb>
startx -- -bpp 16		5-6-5 RGB ('6万4千色', XGA)
startx -- -bpp 16 -weight 555	5-5-5 RGB ('Hicolor') (5462 では使えません)
startx -- -bpp 24		8-8-8 RGB truecolor
startx -- -bpp 32		8-8-8 XRGB truecolor (543X/46/6X のみ)
</verb>

<!--
<sect> Basic configuration <p>
-->
<sect> 基本設定 <p>

<!--
It is recommended that you generate an XF86Config file using
the `<tt>XF86Setup</tt>' or `<tt>xf86config</tt>' program, which should
produce a working
high-resolution 8bpp configuration. You may want to include mode
timings in the <tt>Monitor</tt> section that better fit your monitor
(e.g 1152x900 modes). The driver options are described in detail in
the next section; here the basic options are hinted at.
-->
`<tt>XF86Setup</tt>' や`<tt>xf86config</tt>' プログラムを使用して
XF86Config ファイルを生成することをお勧めします。このプログラムは高解
像度, 8bpp の動作する設定を作成してくれます。使用するモニタに、より適
したモードタイミング値(例: 1152x900モード)を <tt>Monitor</tt> セクショ
ンに記入することもできます。ドライバのオプションに関する詳しい説明は次
のセクションで行いますので、ここでは基本的なものについて簡単に述べます。

<!--
For all chipsets, a <tt>Clockchip "cirrus"</tt> line in the
<tt>Device</tt> section can be useful. This allows the use of any dot
clocks, instead of one out of the fixed set of dot clocks supported
by the driver. This is required if you want a 12.6 MHz dot clock for
low-resolution modes. However, when this option used, clock frequencies
be unstable leading to strange effects, so only use it if absolutely
required.
-->
全てのチップセットにおいて、<tt>Clockchip &dquot;cirrus&dquot;</tt> 行
を<tt>Device</tt> セクションに書くと便利な場合があります。こうしておく
と、サーバがサポートしている固定のドットクロックの組み合わせの中から選
ぶのではなく、任意のドットクロックを使うことができます。この指定は、低
解像度モード用に 12.6 MHz のドットクロックを使いたい場合に必要になりま
す。しかし、このオプションを使用すると、クロック周波数が不安定になって
おかしな現象が起こることがあるので、絶対に必要な時だけ使用してください。

<!--
For any chip with a BitBLT engine, the new XAA (XFree86 Acceleration
Architecture) is used. This code is new and still in a beta stage.
If graphics redrawing goes wrong, try the
<tt>"noaccel"</tt> option; if it is using memory-mapped I/O,
<tt>"no_mmio"</tt> might be sufficient.
-->
BitBLT エンジンを積んだチップ全てに対して、新しい XAA(XFree86
Acceleration Architecture)が使われています。このコードはまだベータ段階
です。グラフィックスの再描画がうまくいかない場合、<tt>"noaccel"</tt> 
オプションを試してください。メモリマップト I/O を使っている場合には、
<tt>"no_mmio"</tt> で十分かもしれません。

<!--
In order to be able to run at a depth of 16bpp, 24bpp, or 32bpp, and to improve
performance at 8bpp, linear addressing must be enabled. This is generally
tf: この部分は、たぶん消し忘れのゴミ。
-->
<!--
In order to be able to run at a depth of 16bpp, 24bpp or 32bpp, and to improve
performance at 8bpp, linear addressing must be enabled. Linear addressing
is the default mode of operation on any PCI-bus configuration; use
<tt>"nolinear"</tt> to disable it.
For other bus types, it is generally
possible on 543x local bus cards, and if you have less than 16Mb of system
memory, on local bus 542x cards and ISA 543x cards. You must specify
the <tt>"linear"</tt> option and possibly a <tt>Membase</tt>
address. See the following sections for a detailed description.
-->
色の深さ 16bpp, 24bpp 32bpp で動作できるようにするため、また 8bpp 時の
性能を向上させるためにはリニアアドレッシングを使わなければなりません。
PCI バス環境では、リニアアドレッシングはデフォルトの操作モードです。こ
れを無効にするには <tt>"nolinear"</tt> を指定します。他のタイプのバス
の場合、一般的にはローカルバス上の 543x で使用可能です。また、システム
のメモリが 16Mb いかであれば、ローカルバスの 542x と ISA の 543x カー
ドでも使用可能です。この場合には <tt>"linear"</tt> オプションを指定し
なければなりませんし、たぶん <tt>Membase</tt> のアドレスも指定しなけれ
ばなりません。詳しい説明については、後のセクションを参照してください。

<!--
Memory-mapped I/O is the default mode of operation for any Alpine family
chip. For the 5429, the <tt>"mmio"</tt> option may be used
to enable it, but it has not been tested.
-->
Alpine 系列全てのカードに対して、メモリマップト I/O はデフォルトの操作
モードです。5429 の場合には、<tt>"mmio"</tt> オプションを使ってメモリ
マップト I/O を有効にできますが、テストは行われていません。

<!--
Finally, if you have 546X chip, it will be on either a PCI or AGP bus.
As such, there
is no problem about memory mapped I/O or linear frame buffer address spaces
running into system memory.  The PCI spaces are mapped way up near the 4GB
point.  Because the mmio and linear frame buffer don't conflict at all on 
the system, the <tt>"linear"</tt>, <tt>Membase</tt>, and 
<tt>"mmio"</tt> options are ignored (memory mapped I/O  and linear
addressing are always used).
-->
最後になりますが、読者のみなさんが 546x チップをお持ちならば、これは 
PCI バスか AGP バスに接続されているでしょう。この場合は、メモリマップ
ト I/O やリニアフレームバッファ空間がシステムメモリと衝突していても問
題はありません。PCI 空間は 4GB 近くのアドレスまでマップされています。
mmio と リニアフレームバッファはシステム上で全く干渉しないので、
<tt>"linear"</tt>, <tt>Membase</tt>, <tt>"mmio"</tt> オプションは無視
されます(メモリマップと I/O とリニアアドレッシングの両方が使われます)。

<!--
<sect> XF86Config options <p>
-->
<sect> XF86Config のオプション <p>
<!--
Don't use the `<tt>Clocks</tt>' command. The clocks are fixed
(i.e. not probed), and
there should be no variation between cards (other than the maximum supported
clock for each chipset).
-->
`<tt>Clocks</tt>' コマンドは使わないでください。クロックは固定(つまり、
検出は行わない)ですし、(各チップセットにがサポートしている最大クロック
値を除いて)カードによる変化も無いはずです。

<!--
The following options are of particular interest to the Cirrus driver. Each
of them must be specified in the `<tt>svga</tt>' driver section of the
<tt>XF86Config</tt>
file, within the <tt>Screen</tt> subsections of the depths to which they are
applicable (you can enable options for all depths by specifying them in the
Device section).
-->
以下に挙げるオプションは、Cirrus ドライバ専用のものです。オプションは
それぞれ、<tt>XF86Config</tt> ファイルの `<tt>svga</tt>' ドライバのセク
ション内の、オプションを適用する色の深さの <tt>Screen</tt> サブセクショ
ンで指定しなければなりません。(Device セクションで指定することにより、
全ての色の深さでオプションを有効にすることができます)。
<descrip>
<!--
<tag>Option "noaccel"</tag>
	This option will disable the use of any accelerated functions. This
	is likely to help with problems related to bugs in acceleration
	functions, and perhaps high dot clocks and DRAM timing, at the cost
	of performance (which will still be reasonable on a local bus).
-->
<tag>Option &dquot;noaccel&dquot;</tag>
このオプションはアクセタレータ機能を無効にします。このオプションが役に
立つのは、アクセラレーション機能のバグや高いドットクロック値、速い 
DRAM のタイミング等に関連する問題に対処する時です。ただし、性能は悪く
なります(それでも、ローカルバスでは問題ないでしょう)。
<!--
<tag>Option "fast_dram" "med_dram"
"slow_dram" (5424/6/8/9, 543x, 5446, 546x)
</tag>
        These options set the internal memory clock (MCLK, or BCLK for
	the 546x) register to
	another value. The default value programmed by the BIOS is
	usually OK, don't mess with these options unless absolutely
        required.
-->
<tag>Option &dquot;fast_dram&dquot; &dquot;med_dram&dquot;
&dquot;slow_dram&dquot; (5424/6/8/9, 543x, 5446, 546x)
</tag>
これらのオプションは、内蔵メモリクロック(MCLK, ただし 546x の場合は 
BCLK) レジスタに他の数値を設定するものです。普通は BIOS にプログラムさ
れているデフォルト値なら大丈夫ですが、どうしても必要でない限りはこのオ
プションで無茶をしないでください。

<!--
	The <tt>"fast_dram"</tt> option will cause the driver to set the
	internal
	memory clock (MCLK) register of the video card to a higher value
	(recent chips use an even higher value by default).
	Normally, this register is not touched but it appears that the
	standard CL-GD542x BIOS initializes it to a value that is somewhat
	on the low side (limited by the chip specification), which has a
	negative influence on performance of high dot clock modes. This
	is especially true if extended RAS timing is being used (this is
	indicated in the server probe).
	The actual speed of DRAM is not a critical factor in the determining
	whether	this option is appropriate; one CL-GD5426-based card with
	80ns DRAM using Extended RAS timing, which came with a DOS driver
	utility to set the MCLK to this value (0x22), seems to run stable
	at higher MCLK.
-->
<tt>&dquot;fast_dram&dquot;</tt> オプションはビデオカードの内蔵メモリ
クロック(MCLK)レジスタの値をより高く設定します(最近のチップはデフォル
トで十分高い値を使っています)。通常、このレジスタに触ることはないので
すが、標準の CL-GD542x BIOS はこのレジスタをいくらか低い側(チップの仕
様で制限されています)の値に初期化するようです。この値が低いと、高いドッ
トクロックモードの時に性能に悪影響が出ます。この影響は、拡張 RAS タイ
ミングが使われる(これはサーバが検出を行う時に示されます)場合に特に顕著
です。このオプションが適切かどうかを決定する際には、DRAM の実際の速度
は決定的な要素ではありません。ある CL-GD5426 ベースのカード(MCLK をこ
の値(0x22)に設定するための DOS のドライバが付属しています)は 80ns の 
DRAM を搭載し、拡張 RAS タイミングを使っていますがは、高い MCLK 値でも
安定して動作するようです。

<!--
	There are also (mainly brand name) cards whose customized BIOS does
	initialize to a higher non-standard value.
-->
カスタマイズされた BIOS が標準値でない高い値への初期化を行う(主に有名
どころの)カードがあります。

<!--
	The <tt>"slow_dram"</tt>
	option will set the MCLK to the value used by the
        standard CL-GD542x BIOS (0x1c). Symptoms of a MCLK that is too high
        can be vertical bands of flickering pixels on the screen, erroneous
        pixels appearing in text, and loosing pixels in the textmode font
        after running X (note that very similar effects can be caused by an
        MCLK setting that is too low).
-->
<tt>&dquot;slow_dram&dquot;</tt> オプションは、MCLK を標準の CL-GD542x
BIOS が使う値(0x1c)に設定します。MCLK の値が高すぎると、スクリーンにち
らつくピクセルの縦縞ができたり、テキストにおかしなピクセルが現われたり、
X を終了した後にテキストモードのフォントのピクセルが欠けるという現象が
起きます(MCLK を低すぎる値にしても、よく似た現象が起きることがある点に
注意してください)。

<!--
	Upon start-up, the driver will report the value of the MCLK
	register (check this first), and also any changes that are made.
-->
起動時にドライバは MCLK レジスタの値を表示します(この値をまず確認して
ください)。また、レジスタの値に何らかの変化があれば、それも表示します。

<!--
	Typical MCLK values:
-->
典型的な MCLK の値:
	<descrip>
	<tag/0x1c (50 MHz)/
<!--
		This is usually the BIOS default.
		It is forced by the <tt>"slow_dram"</tt> option.
-->
これは普通、BIOS のデフォルト値です。<tt>&dquot;slow_dram&dquot;</tt> 
オプションで強制指定できます。
	<tag/0x1f (55 MHz)/
<!--
		Value used by the <tt>"med_dram"</tt> option.
		Highest value that
		542x based cards seem to be able to handle with linear
		addressing enabled.
-->
<tt>&dquot;med_dram&dquot;</tt> オプションで使用する値です。
542x ベースのカードで扱える最大値は、リニアアドレッシングを有効にすれ
ば扱えるようです。
	<tag/0x22 (60 MHz)/
<!--
		Value that most (Extended RAS) 542x cards seem to be able to
		handle, used by	the <tt>"fast_dram"</tt> option.
-->
ほとんどの(拡張 RAS)542x カードでは扱えると思われる値であり、
<tt>&dquot;fast_dram&dquot;</tt> オプションで使われます。
	</descrip>

<!--
	The official maximum of the 542x chips is 50 MHz.
	The official spec. for the 5434 is also 50 MHz (0x1c)
	and that for
        the 5429 and 5430 is probably 60 MHz (0x22). Current revisions
	of the 5434 (E and greater) support 60 MHz MCLK in graphics modes,
	and the driver will program this automatically. If it causes
	problems, use the <tt>"slow_dram"</tt> option.
-->
542x チップの公式な最大周波数は 50 MHz です。5434 の公式仕様でも 50
MHz (0x1c) で、5429 と 5430 の場合はたぶん 60Hz(0x22)です。現在のリビ
ジョンの 5434(E 以降)は 64 MHz の MLCK をグラフィックスモードでサポー
トし、ドライバはこれを自動的にプログラムします。これが問題を引き起こし
た場合は &dquot;slow_dram&dquot; オプションを使用してください。

<!--
	The driver takes the MCLK into account for clock limits that
	are determined by DRAM bandwidth.
-->
DRAM のバンド幅で決めるクロックの上限について、ドライバは MLCK も考慮
します。

<!--
	For the 546x chips, the BCLK is the Rambus access clock.
	Typical values live in the range of 258 MHz to 300 MHz.  If you
	have troubles, such as a black checkerboard pattern on the
	screen, try using the <tt>"med_dram"</tt> or
	<tt>"slow_dram"</tt> options.
-->
564x チップの場合、BCLK は Rambus アクセスクロックです。典型的な値は
258 MHz から 300 MHz の範囲にあります。問題が起こる場合には(黒い市松模
様が画面に表示される等)、<tt>"med_dram"</tt> オプションか 
<tt>"slow_dram"</tt> オプションを試してください。

<!--
	In all cases, if you are not having any problems (performance
	or stability at high dot clocks), it is best not to use any of
	the DRAM options.
-->
どんな場合であれ、問題さえ起きなければ(性能や高いドットクロックでの安
定性)、DRAM 関係のオプションを使わないに越したことはありません。

<!--
<tag>
Option "no_bitblt"
</tag>
	This option, when used with a 5426/28/29/3x/46/6x/754x, will have the 
	effect of
        disabling the use of the BitBLT engine (which the 5424 does not
        have), while retaining some acceleration. This will be useful for
        problems related to functions that use the BitBLT engine.
	Performance is significantly decreased.
-->
<tag>
Option &dquot;no_bitblt&dquot;
</tag>
5426/28/29/3x/46/6x/754x で使用する場合、このオプションは
BitBLT エンジンの仕様を無効にする効果がありますが(5424 では効果はあり
ません)、一部のアクセラレーション機能はそのままです。これは BitBLT エ
ンジンを使う機能に関連する問題に対処する際に役に立ちます。性能は著しく
悪くなります。
<!--
<tag>
Option "no_imageblt"
</tag>
        This option is now obsolete. The "xaa_no_color_exp" option has a
        somewhat similar effect.
-->
<tag>
Option &dquot;no_imageblt&dquot;
</tag>
このオプションは用いられなくなりました。"xaa_no_color_exp" オプション
の効果はいくらか似ています。
<!--
<tag>
chipset "clgd54xx"
</tag>
	Force detection of the given chipset. Useful if you have a supported
        chipset that is not properly detected, or if you have an unsupported
        chip that might be compatible with a supported one.
-->
<tag>
chipset &dquot;clgd54xx&dquot;
</tag>
強制的に与えられたチップセットを検出します。サポートされているのにうま
く検出されないチップセットを使う時や、サポートされているチップセットに
互換と思われる未サポートのチップセットを使う時に便利です。
<tag>
<!--
videoram 1024 (or another value)
-->
videoram 1024 (または別の値)
</tag>
<!--
	This option will override the detected amount of video memory, and
        pretend the given amount of memory is present on the card. This is
        useful on cards with 2Mbyte of memory whose DRAM configuration is
        not compatible with the way the driver enables the upper megabyte of
        memory, or if the memory detection goes wrong. It must be specified
	in the Device section.
-->
このオプションは検出したビデオメモリの量を上書きし、指定された量のメモ
リがカードに載っているふりをして動作します。このオプションが役に立つの
は、メモリ 2MB のカードにおいて DRAM の構成がドライバが上位のメモリ領
域を有効にする方法と互換でない時や、メモリの検出がうまく行かない時です。
このオプションは Device セクションで行わなければなりません。
<!--
<tag>
Option "fifo_conservative" (5424/6/8/9/3x/46/6x/754x)
</tag>
	This option will set the CRT FIFO threshold to a conservative value
	for high dot clocks (&gt;= 65 MHz), reducing performance but hopefully
	alleviating problems with what can be described as flashing
	`streaks', `jitter' or horizontally repeated display areas on the
	screen (especially when	a BitBLT operation is in progress, e.g.
	scrolling).
-->
<tag>
Option &dquot;fifo_conservative&dquot; (5424/6/8/9/3x/46/6x/754x)
</tag>
このオプションは、高いドットクロック値(&gt;= 65 MHz)に対する CRT の 
FIFO の閾値を安全側の値に設定し、性能は落ちるものの、縞が光ったり、画
面が揺れたり、スクリーン上で水平方向に表示が繰り返したり(特に、この現
象はスクロール等の BitBLT 操作を行っている途中に起こります)するといっ
た問題をたぶん緩和します。
<!--
<tag>
Option "fifo_aggressive" (5424/6/8/9/3x/46/6x/754x)
</tag>
	This option will set the CRT FIFO threshold to an aggressive value;
	it will be the same as that used for lower dot clocks.
        Theoretically it improves performance at high dot clocks, but
        it does not help in the vast majority of cases.  In some
	cases with 546x chips, however, this option can help
	reduce horizontal streaks or otherwise fix abnormal
	display problems (display shifted to the left, etc.).
-->
<tag>
Option &dquot;fifo_aggressive&dquot; (5424/6/8/9/3x/46/6x/754x)
</tag>
このオプションは CRT の FIFO の閾値を危険側の値に設定します。つまり、
ドットクロック値が低い時に使うのと同じ値にします。理論的にはドットクロッ
ク値が高い時の性能が良くなりますが、大抵の場合は効果がありません。しか
し、546x を使っている場合には、水平の縞が減ったり、その他の表示がおか
しくなる問題(表示が左にずれる等)を解決することもあります。
<!--
<tag>
Option "no_2mb_banksel" (542x)
</tag>
	This option will cause the driver not to set the `DRAM bank select'
	bit to enable the upper megabyte of memory on a 2Mbyte card. This
	should be helpful with cards equipped with 512Kx8 DRAMs, as opposed
	to 256Kx4/16 DRAMs, when using a virtual screen configuration that
	uses more than 1Mbyte of memory.
-->
<tag>
Option &dquot;no_2mb_banksel&dquot; (542x)
</tag>
このオプションを使うと、ドライバは 2M バイトカードの上位 1M 分のメモリ
を有効にするための「DRAM バンク選択」ビットの設定を行いません。これは 
1MB 以上のメモリを使う仮想スクリーンの設定を行っている時に、512x8 の 
DRAM を積んでいるマシンでは役に立つでしょう(256Kx4/16 DRAM の場合には
役に立ちません)。
<!--
<tag>
Option "probe_clocks"
</tag>
	This option will force probing of dot clocks on the card. This
        should not be necessary, since the clocks are fixed and the same for
        all Cirrus chipsets.
-->
<tag>
Option &dquot;probe_clocks&dquot;
</tag>
このオプションを指定すると、カードのドットクロック値の検出を強制的に行
います。このオプションは必ずしも必要ではありません。というのも、Cirrus 
製のチップセットは全てのクロック値が固定かつ同じ値だからです。
<!--
<tag>
Clockchip "cirrus"
</tag>
	This enables programmable clocks. It must be specified in the
	Device section. With this option, the clocks the modes use will
	be automatically selected. Do not specify any Clocks line. This
	option makes a 12.5 MHz clock possible for a 320x200 Doublescan
	mode. Note that some frequencies may be unstable (resulting in
	a `wavy' screen). Only tried
	and tested frequencies (like the default clocks) are guaranteed
	to be stable.
-->
<tag>
Clockchip &dquot;cirrus&dquot;
</tag>
このオプションはプログラマブルクロックを有効にします。このオプションは 
Device セクションで指定しなければなりません。このオプションを使うと、
モードが使うクロックは自動的に選択されます。Clocks 行を指定してはいけ
ません。このオプションは 320x200 のダブルスキャンモードに対して 12.5
MHz を使うことを可能にします。一部の周波数は不安定(スクリーンが「波打
つ」)かもしれない点に注意してください。安定だと保証できるのは(デフォル
トのクロック値のように)テストを行った周波数だけです。
<!--
<tag>
Option "linear"  (542x/6/8/9/3x/754x on VL-bus)
</tag>
	This enables linear addressing, which is the mapping of the entire
        framebuffer to a high address beyond system memory, so that SVGA
        bank switching is not necessary. It enhances performance at 256
        colors, and is currently required for 16bpp, 24bpp, and 32bpp. See 
	section 4 for details.
-->
<tag>
Option &dquot;linear&dquot;  (VL-bus 用 542x/6/8/9/3x/754x)
</tag>
このオプションはリニアアドレッシングを有効にします。リニアアドレッシン
グはフレームバッファ全体を上位アドレスのシステムメモリを越える部分にマッ
プするもので、SVGA のバンク切り替えを不要にします。これにより 256 色モー
ド時の性能は向上します。また、現在は 16bpp, 24bpp, 32bpp 時にはリニア
アドレッシングが必要です。詳しくはセクション 4 を参照してください。

<!--
<tag>
Option "nolinear"  (542x/6/8/9/3x/754x on PCI bus)
</tag>
        Linear addressing is the default mode of operation on any
        PCI-bus chip. For these configurations, this option disables
        linear addressing.
-->
<tag>
Option &dquot;nolinear&dquot;  (PCI バス用 542x/6/8/9/3x/754x)
</tag>
PCI バス用のチップ全てについて、リニアアドレッシングはデフォルトの操作
モードです。このような構成の場合、このオプションはリニアアドレッシング
を無効にします。
<tag>
<!-- Membase 0x00e00000 (or a different address) (542x/6/8/9/3x/46/754x) -->
Membase 0x00e00000 (または別のアドレス) (542x/6/8/9/3x/46/754x)
</tag>
<!--
	This sets the physical memory base address of the linear
        framebuffer. It must be specified in the Device section. It is
	required for non-PCI linear addressing configurations.
-->
このオプションはリニアフレームバッファの物理的なベースアドレスを設定し
ます。このオプションは Device セクションで指定しなければなりません。
PCI でないカードでリニアアドレッシングを使う場合には、この指定が必要で
す。
<!--
<tag>
Option "favour_bitblt" (5426 only)
</tag>
	This option is now obsolete.
-->
<tag>
Option &dquot;favour_bitblt&dquot; (5426 only)
</tag>
このオプションは使われなくなりました。
<!--
<tag>
Option "mmio" (5429, 7548)
</tag>
	This enables the use of memory-mapped I/O to talk to the BitBLT
        engine on the 543x/5429, which is a bit faster. This is option
	has no effect when not using the BitBLT engine (e.g. when using
	"no_bitblt").
-->
<tag>
Option &dquot;mmio&dquot; (5429, 7548)
</tag>
このオプションは、543x/5429 が BitBLT エンジンとやりとりをするときにメ
モリマップト I/O を使うようにします。これにより、少し速くなります。
BitBLT エンジンを使わない時(例えば、"no_bitblt" 使用時)には、このオプ
ションは無効です。
<!--
<tag>
Option "no_mmio" (543x/4x)
</tag>
	This disables the use of memory-mapped I/O to talk to the BitBLT
        engine on any chip for which it is the default mode of
        operation. 
-->
<tag>
Option &dquot;no_mmio&dquot; (543x/4x)
</tag>
このオプションは、デフォルトの操作モードでメモリマップト I/O を使うチッ
プに対して、メモリマップト I/O を使わないようにします。
<!--
<tag>
Option "sw_cursor" (542x/3x/46/6x)
</tag>
	This disables use of the hardware cursor provided by the chip. Try
        this if the cursor seems to have problems. In particular, use this
	when using dot clocks greater than 85 MHz on the 5434/6 since those
	chips don't fully support the hardware cursor at those clocks.
-->
<tag>
Option &dquot;sw_cursor&dquot; (542x/3x/46/6x)
</tag>
このオプションはチップの機能であるハードウェアカーソルを無効にします。
カーソルがおかしい時には、このオプションを試しましょう。特に、5434/6 
で 85MHz 以上のドットクロックを使う時にはこのオプションを試しましょう。
というのも、これらのチップはこのクロックではハードウェアカーソルのサポー
トが完全ではないからです。
<!--
<tag>
Option "clgd6225_lcd"
</tag>
	Provides a work-around for problems on the LCD screen of some
	62x5 laptop chipsets with maximum white colors.
-->
<tag>
Option &dquot;clgd6225_lcd&dquot;
</tag>
62x5 を使っている一部のノート PC における白色の最大値に関する問題を回
避するためのオプションです。
<!--
<tag>
Option "no_pixmap_cache"
</tag>
	When XAA is used (on any BitBLT chip), this option disables
	the use of a pixmap cache in XAA. It could help with certain
	drawing bugs.
-->
<tag>
Option &dquot;no_pixmap_cache&dquot;
</tag>
(BitBLT チップ全てにおいて)XAA を使っている時、このオプションは XAA に
おけるピックスマップキャッシュを使わないようにします。これにより、描画
に関するバグの一部に対処できます。
<!--
<tag>
Option "xaa_no_color_exp"
</tag>
	When XAA is used, this option disables the use of hardware color
	expansion features by XAA. Again, this might help with certain
	drawing bugs.
-->
<tag>
Option &dquot;xaa_no_color_exp&dquot;
</tag>
XAA を使っている時、このオプションは XAA がハードウェアの色展開機能を
使わないようにします。このオプションも、描画に関するバグの一部に対処で
きます。
<!--
<tag>
Option "no_stretch" (754x)
</tag>
	Disable automatic stretching (horizontal and vertical expansion)
	of 640x480 on a 800x600 LCD.
-->
<tag>
Option &dquot;no_stretch&dquot; (754x)
</tag>
800x600 の LCD で 640x480 表示を自動的に拡大する(水平・垂直方向に伸ば
す)機能を無効にします。
<!--
<tag>
Option "pci_retry" (546x)
</tag>
        Enables a performance feature for PCI based cards.  When this
	feature is enabled, the driver code will attempt to transmit
	data on the PCI bus as fast as possible.  For the most part,
	this option is safe, but may cause trouble with other PCI
	devices such as PCI network cards, sound cards, SCSI
	controllers, etc.  When this option is not selected, a safer
	approach (polling the VGA's command queue) is taken.
-->
<tag>
Option &dquot;pci_retry&dquot; (546x)
</tag>
PCI ベースのカードの性能調節機能を有効にします。この機能が有効ならば、
ドライバのコードは PCI バスでできる限り速くデータを送ろうとします。大
抵の場合このオプションは安全ですが、他の PCI デバイス(PCI のネットワー
クカードやサウンドカード、SCSI コントローラ等)と組み合わせた時に問題を
起こすかもしれません。このオプションを選択して時は、より安全な方法(VGA 
コマンドキューのポーリング)が使われます。
</descrip>

<!-- <sect> Mode issues <p> -->
<sect> モードについて <p>

<!--
The accelerated 256-color driver uses 16K bytes of scratch space in video
memory, and the hardware cursor also uses 1K (2K on the '6X). Consequently, 
a 1024x1024 virtual resolution should not be used with a 1Mbyte card.
-->
アクセラレーション付きの 256 色ドライバは作業用空間をビデオメモリに確
保します。また、ハードウェアカーソルもビデオメモリを 1K (546x では 2K)
使います。したがって、1024x1024 の仮想解像度はメモリ 1MB のビデオカー
ドで使うことはできません。

<!--
On older chips,
the use of a higher dot clock frequencies has a negative effect on the
performance of graphics operations, especially BitBlt, when little
video memory bandwidth is left for drawing (the amount is displayed
during start-up for 542x/3x/46/6x chips).  For the 542x/3x chips, with
default MCLK setting (0x1c) and a 32-bit memory interface, performance
with a 65 MHz dot clock can be half of that with a dot clock of 25
MHz.  So if you are short on memory bandwidth and experience blitting
slowness, try using the lowest dot clock that is acceptable; for
example, on a 14" or 15" screen 800x600 with high refresh (50 MHz dot
clock) is not so bad, with a large virtual screen.
-->
古いチップでは、ドットクロック周波数を高くしすぎると、描画に使うビデオ
メモリのバンド幅(542x/3x/46/6x の場合、この量は起動時に表示されます)が
ほとんどない時にグラフィックス操作(特に BitBLT)の性能に悪影響が現われ
ます。542x/3x チップの場合、デフォルトの MCLK 設定(0x1c)と 32 ビットメ
モリインタフェースを使うと、ドットクロック値が 65 MHz の時の性能は、ドッ
トクロック値が 25MHz の時の半分になることもあります。メモリのバンド幅
が足りなくなり、動作が遅くなった場合には、許容できる範囲でドットクロッ
クをできるだけ低くしましょう。例えば、14 インチや 15 インチのディスプ
レイでは、800x600 を高いリフレッシュレート(ドットクロック50 MHz)で使い、
大きな仮想スクリーンと組み合わせるのも悪くないでしょう。
<!--
blitting って手元の辞書に載ってないんですけど…。
-->

<!--
5434-based cards with 2Mbyte of memory do much better at high dot clocks;
the DRAM bandwidth is basically double that of the 542x series. The 543x
chips also make more efficient use of the available DRAM bandwidth. The
same goes for the 544x.
-->
2MB のメモリを積んでいる 5434 ベースのカードでは、ドットクロックが高い
時にももっとうまく動作します。DRAM のバンド幅は基本的に 542x シリーズ
の倍です。543x チップは DRAM のバンド幅をもっと有効に利用します。同じ
ことが 544x にも言えます。

<!--
<sect> Linear addressing and 16bpp/24bpp/32bpp modes <p>
-->
<sect> リニアアドレッシングと 16bpp/24bpp/32bpp モード <p>

<!--
Currently the framebuffer code 16-bit, 24-bit, and 32-bit pixels  in 
the SVGA
server requires linear addressing.  Option 
"linear" can be specified in a
depth-specific screen section to enable linear addressing; a MemBase
setting (in the device section) is probably also required (although they
are both automatically selected with PCI cards, like 5446, 546x, and some
543x based cards). There
are a number of different card configurations.
-->
現在、SVGA サーバのフレームバッファのコードでは、 16bpp, 24bpp, 32bpp
を使うにはリニアアドレッシングが必要になります。色の深さ別の Screen セ
クションで Option "linear" を指定することで、リニアアドレッシングを有
効にすることができます。MemBase の設定(Device セクション)も多分必要で
す。(ただし、PCI カードであればこれらの値は自動的に選択されます。この
ようなカードには、 5446, 546x や 543x ベースの一部のカード等があります。)
カードの設定は異なるものがいろいろあります。

<!--
If you have a 542x/543x on the ISA bus, and you have 16Mb or more of
system memory, linear addressing is impossible. 16bpp is out, sorry.
If you have less than 14Mb of memory, you may be able to map the
framebuffer at 14Mb, using `<tt>MemBase 0x00e00000</tt>'. That's five zeros
after the `e'. Unfortunately many ISA cards don't support linear
addressing.
-->
ISA バス用の 542x/543x を使っており、かつシステムのメモリが 16MB 以上
でならば、リニアアドレッシングを使うことはできません。申し訳ないですが、
16bpp も駄目です。メモリが 14MB 以下であれば、
`<tt>MemBase 0x00e00000</tt>' を指定することによりフレームバッファを
14MB の位置にマップすることができるかもしれません。`e' の後には 0 が 5
個あります。残念ながら、ISA カードの多くはリニアアドレッシングをサポー
トしていません。

<!--
If you have a 5424/26/28/29 on VESA local bus, the situation is more
complicated. There are two different types of cards w.r.t. linear
addressing:
-->
VESA ローカルバス用の 5424/26/28/29 を使っている場合、話はもっと複雑で
す。リニアアドレッシングに関して 2 つの異なるタイプがあるのです。

<itemize>
<!--
<item>Cards that can only map in the lower 16Mb, like cards on the ISA bus.
  This is the case with most cards. The same
  restrictions apply (i.e. you must have less than 16Mb of memory).
-->
<item>ISA バスのカードと同様に、16MB 以下の領域にしかマップを行えない
カード。ほとんどのカードはこれに該当します。同じ制限が当てはまります
(つまり、システムのメモリが 16MB 未満でなければなりません)。
<!--
<item>Cards that connect address line A26 and always map at 64Mb + 14Mb or
  64Mb. In
  this case specify `<tt>MemBase 0x04e00000</tt>' or `<tt>MemBase
  0x04000000</tt>'. This assumes you have a VLB motherboard implementation
  that implements A26. Alternatively the card may map to 0x2000000, and
  recent cards like the 5429 usually map to 0x03e00000 (62Mb).
-->
<item>A26 ラインに接続し、64MB + 14MB または 64MB の位置に必ずマップを
行うカード。この場合には `<tt>MemBase 0x04e00000</tt>' または
`<tt>MemBase 0x04000000</tt>' を指定してください。この指定は、A26 ライ
ンを実装した VLB マザーボードを使うことを前提にしています。この位置で
はなく、0x2000000 にマップするカードがあるかもしれませんし、5429 等の
最近のカードは通常、0x03e00000 (62MB) にマップするようです。
</itemize>
<!--
You will probably have to rely on trial and error. If you have less
than 16Mb memory, the `wrong' membase setting will result in no graphics
being displayed, but you can probably exit with ctrl-alt-backspace.
-->
設定を行うにはおそらく試行錯誤するしか無いでしょう。システムのメモリが
16MB より小さい場合、MemBase の値を「誤って」設定すると全くグラフィッ
クスが表示されなくなるでしょう。ですが、多分 ctrl-alt-backspace のキー
操作でサーバを終了させることができます。

<!--
If you have &gt;= 16Mb memory, the first type of card (and even the second
type with a stupid VLB motherboard) will result in a crash (probably a
spontaneous hard reboot).
-->
メモリが 16MB 以上の場合、前者のタイプのカードを使うと(後者のタイプで
も頭の悪い VLB マザーボードを使っている時)はマシンがクラッシュするでしょ
う(たぶん突発的にハードリブートします)。

<!--
It may be possible to find out the type by visual inspection. If the card
has a pin at A26, it is likely to map beyond 64Mb. To do this, take the card
out. At the VESA local bus pins (this is the smaller strip of connector pins
at the non-slot side of the card), consider the right side (this is the side
of the board where all the chips are mounted). There are 45 pins here. They
are numbered 1 to 45, from the inside (i.e. the one nearest to the card end
is 45). Counting from the inside, the 17th pin is probably not present, then
there are pins at 18-20. The 21st is A30, the 22nd is A28 and the 23rd is
A26. So, if we have no pins at at 21-23, the card doesn't map beyond 64Mb. If
there's only a gap of two pins at 21 and 22 (or they are both present) and
there's a pin at 23, the card does probably map beyond 64Mb. If there's a
little logic near that pin on the card, it's more likely.
-->
カードのタイプは自分の目で見て調べることもできます。カードの A26 にピ
ンがあれば、これは 64MB 以上の位置にマップを行うことができると思われま
す。これを行うには、カードを取り出してください。VESA ローカルバスのピ
ン(これはカードのスロットでない側にある小さいコネクタピンです)の右側を
見てください(全てのチップはボードのこちら側に装着されます)。ここには
45 本のピンがあります。このピンには内側から順に 1 番から 45 番までの番
号が付いています(つまりカードの端に最も近いピンが 45番です)。内側から
数えていくと、17 番目のピンはたぶんありませんが、18-20番目のピンがあり
ます。21 番目のピンが A30 で、22 番目が A28, 23番目が A26 です。つまり、
21-23 番のピンがなければ、このカードは 64MB 以上の位置へのマッピングは
行えません。21 番と 22 番の位置に隙間しかなく(あるいは、どちらも存在す
る)、かつ 23 番の位置にピンがある場合には、このカードはたぶん 64MB を
越える位置へマップを行うことができます。カード上のそのピンの近くに回路
があれば、その可能性はさらに高くなります。

<!--
With a 543x on the local bus things are simpler (the Cirrus Logic windows
drivers use it), but it is not quite without problems.
-->
ローカルバス用の 543x を使う場合には、問題はもっと単純になりますが
(Cirrus Logic の Windows 用ドライバはこれを用いています)、それでも問題
が無いわけではありません。

<!--
With a card on the PCI bus, there is a PCI configuration register that holds
the framebuffer base address, which is read automatically by the driver
if a PCI card is detected. The `scanpci' program 
can read out the PCI configuration and show the base address.
-->
PCI バス用のカードを使う場合、フレームバッファのベースアドレスを格納す
る PCI 構成レジスタというものがあります。PCI カードが検出されると、ド
ライバはこのレジスタを自動的に読み込みます。`scanpci' プログラムを使え
ば、PCI 構成を読み出し、ベースアドレスを表示することができます。

<!--
On the VESA local bus, most 543x cards have a default mapping address of
64Mb, with jumper options for 2048Mb and 32Mb. This is probably described in
the documentation that came with the card, or look in the MS-Windows system.ini
file (something with linearaddr = &lt;offset in megabytes&gt;). These different
settings were added by Cirrus Logic after finding that many VLB motherboard
implementations don't implement different address pins. The driver assumes
a default of 64Mb if MemBase isn't specified. A few examples for MemBase:
-->
VESA ローカルバスの場合、543x カードのほとんどはデフォルトのアドレスが
64MB であり、ジャンパ設定で 2048MB と 32MB にすることができます。これ
については多分カードに付属の説明書か、MS-Windows の system.ini ファイ
ルに(linearaddr = &lt;メガバイト単位のオフセット&gt; 等と)書かれている
と思います。このように設定を変更できる仕様は、アドレスピンでベースアド
レスを変えることができない実装の VLB マザーボードがたくさんあることが
分かった後に、Cirrus Logic が追加したものです。MemBase が指定されなけ
れば、ドライバはデフォルトの 64MB であるものとします。MemBase の設定の
例をいくつか示します:
<tscreen><verb>
	MemBase	0x02000000	32Mb
	MemBase	0x04000000	64Mb
	MemBase	0x80000000	2048Mb
</verb></tscreen>

<!--
Finally, for 546X cards, you are in luck:  there are no "issues" to worry
about.  The '6X will always use linear addressing and memory-mapped I/O,
and will use the memory addresses up near 4GB.  Yay for PCI!
-->
最後に 546x カードの場合ですが、これを持っているなら運がいいと言えましょ
う。心配するような「問題」は全くありません。546X は常にリニアアドレッ
シングとメモリマップト I/O を使うことができますし、4GB 近くまでのメモ
リアドレスを使うことができます。PCI 万歳!

<!--
The 16bpp and 32bpp modes are now fully accelerated, thanks to XAA. On
more recent chips like the 5436/46 and the 546X, 24bpp is also fully
accelerated.
So although 
there are now up to 4 times as many bits to display, the X server shouldn't
feel overly sluggish.  Note also that the 24bpp and 32bpp modes are only 
supported on a limited set of cards, and with at least 2Mb of memory.
-->
XAA のおかげで、現在は 16bpp と 32bpp モードで完全にアクセラレーション
が効きます。5436/46, 546X のような最近のチップでは、24bpp でも完全にア
クセラレーションが効きます。したがって、表示するビット数は 4 倍まで増
えますが、X サーバが遅くなりすぎることはないはずです。24bpp モードと
32bpp モードは限られたカードでしかサポートされていないことと、少なくと
も 2MB のメモリを積んでいなければならない点に注意してください。

<!--
In the <tt>XF86Config</tt> <tt>"Screen"</tt> section, a
<tt>"Display"</tt> subsection must be
defined for each depth that you want to run, with separate Modes
and virtual screen size. Example (2Mb of video memory):
-->
<tt>XF86Config</tt> ファイルの <tt>"Screen"</tt> セクションでは、
使いたい色の深さそれぞれに対して <tt>"Display"</tt> サブセクションで定
義を行わなければなりません。この時、Modes と仮想スクリーンのサイズもサ
ブセクションごとに指定します。例(ビデオメモリ 2MB の場合)を以下に示し
ます:
<tscreen><verb>
Section "screen"
    SubSection "Display"
	Depth 8
	Virtual 1280 1024
	ViewPort 0 0
	Modes "640x480" "800x600" "1024x768"
	Option "linear"
    EndSubSection
    SubSection "Display"
	Depth 16
	Virtual 1024 992
	ViewPort 0 0
	Modes "640x480" "800x600" "1024x768"
	Option "linear"
    EndSubSection
    SubSection "Display"
	Depth 32
	Virtual 832 600
	ViewPort 0 0
	Modes "640x480" "800x600"
	Option "linear"
    EndSubSection
EndSection
</verb></tscreen>

<!--
<sect> The ``cl64xx'' Driver<label id="cl64xx"><p>
-->
<sect> ``cl64xx'' ドライバ<label id="cl64xx"><p>
<!--
The cl64xx driver supports the cl-gd6440 found in many laptops.  For
example, Nan Tan Computer's NP9200, NP3600, etc., which are OEM-ed by
Sager, ProStar, etc. and Texas Instruments TI4000 series are supported.
-->
cl64xx ドライバは多くのラップトップで使われている cl-gd6440 をサポート
しています。例えば、Nan Tan Computer 製の NP9200, NP3600 等があり、こ
のマシンは Sager や ProStar に OEM 供給されています。また、
Texas Instruments の TI4000 シリーズもサポートしています。

<!--
The driver works in LCD-only, CRT-only, and the chip's SimulScan mode
which allows one to use both the LCD and external CRT displays
simultaneously.  The LCD and Simulscan modes' resolution is 640x480
while, for CRT-only, the standard VESA modes of 640x480, 600x800, and
1024x768 have been tested.  Interlaced 1024x768 mode has never been
debugged and does not work on the machines tested.
-->
このモードは LCD 専用モード、CRT 専用モード、チップの SimulScan モード
で動作します。SimulScan モードを使うと、LCD と外部 CRT ディスプレイを
同時に使うことができます。LCD モードと SimulScan モードの解像度は
640x480 ですが、CRT 専用モードでは標準 VESA モードの 640x480, 600x800,
1024x768 がテストされています。1024x768 インタレースモードは、デバッグ
は全くされておらず、テストしたマシンでは動作しませんでした。

<!--
The chip has a documented maximum operating limit for its dot clock
that is related to its core voltage.  Specifically, for 5.0V the
maximum dot clock is 65MHz and for 3.3V the maximum dot clock is
40MHz.  The driver checks the core voltage and limits the maximum dot
clock to the corresponding value.  This translates to a maximum  
resolution of about 1024x768 at a 60Hz refresh rate.  The internal 
frequency generator can be programmed higher than these limits and is
done so during server startup when the clocks are probed which
momentarily exceeding the chip's operating limit.  Once a set of valid
clocks is obtained, I would recommend using Clocks lines in
<tt>XF86Config</tt>.  Doing so will also decrease startup time significantly.
The clocks may be obtained by running the X server -probeonly (see the
XFree86 man page for more information about -probeonly).
-->
ドキュメントに書かれているこのチップのドットクロック値の操作上限はコア
電圧に関係します。特に、5.0V の時は最大ドットクロック値は 65MHz で、
3.3V の時は 40MHz です。ドライバはコア電圧をチェックし、最大ドットクロッ
ク値を対応する値に制限します。これにより、最大解像度はリフレッシュレー
トが 60Hz の時に約 1024x768 に変わります。内蔵クロックジェネレータをこ
の制限より高くプログラムされてしまうことあります。これは、サーバの起動
時に瞬間的にチップの操作上限を越えるクロック値が検出された場合に起こり
ます。ですから、有効な値が一度得られたら、<tt>XF86Config</tt> の
Clocks 行を使うことをお勧めします。この設定を行うと、サーバの起動時間
も劇的に短くなります。クロック値は X サーバに -probeonly オプションを
付けて実行すれば検出することができます(-probeonly オプションに関する詳
しいことは、XFree86 のオンラインマニュアルを参照してください)。

<!--
The data book indicates that only a configuration of one megabyte of
video memory is supported by the chip.  This size has been directly set
in the driver.  If one finds a need, one should be able to override the
default size in <tt>XF86Config</tt>.  Also, with 1MB of video memory, one should
be able to have a virtual screen size of e.g. 1024x1024 and this is  
possible in CRT-only screen mode.  However, whenever the LCD is in use
(LCD and SimulScan), the chip uses a portion of upper video ram for
its own internal acceleration purposes.  Thus, the maximum video memory
available for virtual resolution in LCD modes is about 0.75MB e.g.
1024x768.  If you set the virtual resolution above this, you will see
what might be described as a compressed aliased band when the
accelerated area is displayed.
-->
データシートを見ると、チップがサポートしているビデオメモリの構成は 1MB 
だけです。ですから、この大きさはドライバに直接設定されていますが、必要
であれば、このデフォルトのサイズを <tt>XF86Config</tt> で上書きできる
はずです。また、ビデオメモリが 1M ならば、仮想スクリーン(例えば 
1024x1024)が使えるはずですし、これは CRT 専用スクリーンモードでも使え
るはずです。しかし、LCD を使っている場合(LCD, SimulScan)は必ず、チップ
はビデオ RAM の上位アドレスの部分を内部的なアクセラレーションのために
使います。したがって、仮想スクリーンに使えるビデオメモリの最大値は約 
0.75 MB (1024x768 等で使えます)になります。これを越える大きさの仮想解
像度を設定した場合、アクセラレーションが効いている領域が表示された時に、
圧縮とエイリアシングがかかった縞とでも言えるような変なものが表示される
でしょう。

<!--
Currently, the driver does not support switching of screen modes among
LCD, CRT, and SimulScan, and, at least on the NP9200, the mode must be
chosen at OS boot time (e.g. Linux's LILO) while the BIOS is still
active.  It should be possible to add screen mode type selection as a 
ModeLine flag option in <tt>XF86Config</tt> to allow for dynamic screen mode
selection from within the X server.  Finally, the driver does not currently
support any of the powerdown saving features of the chip nor does it  
shut off the LCD's backlight on screen blank.  I hope to implement all
these features in future releases.
-->
現在は、このドライバは LCD, CRT, SimulScan 間のスクリーンモード切り替
えをサポートしていません。また、少なくとも NP9200 上では、このモードは 
OS の起動時で BIOS がまだ有効な時に(例えば Linux なら LILO 等で)選択し
なければなりません。
<tt>XF86Config</tt> ファイルの ModeLine オプションのようなスクリーンモー
ドの種類の選択を追加をできるようにし、X サーバ上から動的なスクリーンモー
ド切り替えをできるようにすべきです。最後になりますが、このドライバは現
在はチップが持つ電源切断の省電力機能は全くサポートしていませんし、スク
リーンブランク時に LCD のバックライトを消す機能もサポートしていません。
将来のリリースではこれらの機能を全て実装したいと思っています。

<!--
Some notes regarding the CL-GD6420:
-->
CL-GD6420 に関するメモ:

<!--
The amount of video memory may not always be detected correctly. The driver
source code includes two methods, one defined out. Better specify the amount
of video memory with a VideoRam line in the Device section. Use the standard
640x480 60 Hz standard mode timing with 25.175 MHz dot clock for CRT or
SIMulscan mode; for LCD-only operation, use the same mode timing but with
a dot clock of 16.257 MHz. Standard 56 Hz 800x600 is also supported on
the CRT.
-->
ビデオメモリの量は必ずしも正しく検出されません。ドライバのソースコード
には 2 つの方法が組み込まれていますが、片方は使わないようになっていま
す。Device セクションの VideoRam 行でビデオメモリの量を指定する方が良
いでしょう。CRT モードや SimulScan モードでは、ドットクロック値 25.175 
MHz で標準の 640x480 60Hz のモードタイミングを使いましょう。LCD 専用モー
ドの時は同じモードタイミングを使いますが、ドットクロック値は 16.257
MHz にしましょう。標準の 800x600 56Hz も CRT モードでサポートされてい
ます。

<!--
The primary contact for the cl6440 problems with ``cl64xx'' driver is
Randy Hendry <em>&lt;randy@sgi.com&gt;</em>.
-->
cl6440 を ``cl64xx'' ドライバで使って不具合を見つけた場合には、まず 
Randy Hendry <em>&lt;randy@sgi.com&gt;</em> に連絡してください。

<!--
<sect> Trouble shooting with the ``cirrus'' driver<p>
-->
<sect> &dquot;cirrus&dquot; ドライバでのトラブル対策<p>

<!--
First of all, make sure that the default modes selected from your
<tt>XF86Config</tt>
is supported by your monitor, i.e. make sure the horizontal sync limit is
correct. It is best to start with standard 640x480x256 with a 25.175 MHz
clock (by specifying a single horizontal sync of 31.5) to make sure the
driver works on your configuration. The default mode used will always be
the first mode listed in the modes line, with the highest dot clock listed
for that resolution in the timing section.
-->
まず最初に、<tt>XF86Config</tt> で選択したデフォルトのモードをモニタが
サポートしていること、つまり水平同期の上限が正しいことを確認してくださ
い。まずは標準の 25.175 MHz のクロックの 640x480x256(水平同期に 31.5
だけを指定します)から始め、お使いの設定でドライバが動作することを確認
するのが良いでしょう。使われるデフォルトのモードは常にモード行に最初に
書かれたモードで、タイミングのセクションの解像度を指定するための最も高
いドットクロック値とともに使われます。

<!--
Note that some VESA standard mode timings may give problems on some monitors
(try increasing the horizontal sync pulse, i.e. the difference between
the middle two horizontal timing values, or try multiples of 16 or 32 for
all of the horizontal timing parameters).
-->
VESA 標準モードのタイミングは、一部のモニタで問題を起こすことがあるの
で注意してください(水平同期信号を増やしてみましょう。つまり真ん中の 2
つの水平タイミング値の差を大きくするか、または全ての水平タイミングのパ
ラメータを 16 か 32 の倍数にします)。
<descrip>
<!--
<tag>There is a video signal, but the screen doesn't sync.</tag>
	You are using a mode that your monitor cannot handle. If it is
	a non-standard mode, maybe you need to tweak the timings a bit. If
	it is a standard mode and frequency that your monitor should be able
	to handle, try to find different timings for a similar mode and
	frequency combination.
-->
<tag>ビデオ信号が届いているが、画面が同期出来ない場合。</tag>
モニターが扱えないモードを使っているのです。標準でないモードを使ってい
る場合、少し数値をいじる必要があるかもしれません。モニターが取り扱える
標準モードと標準周波数の場合、似たようなモードと周波数の組合せに対する
別の異なるタイミングを見つけてください。
<!--
<tag>Horizontal jitter at high dot clocks.</tag>
	This problem shows especially when drawing operations such as
	scrolling are in progress.
	If you're using a 542x/3x/46/6x/754x, try the 
	<tt>"fifo_conservative"</tt> 
	option. Failing that, you can try the <tt>"fast_dram"</tt> option, 
	or use a lower dot clock.  If that is not sufficient, the 
	<tt>"noaccel"</tt> option or <tt>"no_bitblt"</tt> will
	probably help.  When using a 546x, option
	<tt>"fifo_aggressive"</tt> can also be tried.
-->
<tag>高いドットクロックでの水平のぶれ</tag>
この問題は、スクロールのような描画操作が行われている時に顕著になります。
542x/3x/46/6x/754x を使う場合は、
<tt>&dquot;fifo_conservative&dquot;</tt> オプションを試してください。
これでうまく行かない時は、<tt>&dquot;fast_dram&dquot;</tt> オプション
を試すか、ドットクロックを下げてみてください。これでも十分でない場合は、
<tt>&dquot;noaccel&dquot;</tt> オプションか、
<tt>&dquot;no_bitblt&dquot;</tt> オプションが多分有効でしょう。546x を
使っている時は、<tt>"fifo_aggressive"</tt> オプションを試すこともでき
ます。
<!--
<tag>`Wavy' screen.</tag>
	Horizontal waving or jittering of the whole screen, continuously
	(independent from drawing operations).
	You are probably using a dot clock that is too high; it is also
	possible that there is interference with a close MCLK. Try a
	lower dot clock. You can also try to tweak the mode timings; try
	increasing the second horizontal value somewhat. Here's a 65 MHz
	dot clock 1024x768 mode (about 60 Hz) that might help:
<verb>
 "1024x768"     65      1024 1116 1228 1328     768  783  789  818
</verb>
	If you are using programmable clocks with Clockchip <tt>"cirrus"</tt>,
	try disabling it and using the default set of clocks.
-->
(描画操作に依存しないで)いつも画面全体が水平方向に波打ったり、揺れたり
する現象です。おそらくドットクロックが高すぎるのでしょう。また、近い 
MCLK 値が衝突を起こしていることも考えられます。ドットクロックを下げて
みてください。また、モードのタイミングをずらしてみても良いでしょう。2
番目の水平クロック値をいくらか増やしてみてください。ドットクロックが 
65 MHz の 1024x768 モード(約 60Hz)では、次の値が役に立つでしょう:
<verb>
 "1024x768"     65      1024 1116 1228 1328     768  783  789  818
</verb>
Clockchip <tt>"cirrus"</tt> を用いてプログラマブルクロックを使っている
場合は、これを無効にし、デフォルトのクロック値の組合せを使ってください。
<!--
<tag>Crash or hang after start-up (probably with a black screen).</tag>
	Try the <tt>"noaccel"</tt> option. If that works,
	try Option <tt>"no_bitblt"</tt> for
	somewhat better performance. Check that the BIOS settings are OK;
	in particular, disable caching of 0xa0000-0xaffff. Disabling hidden
	DRAM refresh may also help.
-->
<tag>起動後にクラッシュやハングしてしまう(画面が真っ暗になることもあります)。</tag>
<tt>&dquot;noaccel&dquot;</tt> オプションを試してみましょう。これで動
作すれば、多少性能が良くなる <tt>&dquot;no_bitblt&dquot;</tt> を試して
ください。 BIOS の設定が大丈夫かどうか確認してください。特に 
0xa0000-0xaffff をキャッシングしないようにしてください。裏 DRAM のリフ
レッシュをを無効にしても良いでしょう。
<!--
<tag>
Crash, hang, or trash on the screen after a graphics operation.
</tag>
	This may be related to a bug in one of the accelerated functions, or
	a problem with the BitBLT engine. Try the <tt>"noaccel"</tt> option,
	or the <tt>"no_bitblt"</tt> option. Also check the BIOS settings.
-->
<tag>
グラフィック操作の後にクラッシュやハングしたり、スクリーンにゴミが残る。
</tag>
この問題が起こると、アクセラレータ機能のいずれかのバグや、あるいは 
BitBLT エンジンの問題に関係しているかもしれません。
<tt>&dquot;noaccel&dquot;</tt> オプションや 
<tt>&dquot;no_bitblt&dquot;</tt> オプションを試してみてください。また、
BIOS の設定も確認しましょう。
<!--
<tag>
`Blitter timeout' messages from the server.
</tag>
	Same as for the above entry.
-->
<tag>
サーバが `Blitter timeout' というメッセージを出力する。
</tag>
前の項目と同じです。
<!--
<tag>
Screen is `wrapped' vertically. (542x/3x/46)
</tag>
	This indicates a DRAM configuration problem. If your card has two
	megabytes of memory, try the <tt>"no_2mb_banksel"</tt> option, or use
	<tt>videoram "1024"</tt> if you only use 1 Mbyte for the virtual
	screen.
-->
<tag>
画面が垂直方向に周り込んでいる。(542x/3x/46 の場合)
</tag>
DRAM の構成に問題があることを示しています。カードに 2 メガバイトのメモ
リを搭載している場合は、<tt>&dquot;no_2mb_banksel&dquot;</tt> オプショ
ンを試してください。ただし、1 メガバイトだけを仮想スクリーンに使う場合
は、<tt>videoram "1024"</tt> を使ってください。
<!--
<tag>
Corrupted text in terminal window.
</tag>
	This has been reported on non-standard video implementations.
	Use the <tt>"no_bitblt"</tt> option.
-->
<tag>
端末ウィンドウの文字が崩れる。
</tag>

標準でないビデオの実装についてこの問題が報告されています。
<tt>&dquot;no_bitblt&dquot;</tt> オプションを使ってください。
<!--
<tag>
Streaks or hangs with laptop chipset
</tag>
	This can happen if the dot clock is high enough to leave very
	little bandwidth for drawing (e.g. 40 MHz on a 512K card), and
	(5422-style) acceleration is used.
-->
<tag>
ノート PC 用チップセットで縞が出る、あるいはハングする。
</tag>
この現象が起こるのは、ドットクロック値が高すぎて描画のためのバンド幅が
十分取れない場合(例: 512K バイトのカードで 40MHz を使う場合)や、(5422 
のような形式の)アクセラレーション機能を使っている場合です。
<!--
<tag>
Occasional erroneous pixels in text, pixel dust when moving window-frame
</tag>	
	Probably related to MCLK setting that is too high (can happen
	with linear addressing even though banked mode runs OK).
-->
<tag>
時々テキストのピクセルがおかしくなったり、ウィンドウの枠を動かすとゴミピクセルが残る。
</tag>  
多分、MCLK の設定が高すぎることに関係しています(バンクモードが大丈夫で
も、リニアアドレッシングで問題になることがあります)。
<!--
<tag>
Chipset is not detected.
</tag>
	Try forcing the chipset to a type that is most similar to what
	you have.
-->
<tag>
チップセットが検出できない。
</tag>
持っているチップセットに最も近いものの型を強制的に指定してみましょう。
<!--
<tag>
Incorrect little lines (mostly white) appear occasionally
</tag>
	This may be related to a problem with system-to-video-memory BitBLT
	operations. Try the <tt>"no_imageblt"</tt> option if it annoys you.
-->
<tag>
時々、おかしな短い線分(たいてい白い）が表示される
</tag>
システムからのビデオメモリに対する BitBLT 操作における問題に関係してい
ます。気になる場合には、<tt>&dquot;no_imageblt&dquot;</tt> オプション
を試してみましょう。
<!--
<tag>
Textmode is not properly restored
</tag>
	This has been reported on some configurations. In XFree86 3.1
	the SVGA server probe would corrupt a register on the 543x,
	requiring a Chipset line. Normally you should be able to restore
	the textmode font using a utility that sets it (<tt>setfont</tt>,
	<tt>runx</tt>, <tt>restorefont</tt> on Linux).
-->
<tag>
うまくテキストモードが復元しない
</tag>
この現象はいくつかの構成で報告されています。XFree86 3.1 では、SVGA サー
バの検出結果が Chipset 行を要求し、543x のレジスタを壊していたこともあ
ります。普通は、テキストモードのフォントをセットするユーティリティ
(Linux では <tt>setfont</tt>, <tt>runx</tt>, <tt>restorefont</tt>)を使っ
てフォントを復元することができます。
<!--
<tag>
Erratic system behaviour at very high dot clocks
</tag>
	It is possible that high dot clocks on the video card interfere with
	other components in the system (e.g. disk I/O), because of a bad
	card and/or motherboard design. It has been observed on some PCI
	5428-based cards (which are very rare, since the 5428 chip doesn't
	support PCI).
-->
<tag>
ドットクロックを非常に高くするとシステムの動作が不規則になる
</tag>
カードやマザーボードの設計が悪いために、ビデオカードのドットクロックを
高くするとシステムの他の部分(例: ディスク I/O)と衝突することがあります。
この現象は 5428 ベースの PCI カードの一部で起こっています(これは滅多に
ありません。というのも、5428 チップは PCI をサポートしていないからです)。
<!--
<tag>
No mouse cursor, or cursor appears twice on screen
</tag>
        With high dot clocks, the graphics card's hardware cursor
	doesn't operate correctly.  Try option <tt>"sw_cursor"</tt> or
	use a lower screen refresh.
-->
<tag>
マウスカーソルが表示されなかったり、スクリーンに 2 つ表示される
</tag>
ドットクロックが高い場合、グラフィックカードのハードウェアカーソルが正
しく動作しません。<tt>"sw_cursor"</tt> オプションを試すか、スクリーン
のリフレッシュレートを下げましょう。
<!--
<tag>
Random/garbage pixels on far right or bottom of screen (546x)
</tag>
        This problem is usually associated with using a virtual
	screen size larger than the screen display size.  The
	garbage pixels are unused portions of the frame buffer
	that result from padding each scanline to an integral
	number of memory tiles.  To eliminate the extra pixels,
	use a screen display mode whose pixel width is evenly
	divisible by 128 / bits per pixel.
-->
<tag>
スクリーンの右端や下端にランダムなピクセルやゴミピクセルが現われる
</tag>
この問題は普通、スクリーンのディスプレイサイズよりも大きい仮想スクリー
ンのサイズを使っているときに起こります。ゴミピクセルはフレームバッファ
の未使用の部分で、各スキャンラインがバイト境界にまたがらないように調整
している結果として起こります。余計なピクセルを無くすには、スクリーンの
ピクセル幅が 128/(bpp 値) で割り切れるような表示モードを使うことです。
<!--
<tag>
Screen is wrapped horizontally on right side (546x)
</tag>
        Same as above entry.
-->
<tag>
スクリーンが右端に水平に回り込む(546x)
</tag>
上の項目と同じです。
<!--
<tag>
The screen is initially displayed correctly, but then turns all
white. (546x)
</tag>
        This problem usually happens at high bit depths and while
	the screen is changing rapidly (catting a long file or
	dragging a large window around).  The RamBus memory is
	being overdriven.  Use Option <tt>"med_dram"</tt>, or, if
	the problem persists, Option <tt>"slow_dram"</tt>.
-->
<tag>
スクリーンが最初は正しく表示されるが、その後真っ白になってしまう(564x)。
</tag>
この問題は通常、色の深さが大きい時とスクリーンが速く書き換えられている
時(長いファイルを cat で出力している時や、大きいウィンドウをぐるぐると
動かしている時)に起こります。RamBus メモリが激しく使いすぎになるのです。
まずは Option <tt>"med_dram"</tt> を使ってください。これでも問題が解決
しなければ Option <tt>"slow_dram"</tt> を使います。
</descrip>
<!--
For other screen drawing related problems, try the <tt>"noaccel"</tt>
option (if <tt>"no_bitblt"</tt> doesn't help).
-->
これ以外のスクリーン描画関連の問題については、<tt>"noaccel"</tt> オプ
ションを試してください(<tt>"no_bitblt"</tt> の効果が無い場合)。

<!--
If are having driver-related problems that are not addressed by this document,
or if you have found bugs in accelerated functions, you can try contacting
the XFree86 team (the current driver maintainer, Corin Anderson,
can be reached at <it>corina@the4cs.com</it>), or post in the
Usenet newsgroup "<it>comp.windows.x.i386unix</it>".
-->
このドキュメントに載っていないようなドライバ関連の問題が生じた場合や、
アクセラレーション付き機能のバグを発見した場合は、XFree86 チームに連絡
するか(現在のドライバのメンテナである Corin Anderson には、
<it>corina@the4cs.com</it> で連絡できます)、Usenet のニュースグループ
"<it>comp.windows.x.i386unix</it>" に投稿を行ってください。

<!--
In fact, reports (success or failure) are very welcome, especially
on configurations that have not been tested. You can do this
via the BetaReport form (mail to report@XFree86.org). You may want to
keep an eye on forthcoming beta releases at <it>www.xfree86.org</it>.
-->
実際のところ、(成功でも失敗でも)報告は大歓迎です。テストがまだ行われて
いない機器構成の場合はなおさらです。報告は BetaReport フォーム
(report@XFree86.org にメールを出してください)を使って行うことができま
す。そのうちに <it>www.xfree86.org</it> で公開されるベータリリースを狙
うというのもよいでしょう。

<!-- <sect> Tested Configurations <p> -->
<sect> テストを行った機器構成 <p>

<!--
Version 3.3.3 has had the following configurations tested:
-->
バージョン 3.3.3 をテストした機器構成を以下に示します:

<descrip>
<!--
<tag>CL-GD5446 with 2MB memory on PCI bus</tag>
-->
<tag>CL-GD5446(メモリ 2MB, PCI バス用)</tag>

<!--
<tag>CL-GD5464 with 2MB memory on PCI bus</tag>
-->
<tag>CL-GD5464(メモリ 2MB, PCI バス用)</tag>

<!--
<tag>CL-GD5465 with 4MB memory on PCI bus</tag>
-->
<tag>CL-GD5465(メモリ 4MB, PCI バス用)</tag>

<!--
<tag>CL-GD5480 with 4MB memory on PCI bus</tag>
-->
<tag>CL-GD5480(メモリ 4MB, PCI バス用)</tag>

<!--
<tag>CL-GD5465 with 4MB memory on AGP bus</tag>
-->
<tag>CL-GD5465(メモリ 4MB, AGP バス用)</tag>

</descrip>

<!--
For version 3.3, the following configurations have received a
certain amount of testing:
-->
バージョン 3.3 では、以下の機器構成である程度のテストが行われています:

<descrip>
<!--
<tag>CL-GD5446 with 2MB memory on PCI bus</tag>
	Support for dot clocks > 85 MHz has been fixed. At 16bpp, it
	has been reported that some stippled edges of window frames
	may be corrupted or show the wrong colors. The option
	"xaa_no_pixmap_cache" eliminates the problem.
-->
<tag>CL-GD5446(メモリ 2MB, PCI バス用)</tag>
85 MHz 以上のドットクロックのサポートは修正されました。16bpp 時にスティ
プルを行うと、ウィンドウ枠の端が壊れたりおかしい色で表示される問題が報
告されています。オプション "xaa_no_pixmap_cache" を使うと問題が解決し
ます。

<!--
<tag>CL-GD5464 with 4MB memory on PCI bus</tag>
-->
<tag>CL-GD5464(メモリ 4MB, PCI バス用)

<!--
<tag>CL-GD7543 on PCI bus</tag>
-->
<tag>CL-GD7543(PCI バス用)	

</descrip>

<!--
This is a list of configurations that has received testing with one or
more of the changes introduced in version XFree86 3.2A. The amount of
testing is very small for some of the configurations, and the summaries
may be incomplete. If you can contribute, please do so. For the latest
information check the latest version of this document on
<it>www.xfree86.org</it>.
-->
XFree86 3.2A で導入された変更についてのテストが行われている機器構成の
リストを示します。一部の機器についてはテストの量が大変少なく、まとめは
不完全です。テストに協力できるならば、是非そうしてください。最新の情報
を得るには、このドキュメントの最新版(<it>www.xfree86.org</it> にありま
す)をチェックしてください。

<descrip>
<!--
<tag>CL-GD5426 on VL-bus</tag>
	This configuration was only tested with an early version of
	the XAA code.
-->
<tag>CL-GD5426 (VL バス用)</tag>
この構成は、初期バージョンの XAA コードでしかテストされていません。

<!--
<tag>CL-GD5434 with 2MB memory on VL-bus</tag>
	MMIO operation is supported. This configuration was only tested
	with an early version of the XAA code.
-->
<tag>CL-GD5434 (メモリ 2MB, VL バス用)</tag>
MMIO 操作がサポートされています。この構成は初期バージョンの XAA コード
でしかテストされていません。

<!--
<tag>CL-GD5436 with 2MB memory on PCI-bus</tag>
 	Works OK. Non-MMIO operation might have problems.
-->
<tag>CL-GD5436 (メモリ 2MB, PCI バス用)</tag>

<!--
<tag>CL-GD5446 with 2MB memory on PCI bus</tag>
	Works OK in MMIO mode. 32bpp probably doesn't work. The support
	for dot clocks > 85 MHz at 8bpp may or may not work.
-->
<tag>CL-GD5446 (メモリ 2MB, PCI バス用)</tag>
MMIO モードでうまく動作します。32bpp モードはおそらく動作しません。
8bpp 時には 85 MHz 以上のドットクロックのサポートは動作したり動作しな
かったりします。

<!--
<tag>CL-GD5462 with 2MB memory on PCI bus</tag>
-->
<tag>CL-GD5462 (メモリ 2MB, PCI バス用)</tag>

<!--
<tag>CL-GD5462 with 4MB memory on PCI bus</tag>
-->
<tag>CL-GD5462 (メモリ 4MB, PCI バス用)</tag>

<!--
<tag>CL-GD5464 with 4MB memory on PCI bus</tag>
	Works OK at 8bpp, 16bpp, 24bpp and 32bpp.  CL-GD5464 works OK at
	16bpp, -weight 555.
-->
<tag>CL-GD5464 (メモリ 4MB, PCI バス用)</tag>
8bbp, 16bpp, 24bpp, 32bpp でうまく動作します。CL-GD5464 は 16bpp でう
まく動作しますが、オプション -weight 555 を指定してください。

<!--
<tag>CL-GD7543 on PCI bus</tag> Works for 8bpp, 16bpp on TFT display
	(TI TravelMate 5000).  Although the previous version, 3.2, was
	reported to broken, on some configurations it worked, while
	others were reported not to work correctly. On 800x600
	displays, the recommended dot clock is 40 MHz for TFT and 33.7
	MHz for a DSTN panel, with corresponding horizontal syncs of
	33.7 kHz for TFT and 38.6 kHz for DSTN. However, reports
	indicate that the VESA standard 40 MHz 800x600 timing may cause
	problems. The solution is decrease the fourth horizontal timing
	number or use a dot clock of 36 MHz.
-->
<tag>CL-GD7543 (PCI バス用)</tag>
TFT ディスプレイ(TI TravelMate 5000)で 8bpp, 16bpp が動作しました。前
のバージョン(3.2)では壊れていると報告がありました。動作する構成もあり
ますが、正しく動作しない構成も報告されています。800x600 のディスプレイ
では、ドットクロックの推奨値は TFT の場合は 40MHz で、DSTN の場合は
33.7 MHz です。これに対応する垂直同期は、TFT の場合は 33.7kHz で、DSTN
の場合は 38.6kHz です。しかし、VESA 標準の 40MHz 800x600 のタイミング
で問題が起こるという報告があります。これを解決する方法は、4番目の垂直
タイミング値を小さくするか、ドットクロック値を 36MHz にすることです。
</descrip>

<!--
Some configurations for which no up-to-date testing data is available:
-->
最新状態でのテストデータではないですが、以下の構成も御覧ください:

<descrip>
<!--
<tag>CL-GD5429 on VL-bus</tag>
	BitBLT operation should be fixed in 3.2. MMIO does not work,
	but not tested with with 3.2 or 3.2A.
-->
<tag>CL-GD5429 (VL バス用)</tag>
BitBLT 操作は 3.2 で修正されています。MMIO は動作しませんが、3.2 や
3.2A ではテストされていません。

<!--  
<tag>CL-GD5430 on PCI-bus</tag>
	Works OK. 24bpp was broken, but should be fixed in later
        versions (3.2A).
-->
<tag>CL-GD5430 (PCI バス用)</tag>
うまく動作します。24bpp には不具合がありますが、以降のバージョン(3.2A)
で修正されているはずです。

<!--
<tag>CL-GD5430, and CL-GD5436 and CL-GD5446 with 1MB memory</tag>
	It would be nice to know whether these chips needs the same
	treatment at 16bpp as the CL-GD5434 with 1MB memory does.
-->
<tag>CL-GD5430, CL-GD5436, CL-GD5446(メモリ 1MB)</tag>
16bpp 時に、これらのチップが 1MB のメモリを積んだ CL-GD5434 と同じ扱い
を必要とするかどうかがわかればよいのですが…。

<!--
<tag>CL-GD5434 with 1MB memory on PCI bus</tag>
	8bpp, 16pp and 24bpp work OK. 16bpp no longer has "static"
	problems. MMIO operation is supported.
-->
<tag>CL-GD5434, (メモリ 1MB, PCI バス用)</tag>
8bpp, 16bpp, 24bpp でうまく動作します。16bpp における「static」問題は
既に解決されました。MMIO 操作はサポートされています。

<!--
<tag>CL-GD5436 and CL-GD5446 with 1MB memory</tag>
	In particular the FIFO settings for this configuration are uncertain.
-->
<tag>CL-GD5436, CL-GD5446 (メモリ 1MB)</tag>
この構成に対する FIFO 設定は特に不明確です。

<!--
<tag>CL-GD7541</tag>
-->
<tag>CL-GD7541</tag>

<!--
<tag>CL-GD7548</tag>
	Should be compatible with 7543, but untested. Reports indicate
	that it worked with 3.2, and there's no reason why it shouldn't
	work with 3.2A.
-->
<tag>CL-GD7548</tag>
7543 と互換のはずですが、テストは行われていません。報告によると、3.2
では動作したそうなので、3.2A で動作しない理由はありません。

</descrip>

<!--
<sect> Driver Changes <p>
-->
<sect> ドライバの変更 <p>

<!--
Changes since XFree86 3.3.2:
-->
XFree86 3.3.2 からの変更点:
<itemize>
<!--
<item>Fix transparent screen-to-screen copies on 546x.
<item>The built-in screen saver now correctly blanks the screen
on 546x chips.
<item>Driver prevents the use of the HW cursor on the 546x when
the screen height is greater than 1023 scanlines (fix to double
pointer problem).
<item>CPU-to-screen BitBLT transfers disabled on the 5465.  This
fix should prevent 5465 AGP lockups.
<item>Fixed mode display problem with 5480 at high resolutions.
-->
<item>546x における透過的なスクリーン-スクリーンコピーの修正。
<item>546x においても、組み込みのスクリーンセーバが正しく画面をブラン
クさせられるようになりました。
<item>ドライバは 546x に対し、スクリーンの高さが 1024 スキャンラインよ
り大きい時にはハードウェアカーソルの使用を禁止するようになりました(ポ
インタが2つ表示される問題の修正です)。
<item>CPU-スクリーンの BitBLT 転送が 5465 では無効になるようにしました。
これは、5465 AGP 使用時にシステムが止まってしまうことを防ぐためです。
<item>5480 で高解像度モードを使用したときに起こる表示の問題を修正しま
した。
</itemize>

<!--
Changes since XFree86 3.2A:
-->
XFree86 3.2A からの変更点:
<itemize>
<!--
<item>A bug that caused a server crash with memory-mapped I/O operation
      on some chips has been fixed.
<item>Correct handling of dot clocks > 85 MHz on the 5436 and 5446.
<item>Preliminary support for the CL-GD7555 (no detection yet).
<item>Support has been added for the CL-GD5480 and CL-GD5465.
<item>32bpp mode has been fixed on some Alpine family chips.
<item>Support for dot clocks up to 230 MHz has been added for Laguna
      family chips.
-->
<item>一部のチップでメモリマップト I/O 操作を行ったときにサーバがクラッ
シュするバグを修正しました。
<item>5436, 5446 における 80MHz 以上のドットクロックの扱いを直しました。
<item>CL-GD7555 を予備的にサポートしました(検出はまだ行いません)。
<item>CL-GD5480 と CL-GD5465 のサポートを追加しました。
<item>一部の Alpine 系チップにおける 32bpp モードを修正しました。
<item>Laguna 系チップ向けに 230MHz までのドットクロックのサポートを追
加しました。
</itemize>

<!--
Changes since XFree86 3.2:
-->
XFree86 3.2 からの変更点:
<itemize>
<!--
<item>Enhanced acceleration using XAA on all chips with a BitBLT
        engine.
<item>Enhanced acceleration using XAA for the Laguna series (546x).
<item>24bpp mode on 5430 is fixed.
<item>Improved support for 754x, including support for LCD
        stretching/centering.
-->
<item>BitBLT エンジンを持つ全てのチップに対して、XAA を使ってアクセラ
レーションを改良しました。
<item>Laguna シリーズ(546x)に対して XAA を使ってアクセラレーションを改
良しました。
<item>5430 の 24bpp モードを修正しました。
<item>754x のサポートを改良しました。これは LCD の拡大表示や/中央表示
のサポートを含みます。
</itemize>

<verb>
$XFree86: xc/programs/Xserver/hw/xfree86/doc/Japanese/sgml/cirrus.sgml,v 3.2.2.2 1999/11/26 15:23:56 hohndel Exp $





$XConsortium: cirrus.sgml /main/12 1996/10/28 05:43:32 kaleb $
</verb>


<sect>日本語訳について<p>
日本語訳は X Japanese Documentation Project が行いました(
翻訳(XFree86 3.2): 岡本一幸
<url url="mailto:ikko-@pacific.rim.or.jp" name="&lt;ikko-@pacific.rim.or.jp&gt;">,
更新(XFree86 3.3.3 対応): 藤原輝嘉
<url url="mailto:fujiwara@linux.or.jp" name="&lt;fujiwara@linux.or.jp&gt;">)。
問題点の指摘やご意見は藤原まで御連絡ください。
原文の著作権は XFree86 プロジェクト社にあり、日本語訳の著作権は X Japanese
Documentation Project にあります。
</article>
